{"version":3,"file":"emuwebApp.min.js","sources":["emuwebApp.min.js"],"names":["ArrayBuffer","prototype","subarray","offset","length","sub","subView","Int8Array","thisView","this","i","angular","module","config","$locationProvider","html5Mode","service","viewState","sServObj","vals","curDbConfig","embeddedVals","audioGetUrl","labelGetUrl","labelType","fromUrlParams","setVals","data","$","isEmptyObject","forEach","Object","keys","key1","isArray","itm","push","key2","undefined","console","error","getSsffTrackConfig","name","res","ssffTracks","tr","getLimsOfTrack","trackName","perspectives","curPerspectiveIdx","signalCanvases","contourLims","cL","ssffTrackName","min","max","getAssignment","signalName","assign","a","signalCanvasName","getLevelDefinition","levelName","levelDefinitions","ld","controller","$scope","$rootScope","$modal","$log","$compile","$timeout","$q","$window","$document","$location","HistoryService","Iohandlerservice","Soundhandlerservice","ConfigProviderService","fontScaleService","Ssffdataservice","LevelService","dialogService","Textgridparserservice","Espsparserservice","Binarydatamaniphelper","Wavparserservice","Ssffparserservice","Drawhelperservice","Validationservice","Appcachehandler","cps","hists","fontImage","levServ","vs","dials","ssffds","shs","dhs","wps","io","ach","connectBtnLabel","tmp","dbLoaded","is2dCancasesHidden","lastkeycode","bundleList","curUserName","curBndl","lastclickedutt","filterText","windowWidth","outerWidth","demoDbName","firefox","navigator","userAgent","match","checkForNewVersion","element","bind","deleteEditArea","setWindowWidth","$digest","e","keyCode","keyMappings","shift","alt","addCurChangeObjToUndoStack","window","onbeforeunload","main","autoConnect","$on","resetToInitState","searchObject","search","loadFilesForEmbeddedApp","httpGetPath","then","showDropZone","substr","lastIndexOf","getsubmenuOpen","openSubmenu","somethingInProgressTxt","resp","EMUwebAppConfig","validRes","validateJSO","catchMouseForKeyBinding","somethingInProgress","parseWavArrBuf","messWavParser","wavJSO","curViewPort","sS","eS","Data","resetSelect","data2","parseLabelFile","parseMess","annot","setData","lNames","levelDefs","levels","l","type","attributeDefinitions","setCurLevelAttrDefs","levelCanvases","order","setState","errMess","open","status","message","JSON","stringify","loadDefaultConfig","loadSchemas","replies","setSchemas","httpGetDefaultConfig","success","handleDefaultConfigLoaded","header","wsH","initConnect","serverUrl","defaultServerUrl","handleConnectedToWSserver","setspectroSettings","spectrogramSettings","N","rangeFrom","rangeTo","dynamicRange","drawHeatMapColors","preEmphasisFilterFactor","heatMapColorAnchors","setTransitionTime","colors","transitionTime","comMode","getProtocol","protocol","version","getDoUserManagement","doUsrData","innerHandleConnectedToWSserver","getDBconfigFile","getBundleList","bdata","menuBundleClick","bndl","movesAwayFromLastSave","messModal","menuBundleSaveBtnClick","getBundle","bundleData","arrBuff","base64ToArrayBuffer","mediaFile","selectS","selectE","curClickSegments","curClickLevelName","curClickLevelType","asyncParseSsffArr","ssffFiles","ssffJso","annotation","getPermission","defer","formants","el","getAnnotationAndSaveBndl","asyncJso2ssff","messParser","encoding","arrayBufferToBase64","reject","promise","info","getData","saveBundle","resolve","uttIsDisabled","getEnlarge","index","len","getenlarge","Math","floor","getBndlColor","curColor","background-color","color","cursorInTextField","focusInTextField","cursorOutOfTextField","setsubmenuOpen","refreshTimeline","$broadcast","addLevelSegBtnClick","newName","levelLength","level","items","id","getNewId","sampleStart","sampleDur","labels","value","labelCanvasConfig","newSegmentName","addLevel","addObjToUndoStack","action","log","addLevelPointBtnClick","samplePoint","newEventName","renameSelLevelBtnClick","getcurClickLevelName","downloadTextGridBtnClick","asyncToTextGrid","openExport","spectSettingsBtnClick","connectBtnClick","url","openDemoDBbtnClick","nameOfDB","err","aboutBtnClick","clearBtnClick","modalText","isConnected","disconnectWarning","closeConnect","cmdZoomAll","setViewPort","cmdZoomIn","zoomViewPort","cmdZoomOut","cmdZoomLeft","shiftViewPort","cmdZoomRight","cmdZoomSel","cmdPlayView","playFromTo","animatePlayHead","cmdPlaySel","cmdPlayAll","setlastkeycode","c","toggleRightSideMenuHidden","setRightsubmenuOpen","getRightsubmenuOpen","changePerspective","persp","newIdx","getPerspectiveColor","cl","newfiles","wav","grid","dropText","dropDefault","handleLocalFiles","$parent","reader","FileReader","readAsArrayBuffer","onloadend","evt","target","readyState","DONE","result","currentTarget","readAsText","extension","asyncParseTextGrid","traverseFileTreeChrome","item","path","isFile","file","toUpperCase","other","isDirectory","dirReader","createReader","readEntries","entries","traverseFileTreeFirefox","size","directive","$animate","templateUrl","restrict","scope","idx","link","attr","drawLevelDetails","levelDetails","fontSize","font","fontPxSize","curAttrDef","getCurAttrDef","ctx","canvas","getContext","clearRect","width","height","sDist","posS","posE","horizontalText","getSampleDist","scaleY","offsetHeight","getTextImageTwoLines","fontType","labelColor","drawImage","curID","getcurMouseSegment","getcurClickSegments","mTxtImgWidth","getTextImage","getLastImageWidth","zeroTxtImgWidth","endBoundaryColor","fillStyle","startBoundaryColor","curEvt","curLabVal","lab","getPos","fillRect","tW","tX","labelCenter","hlY","strokeStyle","beginPath","moveTo","lineTo","stroke","toString","horizontalSubText1","horizontalSubText2","hst2","perc","round","drawLevelMarkup","selectedLevelColor","drawMovingBoundaryLine","drawCurViewPortSelected","xOffset","segMId","segCId","levelId","entry","selectedSegmentColor","getcurMouseLevelName","selectedBoundaryColor","getcurMouseLevelType","find","levelCanvasContainer","levelDef","backgroundCanvas","background","levelColor","$watch","newValue","oldValue","changeCurAttrDef","attrDefName","setCurAttrDef","hasClass","addClass","finishedAnim","removeClass","getAttrDefBtnColor","updateView","setcurMouseSegment","replace","changeAttrDef","alert","attrs","drawPlayHead","markupCanvas","playHeadAnimationInfos","posCur","curS","selectedAreaColor","drawVpOsciMarkup","reset","drawViewPortTimes","canvasLength","redraw","allPeakVals","calculatePeaks","osciPeaks","freshRedrawDrawOsciOnCanvas","currentBundleName","drawPreview","initialized","selectedBorderColor","closePath","border","newVal","oldVal","submenuOpen","pcmpp","pcmperpixel","canvas0","drawSpectMarkup","markupCtx","canvas1","drawMinMaxAndName","spectroSettings","killSpectroRenderingThread","context","primeWorker","terminate","setupEvent","imageData","createImageData","addEventListener","event","myStep","Uint8ClampedArray","img","set","putImageData","drawSpectro","buffer","startSpectroRenderingThread","Worker","spectroWorker","parseData","Float32Array","windowLength","postMessage","cmd","alpha","freq","freqLow","start","end","dynRangeInDB","pixelRatio","devicePixelRatio","sampleRate","SampleRate","streamChannels","NumChannels","transparency","stream","URL","webkitURL","exportData","exportName","cancel","close","getBlob","Blob","export","SaveToDisk","createObjectURL","updateHistoryService","fileURL","fileName","save","document","createElement","setAttribute","href","innerHTML","style","display","body","appendChild","click","download","createEvent","initEvent","dispatchEvent","revokeObjectURL","factory","myWindow","BARTLETT","BARTLETTHANN","BLACKMAN","COSINE","GAUSS","HAMMING","HANN","LANCZOS","RECTANGULAR","TRIANGULAR","curLevelAttrDefs","initialize","dragBarActive","dragBarHeight","endFreezeSample","timelineSize","editing","rightSubmenuOpen","curMousePosSample","curMouseLevelName","curMouseLevelType","curPreselColumnSample","curCorrectionToolNr","curClickLevelIndex","TransitionTime","movingBoundary","movingBoundarySample","curTaskPercCompl","mouseInEmuWebApp","states","noDBorFilesloaded","permittedActions","loadingSaving","labeling","modalShowing","prevState","curState","actionName","indexOf","b","nameOrObj","updatePlayHead","timestamp","player","isPlaying","requestAnimationFrame","samplesPassed","$apply","startS","endS","select","getViewPort","rfrom","rto","dyn","win","hm","preEmph","hmColorAnchors","parseInt","setWindowFunction","getSelect","selectDependent","selectLevel","next","Levelserv","curLev","now","getLevelDetails","setcurClickLevel","idxOfNow","selectBoundry","getWindowFunctions","getdragBarActive","setdragBarActive","getdragBarHeight","setdragBarHeight","w","s","setenlarge","getTransitionTime","levelID","levelType","levelIndex","setcurClickLevelName","setcurClickLevelType","getcurClickLevelType","getcurClickLevelIndex","getcurClickNeighbours","curClickNeighbours","setcurMouseLevelName","setcurMouseLevelType","segment","neighbour","x","curMouseSegment","curMouseX","curMouseNeighbours","getcurMouseNeighbours","selectSegmentsInSelection","levelData","rangeStart","rangeEnd","Infinity","t","setcurClickSegmentMultiple","getItemsInSelection","itemsInRange","setcurClickSegment","left","right","empty","front","back","sort","sortbyid","getselectedRange","getfirstClickSegment","getselected","isEditing","setEditing","n","countSelected","getCurrentSample","getCurrentPercent","sample","getPCMpp","parseFloat","originalEvent","pow","k","substring","getViewPortStartTime","getViewPortEndTime","getSelectedStartTime","getSelectedEndTime","sSample","eSample","oldStart","oldEnd","abs","zoomIn","newStartS","newEndS","curMouseMoveSegmentStart","seg","d","isLastSeg","getElementDetails","getLastElement","d1","d2","shiftRight","curAttrDefName","newAttrDefName","ad","setLastClick","thisPCM","getX","lastEventClick","getEvent","evtr","nearest","setlasteditArea","setlasteditAreaElem","parent","$index","lastPCM","setLastRightClick","setLastDblClick","openEditArea","setLastMove","doChange","lastEventMove","lastNeighboursMove","getElementNeighbourDetails","offsetX","layerX","clientWidth","preventDefault","restrictions","editItemName","moveLine","zoom","moveBy","zoomEventMove","getElementDetailsById","mbutton","buttons","which","editItemSize","shiftKey","position","moveBoundary","updateCurChangeObj","movedBy","movePoint","altKey","moveSegment","AnagestService","applyKeyCode","code","createNewItemAtSelection","editingElement","getlastID","getlasteditArea","val","renameLabel","esc","stopPropagation","zoomAll","zoomOut","shiftViewPortLeft","shiftViewPortRight","zoomSel","playEntireFile","playback","playAllInView","playSelected","selectFirstContourCorrectionTool","correctionTool","selectSecondContourCorrectionTool","selectThirdContourCorrectionTool","selectFourthContourCorrectionTool","selectNoContourCorrectionTool","levelUp","levelDown","snapBoundaryToNearestTopBoundary","mouseSeg","neighbor","minDist","snapBoundary","snapBoundaryToNearestBottomBoundary","snapBoundaryToNearestZeroCrossing","dist","calcDistanceToNearestZeroCrossing","levelname","expandSelSegmentsRight","addTimeMode","changeTime","addTimeValue","expandSegment","rightSide","expandSelSegmentsLeft","shrinkSelSegmentsLeft","shrinkSelSegmentsRight","toggleSideBarLeft","activeButtons","openMenu","toggleSideBarRight","selPrevItem","idLeft","idRight","selNextItem","selNextPrevItem","addItem","getlasteditAreaElem","insSeg","insertSegment","ret","ids","segName","anagestConfig","insPoint","insertPoint","pointName","insertAnagestEvents","undo","getCurrentStack","redo","deletePreselBoundary","deleteItem","deletedSegment","deleteSegments","clickSeg","deleteItemBoundary","deleteBoundary","deletedPoint","deletePoint","metaKey","ctrlKey","safeApply","fn","phase","$root","$$phase","off","delete","elem","elemHeight","deleteButton","children","saveButton","css","deleteSingleLevel","hide","saveSingleLevel","show","enlarge","asyncParseJSO","startPCM","$http","Websockethandler","prom","get","respType","responseType","getProm","logOnUser","pwd","string","annotates","fileType","asyncParseEsps","setPlayerSrc","buf","base64String","src","resetPlayerSrcFromTo","endSample","bytePerSample","BitsPerSample","origArrBuf","dv","DataView","setUint32","newData","Uint8Array","byteLength","pause","play","atts","handleUpdate","assTrackName","ass","col","getColumnOfTrack","columnName","sRaSt","getSampleRateAndStartTimeOfTrack","minMaxLims","drawValues","startTime","sR","sT","minVal","maxVal","_minVal","_maxVal","startTimeVP","endTimeVP","colStartSampleNr","colEndSampleNr","nrOfSamples","curSampleArrs","values","slice","y","curSampleInCol","curSampleInColTime","contourVal","contourNr","selectedContourColor","leftBorder","leftVal","curArr","curArrIdx","arc","PI","rightBorder","rightVal","txt","crossHairsColor","Date","$observe","worker","ssffArray","ssffArr","jso","switchMarkupContext","leave","ssffTrackname","drawCrossHairs","setSelectDrag","curMouseSample","dragStartSample","dragEndSample","bundleName","mouseX","curMouseTime","curMouseSampleTime","fill","copy","getY","updateObj","sampleBlockIdx","sampleIdx","key","getScale","str","scale","measureText","getScaleWidth","str1","str2","scaleX","drawFrame","prevPeak","h","prevH","prevX","prevY","osciColor","offsetY","layerY","clientHeight","relData","samplePerPx","numberOfChannels","peaks","minPeak","maxPeak","apply","Array","call","curPxIdx","avrVal","sum","p","peak","hDbS","sNr","drawSampleNrs","strokeText","fillText","drawZeroLine","zeroLineColor","vendor","setLineDash","zeroLineY","drawTimeAndSamples","space","offsetWidth","mouseEvt","unit","trackname","mouseY","mouseFreq","s1","s2","verticalText","smallFontSize","th","trackNameImg","labelTxtImg","sTime","eTime","applyChange","changeObj","applyOldVal","cur","renameLevel","newname","deleteLevel","deleteBoundaryInvers","deleteSegmentsInvers","insertSegmentInvers","undoStack","redoStack","curChangeObj","dataObj","dataKey","String","obj","tmpObj","oldChangeObj","pop","getNrOfPossibleUndos","buffLength","textGrid","rand","random","new","newHash","lastTextWidth","spaceTop","ctxOriginal","text","restore","text2","alignLeft","esps","loginData","username","password","errorMsg","tryLogin","Columns","calculateSamplePosInVP","colSampleNr","sampleTime","audioSample","getLabelIdx","labelIdx","maxElementID","lasteditArea","lasteditAreaElem","raiseId","amount","lowerId","curLevel","num","getOrderById","eid","getIdByOrder","details","getNextElement","remove","clientOffset","offsetLeft","top","offsetTop","createEditArea","createSelection","field","createTextRange","selRange","collapse","moveStart","moveEnd","setSelectionRange","selectionStart","selectionEnd","focus","label","labelid","textid","prepend","class","ng-model","autofocus","padding-top","insertElementDetails","labelname","duration","newElement","attrdefs","splice","setElementDetails","setPointDetails","firstid","lastid","pcm","maximum","spaceLower","spaceHigher","lvl","originalLevel","newLabelName","oldname","segments","lastNeighbours","timeRight","timeLeft","firstSegment","firstOrder","lastSegment","deleteOrder","ceil","diff2","startID","diff","newLabel","newStart","endID","found","pos","last","retOrder","retEvt","toDelete","oldName","toTop","neighTd","absDist","sampleTarget","absMinDist","thisTd","tIdx","orig","ln","origRight","origLeft","first","neighbours","segTime","lastLength","distRight","distLeft","getAllLabelsOfLevel","j","addLinkToParent","parentId","childIds","chId","links","fromID","toID","inverseAddLinkToParent","linkIdx","uuid","wsonopen","connected","conPromise","wsonmessage","listener","fromJson","wsonerror","wsonclose","wasClean","sendRequest","request","callbackId","getCallbackId","callbacks","time","cb","callbackID","ws","send","toJson","tOutResp","serverTimeoutInterval","messageObj","hasOwnProperty","handleReceivedESPS","handleReceivedSSFF","newUUID","WebSocket","onopen","onmessage","onerror","onclose","userName","serverInfos","Url","connectionError","tryConnection","stringBase64","binaryString","atob","bytes","ascii","charCodeAt","binary","fromCharCode","btoa","modalInstance","templatefile","argCtrl","passedIn","backdrop","keyboard","passedInTxt","passedInOpts","handleUpdatereadyEvent","appCache","swapCache","location","reload","applicationCache","update","getStrRep","options","selWindowInfo","windowLengths","modalVals","getColorOfAnchor","anchorNr","curStyle","saveSpectroSettings","confirm","ArrayHelperService","myData","convertArrayToXYjsoArray","filter","input","regex","patt","RegExp","toLowerCase","out","test","patt1","patt2","passedOutTxt","var","saveChanges","discardChanges","showMenu","showTwod","animation","transclude","showTwoDimCans","template","panes","bottomRightResizePane","addPane","pane","setBottomRightResizePane","dragBottomRightResizePaneTopResizer","dragBottomRightResizePaneLeftResizer","dragBottomRightResizePaneCornerResizer","handler","pane1","pane2","pane3","bottomRightResizePaneTopResizer","bottomRightResizePaneLeftResizer","bottomRightResizePaneCornerResizer","pane1Min","minSize","pane2Min","dragSplitPaneResizer","drag","after","ev","bounds","getBoundingClientRect","bottom","clientY","clientX","require","bgSplitterCtrl","typeclass","drawSsffTrackMarkup","drawEpgGrid","binValStrArr","gridWidth","gridHeight","sInterv","curFrame","elIdx","split","reverse","binStr","binStrIdx","setGlobalMinMaxVals","dD","twoDimCanvases","twoDimDrawingDefinitions","dots","trConf","xSsffTrack","xCol","globalMinX","globalMaxX","ySsffTrack","yCol","globalMinY","globalMaxY","drawDots","tw","xsRaSt","ysRaSt","curMousePosTime","degrees","rotate","allDots","startSample","xContourNr","yContourNr","startPoint","endPoint","f","connectLines","fromDot","toDot","dragEnterLeave","dropClass","handleDragOver","dropAllowed","dropFiles","dropParsingStarted","File","FileList","dt","dataTransfer","files","webkitGetAsEntry","dropErrorFileType","dropErrorAPI","dropNotAllowed","handleFilesonChange","loadedFiles","fileDialog","schemasJsos","names","proms","all","schemaArr","schemaName","schema","tv4","validate","convertToAbsValues","arr","multiplyEachElement","interp2points","x0","y0","x1","y1","findMinMax","minOrMax","flattenArrayOfArray","arrOfArrs","merged","concat","xyArray","itemInSel","verticalPosSsffTrackName","vTrackName","velocitySsffTrackName","vTr","vCol","flatColVals","flatVcolVals","gdat","NaN","vdat","ndat","cdat","startTimeSel","endTimeSel","selCol","selVCol","maxVerticalPos","maxVelBeforeMaxConstr","minVelBeforeMaxVel","interactiveFindThresholds","threshold","on20","minVelBetwMaxVel1maxConstr","minp","off20","maxVelAfterMaxConstr","minBetwMaxConstrMaxVelConstr","minVelAfterMaxVelAfterConstr","curLabel","gestureOnOffsetLabels","gdat0insPoint","gdat1insPoint","maxVelocityOnOffsetLabels","vdat0insPoint","vdat1insPoint","constrictionPlateauBeginEndLabels","ndat0insPoint","ndat1insPoint","maxConstrictionLabel","cdat0insPoint","linkLevelName","autoLinkLevelName","linkLevelDetails","linkLevelLabels","itemIdx","childIDs","parentID","direction","description","thdat","thdir","xx","lx","xsh","loguk","higuk","vz","anavv","infos","thresholdIdx","thresholdValue","ap","render","margin","svg","d3","append","linear","range","xAxis","axis","tickSize","tickSubdivide","yAxis","orient","lineFunc","line","interpolate","domain","selectAll","x2","y2"],"mappings":"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","sourcesContent":["'use strict';\n//expand ArrayBuffer with subarray function\nArrayBuffer.prototype.subarray = function (offset, length) {\n  var sub = new ArrayBuffer(length);\n  var subView = new Int8Array(sub);\n  var thisView = new Int8Array(this);\n  for (var i = 0; i < length; i++) {\n    subView[i] = thisView[offset + i];\n  }\n  return sub;\n};\n'use strict';\nangular.module('emuwebApp', [\n  'ui',\n  'ui.bootstrap',\n  'ngAnimate'\n]).config([\n  '$locationProvider',\n  function ($locationProvider) {\n    // $routeProvider\n    //   .when('/', {\n    //     templateUrl: 'views/main.html'\n    //   })\n    //   .otherwise({\n    //     redirectTo: '/'\n    //   });\n    $locationProvider.html5Mode(true);\n  }\n]);\n'use strict';\nangular.module('emuwebApp').service('ConfigProviderService', [\n  'viewState',\n  function (viewState) {\n    // shared service object\n    var sServObj = {};\n    sServObj.vals = {};\n    sServObj.curDbConfig = {};\n    // embedded values -> if these are set this overrides the normal config  \n    sServObj.embeddedVals = {\n      audioGetUrl: '',\n      labelGetUrl: '',\n      labelType: '',\n      fromUrlParams: false\n    };\n    /**\n\t\t * depth of 2 = max\n\t\t */\n    sServObj.setVals = function (data) {\n      if ($.isEmptyObject(sServObj.vals)) {\n        sServObj.vals = data;\n      } else {\n        angular.forEach(Object.keys(data), function (key1) {\n          // if array... overwrite entire thing!\n          if (angular.isArray(sServObj.vals[key1])) {\n            //empty array\n            sServObj.vals[key1] = [];\n            angular.forEach(data[key1], function (itm) {\n              sServObj.vals[key1].push(itm);\n            });\n          } else {\n            angular.forEach(Object.keys(data[key1]), function (key2) {\n              if (sServObj.vals[key1][key2] !== undefined) {\n                sServObj.vals[key1][key2] = data[key1][key2];\n              } else {\n                console.error('BAD ENTRY IN CONFIG! Key1: ' + key1 + ' key2: ' + key2);\n              }\n            });\n          }\n        });\n      }\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.getSsffTrackConfig = function (name) {\n      var res;\n      if (sServObj.curDbConfig.ssffTracks !== undefined) {\n        angular.forEach(sServObj.curDbConfig.ssffTracks, function (tr) {\n          if (tr.name === name) {\n            res = tr;\n          }\n        });\n      }\n      return res;\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.getLimsOfTrack = function (trackName) {\n      var res = {};\n      angular.forEach(sServObj.vals.perspectives[viewState.curPerspectiveIdx].signalCanvases.contourLims, function (cL) {\n        if (cL.ssffTrackName === trackName) {\n          res.min = cL.min;\n          res.max = cL.max;\n        }\n      });\n      return res;\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.getAssignment = function (signalName) {\n      var res = {};\n      angular.forEach(sServObj.vals.perspectives[viewState.curPerspectiveIdx].signalCanvases.assign, function (a) {\n        if (a.signalCanvasName === signalName) {\n          res = a;\n        }\n      });\n      return res;\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.getLevelDefinition = function (levelName) {\n      var res = {};\n      angular.forEach(sServObj.curDbConfig.levelDefinitions, function (ld) {\n        if (ld.name === levelName) {\n          res = ld;\n        }\n      });\n      return res;\n    };\n    return sServObj;\n  }\n]);\n'use strict';\nangular.module('emuwebApp').controller('MainCtrl', [\n  '$scope',\n  '$rootScope',\n  '$modal',\n  '$log',\n  '$compile',\n  '$timeout',\n  '$q',\n  '$window',\n  '$document',\n  '$location',\n  'viewState',\n  'HistoryService',\n  'Iohandlerservice',\n  'Soundhandlerservice',\n  'ConfigProviderService',\n  'fontScaleService',\n  'Ssffdataservice',\n  'LevelService',\n  'dialogService',\n  'Textgridparserservice',\n  'Espsparserservice',\n  'Binarydatamaniphelper',\n  'Wavparserservice',\n  'Ssffparserservice',\n  'Drawhelperservice',\n  'Validationservice',\n  'Appcachehandler',\n  function ($scope, $rootScope, $modal, $log, $compile, $timeout, $q, $window, $document, $location, viewState, HistoryService, Iohandlerservice, Soundhandlerservice, ConfigProviderService, fontScaleService, Ssffdataservice, LevelService, dialogService, Textgridparserservice, Espsparserservice, Binarydatamaniphelper, Wavparserservice, Ssffparserservice, Drawhelperservice, Validationservice, Appcachehandler) {\n    // hook up services to use abbreviated forms\n    $scope.cps = ConfigProviderService;\n    $scope.hists = HistoryService;\n    $scope.fontImage = fontScaleService;\n    $scope.levServ = LevelService;\n    $scope.vs = viewState;\n    $scope.dials = dialogService;\n    $scope.ssffds = Ssffdataservice;\n    $scope.shs = Soundhandlerservice;\n    $scope.dhs = Drawhelperservice;\n    $scope.wps = Wavparserservice;\n    $scope.io = Iohandlerservice;\n    $scope.ach = Appcachehandler;\n    // init vars\n    $scope.connectBtnLabel = 'connect';\n    $scope.tmp = {};\n    $scope.dbLoaded = false;\n    $scope.is2dCancasesHidden = true;\n    $scope.lastkeycode = 'N/A';\n    $scope.bundleList = [];\n    $scope.curUserName = '';\n    $scope.curBndl = {};\n    $scope.lastclickedutt = null;\n    $scope.filterText = '';\n    $scope.windowWidth = $window.outerWidth;\n    $scope.demoDbName = '';\n    $scope.firefox = navigator.userAgent.match(/Firefox/i) ? true : false;\n    // check for new version\n    $scope.ach.checkForNewVersion();\n    //////////////\n    // bindings\n    // bind window resize event\n    angular.element($window).bind('resize', function () {\n      LevelService.deleteEditArea();\n      viewState.setWindowWidth($window.outerWidth);\n      $scope.$digest();\n    });\n    // bind shift/alt keyups for history\n    angular.element($window).bind('keyup', function (e) {\n      if (e.keyCode === ConfigProviderService.vals.keyMappings.shift || e.keyCode === ConfigProviderService.vals.keyMappings.alt) {\n        HistoryService.addCurChangeObjToUndoStack();\n        $scope.$digest();\n      }\n    });\n    // Take care of preventing navigation out of app (only if something is loaded, not in embedded mode and not developing (auto connecting))\n    window.onbeforeunload = function () {\n      if (ConfigProviderService.embeddedVals.audioGetUrl === '' && $scope.bundleList.length > 0 && !ConfigProviderService.vals.main.autoConnect) {\n        return 'Do you really wish to leave/reload the EMU-webApp? All unsaved changes will be lost...';\n      }\n    };\n    //////////////\n    // watches\n    // watch if embedded override (if attributes are set on emuwebapp tag)\n    // $scope.$watch('cps.embeddedVals.audioGetUrl', function (val) {\n    // \tif (val !== undefined && val !== '') {\n    // \t\t// check if both are set\n    // \t\t$scope.loadFilesForEmbeddedApp();\n    // \t}\n    // }, true);\n    //\n    //////////////\n    /////////////\n    // listens\n    // listen for connectionDisrupted event -> I don't like listens but in this case it might me the way to go...\n    $scope.$on('connectionDisrupted', function (event, args) {\n      $scope.resetToInitState();\n    });\n    //\n    ////////////\n    // check if URL parameters are set -> if so set embedded flags!\n    var searchObject = $location.search();\n    if (searchObject['audioGetUrl'] && searchObject['labelGetUrl'] && searchObject['labelType']) {\n      ConfigProviderService.embeddedVals.audioGetUrl = searchObject.audioGetUrl;\n      ConfigProviderService.embeddedVals.labelGetUrl = searchObject.labelGetUrl;\n      ConfigProviderService.embeddedVals.labelType = searchObject.labelType;\n      ConfigProviderService.embeddedVals.fromUrlParams = true;\n    }\n    ;\n    /**\n\t\t *\n\t\t */\n    $scope.loadFilesForEmbeddedApp = function () {\n      if (ConfigProviderService.embeddedVals.audioGetUrl) {\n        Iohandlerservice.httpGetPath(ConfigProviderService.embeddedVals.audioGetUrl, 'arraybuffer').then(function (data) {\n          viewState.showDropZone = false;\n          // set bundle name\n          var tmp = ConfigProviderService.embeddedVals.audioGetUrl;\n          $scope.curBndl.name = tmp.substr(0, tmp.lastIndexOf('.')).substr(tmp.lastIndexOf('/') + 1, tmp.length);\n          //hide menu\n          if (viewState.getsubmenuOpen()) {\n            $scope.openSubmenu();\n          }\n          viewState.somethingInProgressTxt = 'Loading DB config...';\n          // then get the DBconfigFile\n          Iohandlerservice.httpGetPath('configFiles/embedded_emuwebappConfig.json').then(function (resp) {\n            // first element of perspectives is default perspective\n            viewState.curPerspectiveIdx = 0;\n            ConfigProviderService.setVals(resp.data.EMUwebAppConfig);\n            // validate emuwebappConfigSchema\n            delete resp.data.EMUwebAppConfig;\n            // delete to avoid duplicate\n            var validRes = Validationservice.validateJSO('emuwebappConfigSchema', ConfigProviderService.vals);\n            if (validRes === true) {\n              // turn of keybinding only on mouseover\n              if (ConfigProviderService.embeddedVals.fromUrlParams) {\n                ConfigProviderService.vals.main.catchMouseForKeyBinding = false;\n              }\n              ConfigProviderService.curDbConfig = resp.data;\n              // validate DBconfigFileSchema!\n              validRes = Validationservice.validateJSO('DBconfigFileSchema', ConfigProviderService.curDbConfig);\n              if (validRes === true) {\n                // set wav file\n                viewState.somethingInProgress = true;\n                viewState.somethingInProgressTxt = 'Parsing WAV file...';\n                Wavparserservice.parseWavArrBuf(data.data).then(function (messWavParser) {\n                  var wavJSO = messWavParser;\n                  viewState.curViewPort.sS = 0;\n                  viewState.curViewPort.eS = wavJSO.Data.length;\n                  viewState.resetSelect();\n                  Soundhandlerservice.wavJSO = wavJSO;\n                  // get + parse file\n                  Iohandlerservice.httpGetPath(ConfigProviderService.embeddedVals.labelGetUrl, 'utf-8').then(function (data2) {\n                    viewState.somethingInProgressTxt = 'Parsing ' + ConfigProviderService.embeddedVals.labelType + ' file...';\n                    Iohandlerservice.parseLabelFile(data2.data, ConfigProviderService.embeddedVals.labelGetUrl, 'embeddedTextGrid', ConfigProviderService.embeddedVals.labelType).then(function (parseMess) {\n                      var annot = parseMess.data;\n                      LevelService.setData(annot);\n                      var lNames = [];\n                      var levelDefs = [];\n                      annot.levels.forEach(function (l) {\n                        lNames.push(l.name);\n                        levelDefs.push({\n                          'name': l.name,\n                          'type': l.type,\n                          'attributeDefinitions': {\n                            'name': l.name,\n                            'type': 'string'\n                          }\n                        });\n                      });\n                      // set level defs\n                      ConfigProviderService.curDbConfig.levelDefinitions = levelDefs;\n                      viewState.setCurLevelAttrDefs(ConfigProviderService.curDbConfig.levelDefinitions);\n                      ConfigProviderService.vals.perspectives[viewState.curPerspectiveIdx].levelCanvases.order = lNames;\n                      viewState.somethingInProgressTxt = 'Done!';\n                      viewState.somethingInProgress = false;\n                      viewState.setState('labeling');  // close submenu... \n                                                       // $scope.openSubmenu();\n                    }, function (errMess) {\n                      dialogService.open('views/error.html', 'ModalCtrl', 'Error parsing wav file: ' + errMess.status.message);\n                    });\n                  }, function (errMess) {\n                    dialogService.open('views/error.html', 'ModalCtrl', 'Could not get label file: ' + ConfigProviderService.embeddedVals.labelGetUrl + ' ERROR ' + JSON.stringify(errMess, null, 4));\n                  });\n                }, function (errMess) {\n                  dialogService.open('views/error.html', 'ModalCtrl', 'Error parsing wav file: ' + errMess.status.message);\n                });\n              } else {\n                dialogService.open('views/error.html', 'ModalCtrl', 'Error validating DBconfig: ' + JSON.stringify(validRes, null, 4));\n              }\n            } else {\n              dialogService.open('views/error.html', 'ModalCtrl', 'Error validating ConfigProviderService.vals (emuwebappConfig data) after applying changes of newly loaded config (most likely due to wrong entry...): ' + JSON.stringify(validRes, null, 4));\n            }\n          }, function (errMess) {\n            dialogService.open('views/error.html', 'ModalCtrl', 'Could not get embedded_config.json: ' + errMess);\n          });\n        }, function (errMess) {\n          dialogService.open('views/error.html', 'ModalCtrl', 'Could not get audio file:' + ConfigProviderService.embeddedVals.audioGetUrl + ' ERROR: ' + JSON.stringify(errMess, null, 4));\n        });\n      }\n    };\n    /**\n\t\t * init load of config files\n\t\t */\n    $scope.loadDefaultConfig = function () {\n      viewState.somethingInProgress = true;\n      viewState.somethingInProgressTxt = 'Loading schema files';\n      // load schemas first\n      Validationservice.loadSchemas().then(function (replies) {\n        Validationservice.setSchemas(replies);\n        Iohandlerservice.httpGetDefaultConfig().success(function (data) {\n          viewState.somethingInProgressTxt = 'Validating emuwebappConfig';\n          var validRes = Validationservice.validateJSO('emuwebappConfigSchema', data);\n          if (validRes === true) {\n            ConfigProviderService.setVals(data);\n            $scope.handleDefaultConfigLoaded();\n            // loadFilesForEmbeddedApp if these are set \n            $scope.loadFilesForEmbeddedApp();\n            viewState.somethingInProgress = false;\n          } else {\n            dialogService.open('views/error.html', 'ModalCtrl', 'Error validating emuwebappConfigSchema: ' + JSON.stringify(validRes, null, 4)).then(function () {\n              $scope.resetToInitState();\n            });\n          }\n        }).error(function (data, status, header, config) {\n          dialogService.open('views/error.html', 'ModalCtrl', 'Could not get defaultConfig for EMU-webApp: ' + ' status: ' + status + ' header: ' + header + ' config ' + config).then(function () {\n            $scope.resetToInitState();\n          });\n        });\n      }, function (errMess) {\n        dialogService.open('views/error.html', 'ModalCtrl', 'Error loading schema file: ' + JSON.stringify(errMess, null, 4)).then(function () {\n          $scope.resetToInitState();\n        });\n      });\n    };\n    // call function on init\n    $scope.loadDefaultConfig();\n    /**\n\t\t * function called after default config was loaded\n\t\t */\n    $scope.handleDefaultConfigLoaded = function () {\n      if (!viewState.getsubmenuOpen()) {\n        $scope.openSubmenu();\n      }\n      if (ConfigProviderService.vals.main.autoConnect) {\n        Iohandlerservice.wsH.initConnect(ConfigProviderService.vals.main.serverUrl).then(function (message) {\n          if (message.type === 'error') {\n            dialogService.open('views/error.html', 'ModalCtrl', 'Could not connect to websocket server: ' + ConfigProviderService.vals.main.defaultServerUrl);\n          } else {\n            $scope.handleConnectedToWSserver();\n          }\n        });\n      }\n      // init loading of files for testing\n      viewState.setspectroSettings(ConfigProviderService.vals.spectrogramSettings.N, ConfigProviderService.vals.spectrogramSettings.rangeFrom, ConfigProviderService.vals.spectrogramSettings.rangeTo, ConfigProviderService.vals.spectrogramSettings.dynamicRange, ConfigProviderService.vals.spectrogramSettings.window, ConfigProviderService.vals.spectrogramSettings.drawHeatMapColors, ConfigProviderService.vals.spectrogramSettings.preEmphasisFilterFactor, ConfigProviderService.vals.spectrogramSettings.heatMapColorAnchors);\n      // setting transition values\n      viewState.setTransitionTime(ConfigProviderService.vals.colors.transitionTime / 1000);\n    };\n    /**\n\t\t * function is called after websocket connection\n\t\t * has been established. It executes the protocol\n\t\t * and loads the first bundle in the bundle list (= default behavior).\n\t\t */\n    $scope.handleConnectedToWSserver = function () {\n      // hide drop zone \n      viewState.showDropZone = false;\n      ConfigProviderService.vals.main.comMode = 'WS';\n      viewState.somethingInProgress = true;\n      viewState.somethingInProgressTxt = 'Checking protocol...';\n      // Check if server speaks the same protocol\n      Iohandlerservice.getProtocol().then(function (res) {\n        if (res.protocol === 'EMU-webApp-websocket-protocol' && res.version === '0.0.1') {\n          viewState.somethingInProgressTxt = 'Checking user management...';\n          // then ask if server does user management\n          Iohandlerservice.getDoUserManagement().then(function (doUsrData) {\n            if (doUsrData === 'NO') {\n              $scope.innerHandleConnectedToWSserver();\n            } else {\n              // show user management error \n              dialogService.open('views/loginModal.html', 'LoginCtrl').then(function (res) {\n                if (res) {\n                  $scope.innerHandleConnectedToWSserver();\n                } else {\n                  $scope.resetToInitState();\n                }\n              });\n            }\n          });\n        } else {\n          // show protocol error and disconnect from server\n          dialogService.open('views/error.html', 'ModalCtrl', 'Could not connect to websocket server: ' + ConfigProviderService.vals.main.serverUrl + '. It does not speak the same protocol as this client. Its protocol answer was: \"' + res.protocol + '\" with the version: \"' + res.version + '\"').then(function () {\n            $scope.resetToInitState();\n          });\n        }\n      });\n    };\n    /**\n\t\t * to avoid redundant code...\n\t\t */\n    $scope.innerHandleConnectedToWSserver = function () {\n      viewState.somethingInProgressTxt = 'Loading DB config...';\n      // then get the DBconfigFile\n      Iohandlerservice.getDBconfigFile().then(function (data) {\n        // first element of perspectives is default perspective\n        viewState.curPerspectiveIdx = 0;\n        ConfigProviderService.setVals(data.EMUwebAppConfig);\n        delete data.EMUwebAppConfig;\n        // delete to avoid duplicate\n        var validRes = Validationservice.validateJSO('emuwebappConfigSchema', ConfigProviderService.vals);\n        if (validRes === true) {\n          ConfigProviderService.curDbConfig = data;\n          viewState.setCurLevelAttrDefs(ConfigProviderService.curDbConfig.levelDefinitions);\n          validRes = Validationservice.validateJSO('DBconfigFileSchema', data);\n          if (validRes === true) {\n            // then get the DBconfigFile\n            viewState.somethingInProgressTxt = 'Loading bundle list...';\n            Iohandlerservice.getBundleList().then(function (bdata) {\n              validRes = Validationservice.validateJSO('bundleListSchema', bdata);\n              if (validRes === true) {\n                $scope.bundleList = bdata;\n                // then load first bundle in list\n                $scope.menuBundleClick($scope.bundleList[0]);\n              } else {\n                dialogService.open('views/error.html', 'ModalCtrl', 'Error validating bundleList: ' + JSON.stringify(validRes, null, 4)).then(function () {\n                  $scope.resetToInitState();\n                });\n              }\n            });\n          } else {\n            dialogService.open('views/error.html', 'ModalCtrl', 'Error validating DBconfig: ' + JSON.stringify(validRes, null, 4)).then(function () {\n              $scope.resetToInitState();\n            });\n          }\n        } else {\n          dialogService.open('views/error.html', 'ModalCtrl', 'Error validating ConfigProviderService.vals (emuwebappConfig data) after applying changes of newly loaded config (most likely due to wrong entry...): ' + JSON.stringify(validRes, null, 4)).then(function () {\n            $scope.resetToInitState();\n          });\n        }\n      });\n    };\n    /**\n\t\t * Handle click on bundle in side menu. It is\n\t\t * also used as a general loadBundle method.\n\t\t * @param bndl object containing name attribute of currently loaded bundle\n\t\t */\n    $scope.menuBundleClick = function (bndl) {\n      // check if bndl has to be saved\n      if (HistoryService.movesAwayFromLastSave !== 0 && ConfigProviderService.vals.main.comMode !== 'DEMO') {\n        if (bndl !== $scope.curBndl) {\n          $scope.lastclickedutt = bndl;\n          dialogService.open('views/saveChanges.html', 'ModalCtrl', bndl.name).then(function (messModal) {\n            if (messModal === 'saveChanges') {\n              // save current bundle\n              $scope.menuBundleSaveBtnClick().then(function () {\n                // load new bundle\n                $scope.menuBundleClick(bndl);\n              });\n            } else if (messModal === 'discardChanges') {\n              // reset history\n              HistoryService.resetToInitState();\n              // load new bundle\n              $scope.menuBundleClick(bndl);\n            }\n          });\n        }\n      } else {\n        if (bndl !== $scope.curBndl) {\n          // reset history\n          HistoryService.resetToInitState();\n          // set state\n          viewState.setState('loadingSaving');\n          viewState.somethingInProgress = true;\n          viewState.somethingInProgressTxt = 'Loading bundle: ' + bndl.name;\n          // empty ssff files\n          Ssffdataservice.data = [];\n          Iohandlerservice.getBundle(bndl.name, $scope.demoDbName).then(function (bundleData) {\n            // check if response from http request\n            if (bundleData.status === 200) {\n              bundleData = bundleData.data;\n            }\n            var arrBuff;\n            // set wav file\n            arrBuff = Binarydatamaniphelper.base64ToArrayBuffer(bundleData.mediaFile.data);\n            viewState.somethingInProgressTxt = 'Parsing WAV file...';\n            Wavparserservice.parseWavArrBuf(arrBuff).then(function (messWavParser) {\n              var wavJSO = messWavParser;\n              viewState.curViewPort.sS = 0;\n              viewState.curViewPort.eS = wavJSO.Data.length;\n              viewState.curViewPort.selectS = -1;\n              viewState.curViewPort.selectE = -1;\n              viewState.curClickSegments = [];\n              viewState.curClickLevelName = undefined;\n              viewState.curClickLevelType = undefined;\n              viewState.resetSelect();\n              // FOR DEVELOPMENT:\n              // viewState.curViewPort.sS = 442204;\n              // viewState.curViewPort.eS = 445464;\n              // viewState.curViewPort.selectS = 27575;\n              // viewState.curViewPort.selectE = 34538;\n              Soundhandlerservice.wavJSO = wavJSO;\n              // set all ssff files\n              viewState.somethingInProgressTxt = 'Parsing SSFF files...';\n              Ssffparserservice.asyncParseSsffArr(bundleData.ssffFiles).then(function (ssffJso) {\n                Ssffdataservice.data = ssffJso.data;\n                var validRes = Validationservice.validateJSO('annotationFileSchema', bundleData.annotation);\n                if (validRes === true) {\n                  // set annotation\n                  LevelService.setData(bundleData.annotation);\n                  $scope.curBndl = bndl;\n                  viewState.setState('labeling');\n                  viewState.somethingInProgress = false;\n                  viewState.somethingInProgressTxt = 'Done!';  // FOR DEVELOPMENT:\n                                                               // $scope.menuBundleSaveBtnClick(); // for testing save button\n                                                               // $scope.spectSettingsBtnClick(); // for testing spect settings dial\n                } else {\n                  dialogService.open('views/error.html', 'ModalCtrl', 'Error validating annotation file: ' + JSON.stringify(validRes, null, 4)).then(function () {\n                    $scope.resetToInitState();\n                  });\n                }\n              }, function (errMess) {\n                dialogService.open('views/error.html', 'ModalCtrl', 'Error parsing SSFF file: ' + errMess.status.message).then(function () {\n                  $scope.resetToInitState();\n                });\n              });\n            }, function (errMess) {\n              dialogService.open('views/error.html', 'ModalCtrl', 'Error parsing wav file: ' + errMess.status.message).then(function () {\n                $scope.resetToInitState();\n              });\n            });\n          }, function (errMess) {\n            // check for http vs websocket response\n            if (errMess.data) {\n              dialogService.open('views/error.html', 'ModalCtrl', 'Error loading bundle: ' + errMess.data).then(function () {\n                $scope.resetToInitState();\n              });\n            } else {\n              dialogService.open('views/error.html', 'ModalCtrl', 'Error loading bundle: ' + errMess.status.message).then(function () {\n                $scope.resetToInitState();\n              });\n            }\n          });\n        }\n      }\n    };\n    /**\n\t\t * Handle save bundle button click. The function is also used\n\t\t * as a gerneral purpose save bundle function.\n\t\t * @return promise that is resolved after completion (rejected on error)\n\t\t */\n    $scope.menuBundleSaveBtnClick = function () {\n      // check if something has changed\n      // if (HistoryService.movesAwayFromLastSave !== 0) { // Commented out FOR DEVELOPMENT!\n      if (viewState.getPermission('saveBndlBtnClick')) {\n        var defer = $q.defer();\n        viewState.somethingInProgress = true;\n        viewState.setState('loadingSaving');\n        //create bundle json\n        var bundleData = {};\n        viewState.somethingInProgressTxt = 'Creating bundle json...';\n        bundleData.ssffFiles = [];\n        var formants = {};\n        // ssffFiles (only FORMANTS are allowed to be manipulated so only this track is sent back to server)\n        Ssffdataservice.data.forEach(function (el) {\n          if (el.ssffTrackName === 'FORMANTS') {\n            formants = el;\n          }\n        });\n        if (!$.isEmptyObject(formants)) {\n          Ssffparserservice.asyncJso2ssff(formants).then(function (messParser) {\n            bundleData.ssffFiles.push({\n              'ssffTrackName': formants.ssffTrackName,\n              'encoding': 'BASE64',\n              'data': Binarydatamaniphelper.arrayBufferToBase64(messParser.data)\n            });\n            $scope.getAnnotationAndSaveBndl(bundleData, defer);\n          }, function (errMess) {\n            dialogService.open('views/error.html', 'ModalCtrl', 'Error converting javascript object to ssff file: ' + errMess.status.message);\n            defer.reject();\n          });\n        } else {\n          $scope.getAnnotationAndSaveBndl(bundleData, defer);\n        }\n        return defer.promise;  // } // Commented out FOR DEVELOPMENT!\n      } else {\n        $log.info('Action: menuBundleSaveBtnClick not allowed!');\n      }\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.getAnnotationAndSaveBndl = function (bundleData, defer) {\n      // annotation\n      bundleData.annotation = LevelService.getData();\n      viewState.somethingInProgressTxt = 'Saving bundle...';\n      Iohandlerservice.saveBundle(bundleData).then(function () {\n        viewState.somethingInProgressTxt = 'Done!';\n        viewState.somethingInProgress = false;\n        HistoryService.movesAwayFromLastSave = 0;\n        defer.resolve();\n        viewState.setState('labeling');\n      }, function (errMess) {\n        // console.log(mess);\n        dialogService.open('views/error.html', 'ModalCtrl', 'Error saving bundle: ' + errMess.status.message).then(function () {\n          $scope.resetToInitState();\n        });\n        defer.reject();\n      });\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.uttIsDisabled = function (bndl) {\n      if (bndl.name === $scope.curBndl.name) {\n        return false;\n      } else {\n        return true;\n      }\n    };\n    $scope.getEnlarge = function (index) {\n      var len = ConfigProviderService.vals.perspectives[viewState.curPerspectiveIdx].signalCanvases.order.length;\n      if (viewState.getenlarge() == -1) {\n        return 'auto';\n      } else {\n        if (len == 2) {\n          if (viewState.getenlarge() == index) {\n            return '75%';\n          } else {\n            return '25%';\n          }\n        } else {\n          if (viewState.getenlarge() == index) {\n            return Math.floor(100 / len * (len - 1)) + '%';\n          } else {\n            return Math.floor(100 / len / (len - 1)) + '%';\n          }\n        }\n      }\n    };\n    /**\n\t\t * returns jso with css defining color dependent\n\t\t * on if changes have been made that have not been saved\n\t\t * @param bndl object containing name attribute of bundle item\n\t\t * requesting color\n\t\t * @returns color as jso object used by ng-style\n\t\t */\n    $scope.getBndlColor = function (bndl) {\n      var curColor;\n      if (HistoryService.movesAwayFromLastSave !== 0) {\n        curColor = {\n          'background-color': '#f00',\n          'color': 'white'\n        };\n      } else {\n        curColor = {\n          'background-color': '#999',\n          'color': 'black'\n        };\n      }\n      // console.log(bndl.name)\n      if (bndl.name === $scope.curBndl.name) {\n        return curColor;\n      }\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.cursorInTextField = function () {\n      viewState.focusInTextField = true;\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.cursorOutOfTextField = function () {\n      viewState.focusInTextField = false;\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.openSubmenu = function () {\n      if (viewState.getsubmenuOpen()) {\n        viewState.setsubmenuOpen(false);\n      } else {\n        viewState.setsubmenuOpen(true);\n      }\n      $timeout($scope.refreshTimeline, ConfigProviderService.vals.colors.transitionTime);\n    };\n    $scope.refreshTimeline = function () {\n      $scope.$broadcast('refreshTimeline');\n    };\n    /////////////////////////////////////////\n    // handle button clicks\n    // top menu:\n    /**\n\t\t *\n\t\t */\n    $scope.addLevelSegBtnClick = function () {\n      if (viewState.getPermission('addLevelSegBtnClick')) {\n        var newName, levelLength;\n        if (LevelService.data.levels === undefined) {\n          newName = 'levelNr0';\n          levelLength = 0;\n        } else {\n          newName = 'levelNr' + LevelService.data.levels.length;\n          levelLength = LevelService.data.levels.length;\n        }\n        var level = {\n            items: [{\n                id: LevelService.getNewId(),\n                sampleStart: 0,\n                sampleDur: Soundhandlerservice.wavJSO.Data.length,\n                labels: [{\n                    name: newName,\n                    value: ConfigProviderService.vals.labelCanvasConfig.newSegmentName\n                  }]\n              }],\n            name: newName,\n            type: 'SEGMENT'\n          };\n        LevelService.addLevel(level, levelLength, viewState.curPerspectiveIdx);\n        //  Add to history\n        HistoryService.addObjToUndoStack({\n          'type': 'ESPS',\n          'action': 'addLevel',\n          'level': level,\n          'id': LevelService.data.levels.length - 1,\n          'curPerspectiveIdx': viewState.curPerspectiveIdx\n        });\n      } else {\n        console.log('action currently not allowed');\n      }\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.addLevelPointBtnClick = function () {\n      if (viewState.getPermission('addLevelPointBtnClick')) {\n        var newName = 'levelNr' + LevelService.data.levels.length;\n        var level = {\n            items: [{\n                id: LevelService.getNewId(),\n                samplePoint: Soundhandlerservice.wavJSO.Data.length / 2,\n                labels: [{\n                    name: newName,\n                    value: ConfigProviderService.vals.labelCanvasConfig.newEventName\n                  }]\n              }],\n            name: newName,\n            type: 'EVENT'\n          };\n        LevelService.addLevel(level, LevelService.data.levels.length, viewState.curPerspectiveIdx);\n        //  Add to history\n        HistoryService.addObjToUndoStack({\n          'type': 'ESPS',\n          'action': 'addLevel',\n          'level': level,\n          'id': LevelService.data.levels.length - 1,\n          'curPerspectiveIdx': viewState.curPerspectiveIdx\n        });\n      } else {\n        console.log('action currently not allowed');\n      }\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.renameSelLevelBtnClick = function () {\n      if (viewState.getPermission('renameSelLevelBtnClick')) {\n        if (viewState.getcurClickLevelName() !== undefined) {\n          dialogService.open('views/renameLevel.html', 'ModalCtrl', viewState.getcurClickLevelName());\n        } else {\n          dialogService.open('views/error.html', 'ModalCtrl', 'Rename Error : Please choose a Level first !');\n        }\n      } else {\n        console.log('action currently not allowed');\n      }\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.downloadTextGridBtnClick = function () {\n      if (viewState.getPermission('downloadTextGridBtnClick')) {\n        Textgridparserservice.asyncToTextGrid().then(function (parseMess) {\n          dialogService.openExport('views/export.html', 'ExportCtrl', parseMess.data, $scope.curBndl.name + '.TextGrid');\n        });\n      } else {\n        console.log('action currently not allowed');\n      }\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.spectSettingsBtnClick = function () {\n      if (viewState.getPermission('spectSettingsChange')) {\n        dialogService.open('views/spectSettings.html', 'spectSettingsCtrl', '');\n      } else {\n        console.log('action currently not allowed');\n      }\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.connectBtnClick = function () {\n      if (viewState.getPermission('connectBtnClick')) {\n        dialogService.open('views/connectModal.html', 'WsconnectionCtrl').then(function (url) {\n          if (url) {\n            Iohandlerservice.wsH.initConnect(url).then(function (message) {\n              if (message.type === 'error') {\n                dialogService.open('views/error.html', 'ModalCtrl', 'Could not connect to websocket server: ' + url);\n              } else {\n                $scope.handleConnectedToWSserver();\n              }\n            });\n          }\n        });\n      } else {\n        console.log('action currently not allowed');\n      }\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.openDemoDBbtnClick = function (nameOfDB) {\n      if (viewState.getPermission('openDemoBtnDBclick')) {\n        $scope.demoDbName = nameOfDB;\n        // hide drop zone \n        viewState.showDropZone = false;\n        viewState.somethingInProgress = true;\n        // alert(nameOfDB);\n        viewState.setState('loadingSaving');\n        ConfigProviderService.vals.main.comMode = 'DEMO';\n        viewState.somethingInProgressTxt = 'Loading DB config...';\n        Iohandlerservice.getDBconfigFile(nameOfDB).then(function (res) {\n          var data = res.data;\n          // first element of perspectives is default perspective\n          viewState.curPerspectiveIdx = 0;\n          ConfigProviderService.setVals(data.EMUwebAppConfig);\n          delete data.EMUwebAppConfig;\n          // delete to avoid duplicate\n          var validRes = Validationservice.validateJSO('emuwebappConfigSchema', ConfigProviderService.vals);\n          if (validRes === true) {\n            ConfigProviderService.curDbConfig = data;\n            viewState.setCurLevelAttrDefs(ConfigProviderService.curDbConfig.levelDefinitions);\n            validRes = Validationservice.validateJSO('DBconfigFileSchema', ConfigProviderService.curDbConfig);\n            if (validRes === true) {\n              // then get the DBconfigFile\n              viewState.somethingInProgressTxt = 'Loading bundle list...';\n              Iohandlerservice.getBundleList(nameOfDB).then(function (res) {\n                var bdata = res.data;\n                validRes = Validationservice.validateJSO('bundleListSchema', bdata);\n                if (validRes === true) {\n                  $scope.bundleList = bdata;\n                  // then load first bundle in list\n                  $scope.menuBundleClick($scope.bundleList[0]);\n                } else {\n                  dialogService.open('views/error.html', 'ModalCtrl', 'Error validating bundleList: ' + JSON.stringify(validRes, null, 4)).then(function () {\n                    $scope.resetToInitState();\n                  });\n                }\n              }, function (err) {\n                dialogService.open('views/error.html', 'ModalCtrl', 'Error loading bundle list of ' + nameOfDB + ': ' + err.data + ' STATUS: ' + err.status).then(function () {\n                  $scope.resetToInitState();\n                });\n              });\n            } else {\n              dialogService.open('views/error.html', 'ModalCtrl', 'Error validating DBconfig: ' + JSON.stringify(validRes, null, 4)).then(function () {\n                $scope.resetToInitState();\n              });\n            }\n          } else {\n            dialogService.open('views/error.html', 'ModalCtrl', 'Error validating ConfigProviderService.vals (emuwebappConfig data) after applying changes of newly loaded config (most likely due to wrong entry...): ' + JSON.stringify(validRes, null, 4)).then(function () {\n              $scope.resetToInitState();\n            });\n          }\n        }, function (err) {\n          dialogService.open('views/error.html', 'ModalCtrl', 'Error loading DB config of ' + nameOfDB + ': ' + err.data + ' STATUS: ' + err.status).then(function () {\n            $scope.resetToInitState();\n          });\n        });\n      }  //else {\n         // \tconsole.log('action currently not allowed');\n         // }\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.aboutBtnClick = function () {\n      dialogService.open('views/about.html', 'AboutCtrl');\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.clearBtnClick = function () {\n      // viewState.setdragBarActive(false);\n      var modalText;\n      if (HistoryService.movesAwayFromLastSave !== 0 && ConfigProviderService.vals.main.comMode !== 'DEMO') {\n        modalText = 'Do you wish to clear all loaded data and if connected disconnect from the server? CAUTION: YOU HAVE UNSAVED CHANGES! These will be lost if you confirm.';\n      } else {\n        modalText = 'Do you wish to clear all loaded data and if connected disconnect from the server? You have NO unsaved changes so no changes will be lost.';\n      }\n      dialogService.open('views/confirmModal.html', 'ConfirmmodalCtrl', modalText).then(function (res) {\n        if (res) {\n          $scope.resetToInitState();\n        }\n      });\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.resetToInitState = function () {\n      if (Iohandlerservice.wsH.isConnected()) {\n        Iohandlerservice.wsH.disconnectWarning().then(function (resp) {\n          $log.info('Closing websocket connection to server');\n          Iohandlerservice.wsH.closeConnect();\n        });\n      }\n      $scope.curBndl = {};\n      $scope.bundleList = [];\n      Soundhandlerservice.wavJSO = {};\n      LevelService.data = {};\n      Ssffdataservice.data = [];\n      HistoryService.resetToInitState();\n      viewState.setState('noDBorFilesloaded');\n      $scope.$broadcast('resetToInitState');\n      viewState.somethingInProgress = false;\n      viewState.resetToInitState();\n      viewState.showDropZone = true;\n      $scope.loadDefaultConfig();\n    };\n    // bottom menu:\n    /**\n\t\t *\n\t\t */\n    $scope.cmdZoomAll = function () {\n      if (viewState.getPermission('zoom')) {\n        LevelService.deleteEditArea();\n        viewState.setViewPort(0, Soundhandlerservice.wavJSO.Data.length);\n      } else {\n        console.log('action currently not allowed');\n      }\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.cmdZoomIn = function () {\n      if (viewState.getPermission('zoom')) {\n        LevelService.deleteEditArea();\n        viewState.zoomViewPort(true);\n      } else {\n        console.log('action currently not allowed');\n      }\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.cmdZoomOut = function () {\n      if (viewState.getPermission('zoom')) {\n        LevelService.deleteEditArea();\n        viewState.zoomViewPort(false);\n      } else {\n        console.log('action currently not allowed');\n      }\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.cmdZoomLeft = function () {\n      if (viewState.getPermission('zoom')) {\n        LevelService.deleteEditArea();\n        viewState.shiftViewPort(false);\n      } else {\n        console.log('action currently not allowed');\n      }\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.cmdZoomRight = function () {\n      if (viewState.getPermission('zoom')) {\n        LevelService.deleteEditArea();\n        viewState.shiftViewPort(true);\n      } else {\n        console.log('action currently not allowed');\n      }\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.cmdZoomSel = function () {\n      if (viewState.getPermission('zoom')) {\n        LevelService.deleteEditArea();\n        viewState.setViewPort(viewState.curViewPort.selectS, viewState.curViewPort.selectE);\n      } else {\n        console.log('action currently not allowed');\n      }\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.cmdPlayView = function () {\n      if (viewState.getPermission('playaudio')) {\n        Soundhandlerservice.playFromTo(viewState.curViewPort.sS, viewState.curViewPort.eS);\n        viewState.animatePlayHead(viewState.curViewPort.sS, viewState.curViewPort.eS);\n      } else {\n        console.log('action currently not allowed');\n      }\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.cmdPlaySel = function () {\n      if (viewState.getPermission('playaudio')) {\n        Soundhandlerservice.playFromTo(viewState.curViewPort.selectS, viewState.curViewPort.selectE);\n        viewState.animatePlayHead(viewState.curViewPort.selectS, viewState.curViewPort.selectE);\n      } else {\n        console.log('action currently not allowed');\n      }\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.cmdPlayAll = function () {\n      if (viewState.getPermission('playaudio')) {\n        Soundhandlerservice.playFromTo(0, Soundhandlerservice.wavJSO.Data.length);\n        viewState.animatePlayHead(0, Soundhandlerservice.wavJSO.Data.length);\n      } else {\n        console.log('action currently not allowed');\n      }\n    };\n    ///////////////////////////\n    // other\n    /**\n\t\t *\n\t\t */\n    $scope.setlastkeycode = function (c) {\n      $scope.lastkeycode = c;\n    };\n    /**\n\t\t * SIC should move into viewstate.rightSubmenuOpen variable\n\t\t */\n    $scope.toggleRightSideMenuHidden = function () {\n      viewState.setRightsubmenuOpen(!viewState.getRightsubmenuOpen());\n    };\n    /**\n\t\t * function used to change perspective\n\t\t * @param persp json object of current perspective containing name attribute\n\t\t */\n    $scope.changePerspective = function (persp) {\n      // viewState.somethingInProgress = true;\n      // alert(nameOfDB);\n      // viewState.somethingInProgressTxt = 'Changing perspective...';\n      var newIdx;\n      for (var i = 0; i < ConfigProviderService.vals.perspectives.length; i++) {\n        if (persp.name === ConfigProviderService.vals.perspectives[i].name) {\n          newIdx = i;\n        }\n      }\n      viewState.curPerspectiveIdx = newIdx;\n      // close submenu\n      $scope.toggleRightSideMenuHidden();  // viewState.somethingInProgressTxt = 'Done!';\n                                           // viewState.somethingInProgress = false;\n    };\n    /**\n\t\t * function used by right side menu to get color of current perspecitve in ul\n\t\t * @param persp json object of current perspective containing name attribute\n\t\t */\n    $scope.getPerspectiveColor = function (persp) {\n      var cl;\n      if (viewState.curPerspectiveIdx === -1 || persp.name === ConfigProviderService.vals.perspectives[viewState.curPerspectiveIdx].name) {\n        cl = 'emuwebapp-curSelPerspLi';\n      } else {\n        cl = 'emuwebapp-perspLi';\n      }\n      return cl;\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').controller('FileCtrl', [\n  '$scope',\n  'Binarydatamaniphelper',\n  'Textgridparserservice',\n  'ConfigProviderService',\n  'Validationservice',\n  function ($scope, Binarydatamaniphelper, Textgridparserservice, ConfigProviderService, Validationservice) {\n    $scope.newfiles = [];\n    $scope.wav = {};\n    $scope.grid = {};\n    $scope.curBndl = {};\n    $scope.resetToInitState = function () {\n      $scope.newfiles = [];\n      $scope.wav = {};\n      $scope.grid = {};\n      $scope.curBndl = {};\n      $scope.dropText = $scope.dropDefault;\n    };\n    $scope.$on('resetToInitState', function () {\n      $scope.resetToInitState();\n    });\n    $scope.handleLocalFiles = function () {\n      $scope.$parent.vs.showDropZone = false;\n      $scope.$parent.cps.vals.main.comMode = 'FileAPI';\n      $scope.$parent.vs.setState('loadingSaving');\n      // reset history\n      $scope.$parent.hists.resetToInitState();\n      $scope.$parent.vs.somethingInProgress = true;\n      $scope.$parent.vs.somethingInProgressTxt = 'Loading local File: ' + $scope.wav.name;\n      // empty ssff files\n      $scope.$parent.ssffds.data = [];\n      $scope.$parent.levServ.data = {};\n      //arrBuff = Binarydatamaniphelper.base64ToArrayBuffer(bundleData.mediaFile.data);\n      $scope.$parent.vs.somethingInProgressTxt = 'Parsing WAV file...';\n      var reader = new FileReader();\n      reader.readAsArrayBuffer($scope.wav);\n      reader.onloadend = function (evt) {\n        if (evt.target.readyState == FileReader.DONE) {\n          $scope.$parent.io.httpGetPath('configFiles/standalone_emuwebappConfig.json').then(function (resp) {\n            // first element of perspectives is default perspective\n            $scope.$parent.vs.curPerspectiveIdx = 0;\n            $scope.$parent.cps.setVals(resp.data.EMUwebAppConfig);\n            delete resp.data.EMUwebAppConfig;\n            // delete to avoid duplicate\n            var validRes = Validationservice.validateJSO('emuwebappConfigSchema', ConfigProviderService.vals);\n            if (validRes === true) {\n              $scope.$parent.cps.curDbConfig = resp.data;\n              $scope.curBndl = {};\n              $scope.curBndl.name = $scope.wav.name.substr(0, $scope.wav.name.lastIndexOf('.'));\n              $scope.$parent.bundleList.push($scope.curBndl);\n              $scope.$parent.curBndl = $scope.curBndl;\n              // then get the DBconfigFile\n              var res;\n              if ($scope.firefox) {\n                res = evt.target.result;\n              } else {\n                res = evt.currentTarget.result;\n              }\n              $scope.$parent.wps.parseWavArrBuf(res).then(function (wavJSO) {\n                $scope.$parent.vs.curViewPort.sS = 0;\n                $scope.$parent.vs.curViewPort.eS = wavJSO.Data.length;\n                $scope.$parent.vs.resetSelect();\n                $scope.$parent.vs.curPerspectiveIdx = 0;\n                $scope.$parent.shs.wavJSO = wavJSO;\n                // parsing of Textgrid Data\n                if (!$.isEmptyObject($scope.grid)) {\n                  var reader = new FileReader();\n                  reader.readAsText($scope.grid);\n                  reader.onloadend = function (evt) {\n                    if (evt.target.readyState == FileReader.DONE) {\n                      var extension = $scope.wav.name.substr(0, $scope.wav.name.lastIndexOf('.'));\n                      Textgridparserservice.asyncParseTextGrid(evt.currentTarget.result, $scope.wav.name, extension).then(function (parseMess) {\n                        var annot = parseMess.data;\n                        $scope.$parent.levServ.setData(annot);\n                        // console.log(JSON.stringify(l, undefined, 2));\n                        var lNames = [];\n                        var levelDefs = [];\n                        annot.levels.forEach(function (l) {\n                          lNames.push(l.name);\n                          levelDefs.push({\n                            'name': l.name,\n                            'type': l.type,\n                            'attributeDefinitions': {\n                              'name': l.name,\n                              'type': 'string'\n                            }\n                          });\n                        });\n                        // set level defs\n                        $scope.$parent.cps.curDbConfig.levelDefinitions = levelDefs;\n                        $scope.$parent.vs.setCurLevelAttrDefs(ConfigProviderService.curDbConfig.levelDefinitions);\n                        $scope.$parent.cps.vals.perspectives[$scope.$parent.vs.curPerspectiveIdx].levelCanvases.order = lNames;\n                        $scope.$parent.vs.somethingInProgressTxt = 'Done!';\n                        $scope.$parent.vs.somethingInProgress = false;\n                        $scope.$parent.vs.setState('labeling');  // $scope.$parent.openSubmenu();\n                      });\n                    }\n                  }, function (errMess) {\n                    $scope.$parent.dials.open('views/error.html', 'ModalCtrl', 'Error parsing textgrid file: ' + errMess.status.message);\n                  };\n                } else {\n                  $scope.$parent.vs.setState('labeling');\n                  $scope.$parent.vs.somethingInProgress = false;\n                  $scope.$parent.vs.somethingInProgressTxt = 'Done!';  // $scope.$parent.openSubmenu();\t\t    \n                }\n              });\n            } else {\n              $scope.$parent.dials.open('views/error.html', 'ModalCtrl', 'Error validating ConfigProviderService.vals (emuwebappConfig data) : ' + JSON.stringify(validRes, null, 4));\n            }\n          }, function (errMess) {\n            $scope.$parent.dials.open('views/error.html', 'ModalCtrl', 'Error parsing wav file: ' + errMess.status.message);\n          });\n        }\n      };\n    };\n    $scope.traverseFileTreeChrome = function (item, path) {\n      path = path || '';\n      if (item.isFile) {\n        item.file(function (file) {\n          var extension = file.name.substr(file.name.lastIndexOf('.') + 1).toUpperCase();\n          if (extension === 'WAV') {\n            $scope.wav = file;\n            $scope.handleLocalFiles();\n          } else if (extension === 'TEXTGRID') {\n            $scope.grid = file;\n          } else {\n            $scope.other = file;\n            $scope.$parent.dials.open('views/error.html', 'ModalCtrl', 'Error: Unknown File Type for File ' + $scope.other.name).then(function (res) {\n              $scope.resetToInitState();\n              $scope.$parent.resetToInitState();\n            });\n          }\n        });\n      } else if (item.isDirectory) {\n        var dirReader = item.createReader();\n        dirReader.readEntries(function (entries) {\n          for (var i = 0; i < entries.length; i++) {\n            $scope.traverseFileTreeChrome(entries[i], path + item.name + '/');\n          }\n        });\n      }\n    };\n    $scope.traverseFileTreeFirefox = function (item, path) {\n      path = path || '';\n      if (item.size > 0) {\n        var extension = item.name.substr(item.name.lastIndexOf('.') + 1).toUpperCase();\n        if (extension === 'WAV') {\n          $scope.wav = item;\n          $scope.handleLocalFiles();\n        } else if (extension === 'TEXTGRID') {\n          $scope.grid = item;\n        } else {\n          $scope.other = item;\n          $scope.$parent.dials.open('views/error.html', 'ModalCtrl', 'Error: Unknown File Type for File ' + $scope.other.name).then(function (res) {\n            $scope.resetToInitState();\n            $scope.$parent.resetToInitState();\n          });\n        }\n      } else if (item.isDirectory) {\n        var dirReader = item.createReader();\n        dirReader.readEntries(function (entries) {\n          for (var i = 0; i < entries.length; i++) {\n            $scope.traverseFileTreeFirefox(entries[i], path + item.name + '/');\n          }\n        });\n      }\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').directive('level', [\n  '$animate',\n  'viewState',\n  'ConfigProviderService',\n  'Drawhelperservice',\n  'HistoryService',\n  'fontScaleService',\n  'dialogService',\n  'LevelService',\n  function ($animate, viewState, ConfigProviderService, Drawhelperservice, HistoryService, fontScaleService, dialogService, LevelService) {\n    return {\n      templateUrl: 'views/level.html',\n      restrict: 'E',\n      scope: {\n        level: '=',\n        idx: '='\n      },\n      link: function postLink(scope, element, attr) {\n        // select the needed DOM items from the template\n        var canvas = element.find('canvas');\n        scope.open = attr.open;\n        scope.vs = viewState;\n        scope.hists = HistoryService;\n        scope.cps = ConfigProviderService;\n        scope.dials = dialogService;\n        var levelCanvasContainer = element.find('div');\n        scope.levelDef = ConfigProviderService.getLevelDefinition(scope.level.name);\n        // curAttrDef = scope.level.name;\n        scope.backgroundCanvas = { 'background': ConfigProviderService.vals.colors.levelColor };\n        // on broadcast msg from main ctrl openSubmenu refresh timeline\n        scope.$on('refreshTimeline', function () {\n          drawLevelDetails(scope.level, viewState, ConfigProviderService);\n          drawLevelMarkup(scope.level, viewState, ConfigProviderService);\n        });\n        ///////////////\n        // watches\n        //\n        scope.$watch('vs.curViewPort', function (newValue, oldValue) {\n          if (oldValue.sS !== newValue.sS || oldValue.eS !== newValue.eS || oldValue.windowWidth !== newValue.windowWidth) {\n            drawLevelDetails(scope.level, viewState, ConfigProviderService);\n            drawLevelMarkup(scope.level, viewState, ConfigProviderService);  //console.log('leveldraw update A');\n          } else {\n            //console.log('leveldraw update B');\n            drawLevelMarkup(scope.level, viewState, ConfigProviderService);\n          }\n        }, true);\n        //\n        scope.$watch('vs.curMouseX', function (newValue, oldValue) {\n          // only repaint if mouse over current level\n          if (viewState.getcurMouseLevelName() === scope.level.name) {\n            //if (!oldValue || !newValue || newValue.id !== oldValue.id) {\n            //\tdrawLevelMarkup(scope.level, viewState, ConfigProviderService);\n            //} else {\n            drawLevelDetails(scope.level, viewState, ConfigProviderService);\n            drawLevelMarkup(scope.level, viewState, ConfigProviderService);  //}\n          }\n        }, true);\n        //\n        scope.$watch('vs.curClickLevelName', function (newValue, oldValue) {\n          if (newValue !== undefined) {\n            drawLevelMarkup(scope.level, viewState, ConfigProviderService);\n          }\n        }, true);\n        //\n        scope.$watch('vs.movingBoundarySample', function () {\n          drawLevelDetails(scope.level, viewState, ConfigProviderService);\n          drawLevelMarkup(scope.level, viewState, ConfigProviderService);\n        }, true);\n        //\n        scope.$watch('vs.movingBoundary', function () {\n          drawLevelMarkup(scope.level, viewState, ConfigProviderService);\n        }, true);\n        //\n        scope.$watch('hists.movesAwayFromLastSave', function () {\n          drawLevelDetails(scope.level, viewState, ConfigProviderService);\n          drawLevelMarkup(scope.level, viewState, ConfigProviderService);\n        }, true);\n        //\n        /////////////////\n        /**\n\t\t\t\t *\n\t\t\t\t */\n        scope.changeCurAttrDef = function (attrDefName) {\n          var curAttrDef = viewState.getCurAttrDef(scope.level.name);\n          if (curAttrDef !== attrDefName) {\n            // curAttrDef = attrDefName;\n            viewState.setCurAttrDef(scope.level.name, attrDefName);\n            if (!element.hasClass('emuwebapp-levelCanvasContainer-animate')) {\n              viewState.focusInTextField = false;\n              LevelService.deleteEditArea();\n              $animate.addClass(levelCanvasContainer, 'emuwebapp-levelCanvasContainer-animate', scope.finishedAnim);\n            }\n          }\n        };\n        /**\n\t\t\t\t *\n\t\t\t\t */\n        scope.finishedAnim = function () {\n          $animate.removeClass(levelCanvasContainer, 'emuwebapp-levelCanvasContainer-animate');\n          // redraw\n          drawLevelDetails(scope.level, viewState, ConfigProviderService);\n          drawLevelMarkup(scope.level, viewState, ConfigProviderService);\n        };\n        /**\n\t\t\t\t *\n\t\t\t\t */\n        scope.getAttrDefBtnColor = function (attrDefName) {\n          var curColor;\n          var curAttrDef = viewState.getCurAttrDef(scope.level.name);\n          if (attrDefName === curAttrDef) {\n            curColor = { 'background': '-webkit-radial-gradient(50% 50%, closest-corner, rgba(0, 0, 0, 1), rgba(0, 0, 0, 0) 60%)' };\n          } else {\n            curColor = { 'background-color': 'white' };\n          }\n          return curColor;\n        };\n        scope.updateView = function () {\n          if ($.isEmptyObject(scope.cps)) {\n            console.log('undef viewState');\n            return;\n          }\n          drawLevelDetails(scope.level, scope.vs, scope.cps);\n        };\n        ///////////////\n        // bindings\n        // on mouse leave reset viewState.\n        element.bind('mouseleave', function () {\n          viewState.setcurMouseSegment(undefined, undefined, undefined);\n          drawLevelMarkup(scope.level, viewState, ConfigProviderService);\n        });\n        /**\n\t\t\t\t * draw level details\n\t\t\t\t * @param levelDetails\n\t\t\t\t * @param viewState\n\t\t\t\t * @param cps\n\t\t\t\t */\n        function drawLevelDetails(levelDetails, viewState, config) {\n          var fontSize = config.vals.font.fontPxSize;\n          var curAttrDef = viewState.getCurAttrDef(scope.level.name);\n          if ($.isEmptyObject(levelDetails)) {\n            console.log('undef levelDetails');\n            return;\n          }\n          if ($.isEmptyObject(viewState)) {\n            console.log('undef viewState');\n            return;\n          }\n          if ($.isEmptyObject(config)) {\n            console.log('undef config');\n            return;\n          }\n          if (!scope.open) {\n            fontSize -= 1;\n          }\n          var ctx = canvas[0].getContext('2d');\n          ctx.clearRect(0, 0, canvas[0].width, canvas[0].height);\n          //predef vars\n          var sDist, posS, posE, horizontalText;\n          sDist = viewState.getSampleDist(canvas[0].width);\n          // draw name of level and type\n          var scaleY = ctx.canvas.height / ctx.canvas.offsetHeight;\n          if (levelDetails.name === curAttrDef) {\n            horizontalText = fontScaleService.getTextImageTwoLines(ctx, levelDetails.name, '(' + levelDetails.type + ')', fontSize, config.vals.font.fontType, config.vals.colors.labelColor, true);\n          } else {\n            horizontalText = fontScaleService.getTextImageTwoLines(ctx, levelDetails.name + ':' + curAttrDef, '(' + levelDetails.type + ')', fontSize, config.vals.font.fontType, config.vals.colors.labelColor, true);\n          }\n          ctx.drawImage(horizontalText, 0, ctx.canvas.height / 2 - fontSize * scaleY);\n          var segMId = viewState.getcurMouseSegment();\n          var segCId = viewState.getcurClickSegments();\n          var levelId = viewState.getcurClickLevelName();\n          var curID = -1;\n          // calculate generic max with of single char (m char used)\n          var mTxtImg = fontScaleService.getTextImage(ctx, 'm', fontSize - 2, config.vals.font.fontType, config.vals.colors.labelColor);\n          var mTxtImgWidth = fontScaleService.getLastImageWidth();\n          // calculate generic max with of single digit (0 digit used)\n          var zeroTxtImg = fontScaleService.getTextImage(ctx, '0', fontSize - 4, config.vals.font.fontType, config.vals.colors.endBoundaryColor);\n          var zeroTxtImgWidth = fontScaleService.getLastImageWidth();\n          if (levelDetails.type === 'SEGMENT') {\n            ctx.fillStyle = config.vals.colors.startBoundaryColor;\n            // draw segments\n            var e = levelDetails.items;\n            e.forEach(function (curEvt) {\n              ++curID;\n              if (curEvt.sampleStart >= viewState.curViewPort.sS && curEvt.sampleStart <= viewState.curViewPort.eS || curEvt.sampleStart + curEvt.sampleDur > viewState.curViewPort.sS && curEvt.sampleStart + curEvt.sampleDur < viewState.curViewPort.eS || curEvt.sampleStart < viewState.curViewPort.sS && curEvt.sampleStart + curEvt.sampleDur > viewState.curViewPort.eS) {\n                // get label\n                var curLabVal;\n                curEvt.labels.forEach(function (lab) {\n                  if (lab.name === curAttrDef) {\n                    curLabVal = lab.value;\n                  }\n                });\n                // draw segment start\n                //posS = Math.round(viewState.getPos(canvas[0].width, curEvt.sampleStart));\n                //posE = Math.round(viewState.getPos(canvas[0].width, curEvt.sampleStart + curEvt.sampleDur+1));\n                posS = viewState.getPos(canvas[0].width, curEvt.sampleStart);\n                posE = viewState.getPos(canvas[0].width, curEvt.sampleStart + curEvt.sampleDur);\n                ctx.fillStyle = config.vals.colors.startBoundaryColor;\n                ctx.fillRect(posS, 0, 2, canvas[0].height / 2);\n                //draw segment end\n                ctx.fillStyle = config.vals.colors.endBoundaryColor;\n                ctx.fillRect(posE, canvas[0].height / 2, 2, canvas[0].height);\n                //check for enough space to stroke text\n                if (posE - posS > mTxtImgWidth * curLabVal.length) {\n                  horizontalText = fontScaleService.getTextImage(ctx, curLabVal, fontSize - 2, config.vals.font.fontType, config.vals.colors.labelColor);\n                  var tW = fontScaleService.getLastImageWidth();\n                  var tX = posS + (posE - posS) / 2 - tW / 2;\n                  if (scope.open) {\n                    ctx.drawImage(horizontalText, 0, 0, horizontalText.width, horizontalText.height, tX, canvas[0].height / 2 - (fontSize - 2), horizontalText.width, horizontalText.height);\n                  } else {\n                    ctx.drawImage(horizontalText, 0, 0, horizontalText.width, horizontalText.height, tX, 0, horizontalText.width, horizontalText.height);\n                  }\n                }\n                // var hst1 = fontScaleService.getLastImageWidth();\n                // var tX1 = posS + (posE - posS) / 2 - hst1 / 2;\n                // var tX2 = posS + (posE - posS) / 2 - hst2 / 2;\n                //draw helper lines\n                if (scope.open) {\n                  var labelCenter = posS + (posE - posS) / 2;\n                  var hlY = canvas[0].height / 4;\n                  // start helper line\n                  ctx.strokeStyle = config.vals.colors.startBoundaryColor;\n                  ctx.beginPath();\n                  ctx.moveTo(posS, hlY);\n                  ctx.lineTo(labelCenter, hlY);\n                  ctx.lineTo(labelCenter, hlY + 5);\n                  ctx.stroke();\n                  hlY = canvas[0].height / 4 * 3;\n                  // end helper line\n                  ctx.strokeStyle = config.vals.colors.endBoundaryColor;\n                  ctx.beginPath();\n                  ctx.moveTo(posE, hlY);\n                  ctx.lineTo(labelCenter, hlY);\n                  ctx.lineTo(labelCenter, hlY - 5);\n                  ctx.stroke();\n                }\n                // if (posE - posS <= tW) {\n                // \tctx.strokeStyle = 'red';//config.vals.colors.startBoundaryColor;\n                // \tctx.beginPath();\n                // \tctx.moveTo(tX1 + hst1 / 2, canvas[0].height / 4 + 10);\n                // \tctx.lineTo(tX1 + hst1 / 2, canvas[0].height / 4 + 30);\n                // \tctx.stroke();\n                // }\n                // draw sampleStart numbers\n                //check for enough space to stroke text\n                if (posE - posS > zeroTxtImgWidth * curEvt.sampleStart.toString().length) {\n                  var horizontalSubText1 = fontScaleService.getTextImage(ctx, curEvt.sampleStart, fontSize - 4, config.vals.font.fontType, config.vals.colors.endBoundaryColor);\n                  ctx.drawImage(horizontalSubText1, 0, 0, horizontalText.width, horizontalText.height, posS + 3, 0, horizontalText.width, horizontalText.height);\n                }\n                // draw sampleDur numbers.\n                //sStW = fontScaleService.getLastImageWidth();\n                //var sDtW = ctx.measureText('dur: ' + curEvt.sampleDur).width;\n                //ctx.fillStyle = config.vals.colors.endBoundaryColor;\n                //check for enough space to stroke text\n                if (posE - posS > zeroTxtImgWidth * (5 + curEvt.sampleDur.toString().length)) {\n                  var horizontalSubText2 = fontScaleService.getTextImage(ctx, 'dur: ' + curEvt.sampleDur, fontSize - 4, config.vals.font.fontType, config.vals.colors.endBoundaryColor);\n                  var hst2 = fontScaleService.getLastImageWidth();\n                  ctx.drawImage(horizontalSubText2, 0, 0, horizontalText.width, horizontalText.height, posE - hst2, canvas[0].height / 4 * 3, horizontalText.width, horizontalText.height);  //ctx.fillText('dur: ' + curEvt.sampleDur, posE - sDtW, canvas[0].height - canvas[0].height / 12);\n                }\n              }\n            });\n          } else if (levelDetails.type === 'EVENT') {\n            ctx.fillStyle = config.vals.colors.startBoundaryColor;\n            // predef. vars\n            var perc;\n            levelDetails.items.forEach(function (curEvt) {\n              if (curEvt.samplePoint > viewState.curViewPort.sS && curEvt.samplePoint < viewState.curViewPort.eS) {\n                perc = Math.round(viewState.getPos(canvas[0].width, curEvt.samplePoint) + sDist / 2);\n                // get label\n                var curLabVal;\n                curEvt.labels.forEach(function (lab) {\n                  if (lab.name === curAttrDef) {\n                    curLabVal = lab.value;\n                  }\n                });\n                //if (segMId !=== undefined && levelDetails.name === viewState.curMouseMoveLevelName && segMId.id === viewState.curMouseMoveSegmentName) {\n                //console.log('this is the selected boundary');\n                // \t\tctx.fillStyle = config.vals.colors.selectedBoundaryColor;\n                // \t\tctx.fillRect(perc, 0, 8, canvas[0].height / 2 - canvas[0].height / 10);\n                // \t\tctx.fillRect(perc, canvas[0].height / 2 + canvas[0].height / 10, 8, canvas[0].height / 2 - canvas[0].height / 10);\n                // \t\ttW = ctx.measureText(levelDetails.items[k].label).width;\n                // \t\tctx.fillStyle = this.params.labelColor;\n                // \t\tctx.fillText(levelDetails.items[k].label, perc - tW / 2 + 1, canvas[0].height / 2);\n                //} else {\n                ctx.fillStyle = config.vals.colors.startBoundaryColor;\n                ctx.fillRect(perc, 0, 1, canvas[0].height / 2 - canvas[0].height / 10);\n                ctx.fillRect(perc, canvas[0].height / 2 + canvas[0].height / 10, 1, canvas[0].height / 2 - canvas[0].height / 10);\n                horizontalText = fontScaleService.getTextImage(ctx, curLabVal, fontSize - 2, config.vals.font.fontType, config.vals.colors.labelColor);\n                ctx.drawImage(horizontalText, 0, 0, horizontalText.width, horizontalText.height, perc - 5, canvas[0].height / 3, horizontalText.width, horizontalText.height);\n                //}\n                horizontalText = fontScaleService.getTextImage(ctx, curEvt.samplePoint, fontSize - 4, config.vals.font.fontType, config.vals.colors.endBoundaryColor);\n                ctx.drawImage(horizontalText, 0, 0, horizontalText.width, horizontalText.height, perc + 5, 0, horizontalText.width, horizontalText.height);\n              }\n            });\n          }  // draw cursor/selected area\n        }\n        /**\n\t\t\t\t *\n\t\t\t\t */\n        function drawLevelMarkup(levelDetails, viewState, config) {\n          var ctx = canvas[1].getContext('2d');\n          ctx.clearRect(0, 0, canvas[1].width, canvas[1].height);\n          if (levelDetails.name === viewState.getcurClickLevelName()) {\n            ctx.fillStyle = config.vals.colors.selectedLevelColor;\n            ctx.fillRect(0, 0, canvas[0].width, canvas[0].height);\n          }\n          // draw moving boundary line if moving\n          Drawhelperservice.drawMovingBoundaryLine(ctx);\n          // draw current viewport selected\n          Drawhelperservice.drawCurViewPortSelected(ctx);\n          var posS, posE, sDist, xOffset, curEvt;\n          posS = viewState.getPos(canvas[1].width, viewState.curViewPort.selectS);\n          posE = viewState.getPos(canvas[1].width, viewState.curViewPort.selectE);\n          sDist = viewState.getSampleDist(canvas[1].width);\n          var segMId = viewState.getcurMouseSegment();\n          var segCId = viewState.getcurClickSegments();\n          var levelId = viewState.getcurClickLevelName();\n          if (segCId !== undefined) {\n            // draw clicked on selected areas\n            if (levelDetails.name === levelId && segCId.length > 0) {\n              segCId.forEach(function (entry) {\n                if (entry !== undefined) {\n                  // check if segment or event level\n                  if (entry.sampleStart !== undefined) {\n                    posS = Math.round(viewState.getPos(canvas[0].width, entry.sampleStart));\n                    posE = Math.round(viewState.getPos(canvas[0].width, entry.sampleStart + entry.sampleDur));\n                  } else {\n                    posS = Math.round(viewState.getPos(canvas[0].width, entry.samplePoint) + sDist / 2);\n                    posS = posS - 5;\n                    posE = posS + 10;\n                  }\n                  ctx.fillStyle = config.vals.colors.selectedSegmentColor;\n                  ctx.fillRect(posS, 0, posE - posS, canvas[0].height);\n                  ctx.fillStyle = config.vals.colors.startBoundaryColor;\n                }\n              });\n            }\n          }\n          // draw preselected boundary\n          curEvt = viewState.getcurMouseSegment();\n          if (curEvt !== undefined && segMId !== undefined && levelDetails.name === viewState.getcurMouseLevelName()) {\n            ctx.fillStyle = config.vals.colors.selectedBoundaryColor;\n            if (segMId === false) {\n              // before first segment\n              if (viewState.getcurMouseLevelType() === 'SEGMENT') {\n                curEvt = levelDetails.items[0];\n                posS = Math.round(viewState.getPos(canvas[1].width, curEvt.sampleStart));\n                ctx.fillRect(posS, 0, 3, canvas[1].height);\n              }\n            } else if (segMId === true) {\n              // after last segment\n              if (viewState.getcurMouseLevelType() === 'SEGMENT') {\n                curEvt = levelDetails.items[levelDetails.items.length - 1];\n                posS = Math.round(viewState.getPos(canvas[1].width, curEvt.sampleStart + curEvt.sampleDur));\n                ctx.fillRect(posS, 0, 3, canvas[1].height);\n              }\n            } else {\n              // in the middle\n              if (viewState.getcurMouseLevelType() === 'SEGMENT') {\n                posS = Math.round(viewState.getPos(canvas[1].width, curEvt.sampleStart));\n                ctx.fillRect(posS, 0, 3, canvas[1].height);\n              } else {\n                posS = Math.round(viewState.getPos(canvas[1].width, curEvt.samplePoint));\n                xOffset = sDist / 2;\n                ctx.fillRect(posS + xOffset, 0, 3, canvas[1].height);\n              }\n            }\n            ctx.fillStyle = config.vals.colors.startBoundaryColor;\n          }\n        }\n      }\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').directive('osci', [\n  '$timeout',\n  'viewState',\n  'Soundhandlerservice',\n  'ConfigProviderService',\n  'Drawhelperservice',\n  function ($timeout, viewState, Soundhandlerservice, ConfigProviderService, Drawhelperservice) {\n    return {\n      templateUrl: 'views/osci.html',\n      replace: true,\n      restrict: 'E',\n      scope: {},\n      controller: [\n        '$scope',\n        function ($scope) {\n          $scope.changeAttrDef = function () {\n            alert('sadf');\n          };\n        }\n      ],\n      link: function postLink(scope, element, attrs) {\n        // select the needed DOM elements from the template\n        var canvasLength = element.find('canvas').length;\n        var canvas = element.find('canvas')[0];\n        var markupCanvas = element.find('canvas')[canvasLength - 1];\n        // assign attributes to scope\n        scope.order = attrs.order;\n        scope.trackName = attrs.trackName;\n        scope.cps = ConfigProviderService;\n        scope.viewState = viewState;\n        ///////////////\n        // watches\n        // on broadcast msg from main ctrl openSubmenu refresh timeline\n        scope.$on('refreshTimeline', function () {\n          if (!$.isEmptyObject(Soundhandlerservice)) {\n            if (!$.isEmptyObject(Soundhandlerservice.wavJSO)) {\n              drawVpOsciMarkup(scope, ConfigProviderService, true);\n            }\n          }\n        });\n        //\n        scope.$watch('viewState.timelineSize', function () {\n          $timeout(scope.redraw, 10);\n        });\n        //\n        scope.$watch('viewState.curPerspectiveIdx', function () {\n          drawVpOsciMarkup(scope, ConfigProviderService, true);\n        }, true);\n        //\n        scope.$watch('viewState.playHeadAnimationInfos', function () {\n          if (!$.isEmptyObject(Soundhandlerservice)) {\n            if (!$.isEmptyObject(Soundhandlerservice.wavJSO)) {\n              drawPlayHead(scope, ConfigProviderService);\n            }\n          }\n        }, true);\n        //\n        scope.$watch('viewState.movingBoundarySample', function (newValue) {\n          if (!$.isEmptyObject(Soundhandlerservice)) {\n            if (!$.isEmptyObject(Soundhandlerservice.wavJSO)) {\n              drawVpOsciMarkup(scope, ConfigProviderService, true);\n            }\n          }\n        }, true);\n        //\n        scope.$watch('viewState.movingBoundary', function () {\n          if (!$.isEmptyObject(Soundhandlerservice)) {\n            if (!$.isEmptyObject(Soundhandlerservice.wavJSO)) {\n              drawVpOsciMarkup(scope, ConfigProviderService, true);\n            }\n          }\n        }, true);\n        //\n        scope.$watch('viewState.curViewPort', function (newValue, oldValue) {\n          if (!$.isEmptyObject(Soundhandlerservice)) {\n            if (!$.isEmptyObject(Soundhandlerservice.wavJSO)) {\n              // check for changed zoom\n              if (oldValue.sS !== newValue.sS || oldValue.eS !== newValue.eS) {\n                var allPeakVals = Drawhelperservice.calculatePeaks(viewState, canvas, Soundhandlerservice.wavJSO.Data);\n                Drawhelperservice.osciPeaks = allPeakVals;\n                Drawhelperservice.freshRedrawDrawOsciOnCanvas(viewState, canvas, Drawhelperservice.osciPeaks, Soundhandlerservice.wavJSO.Data, ConfigProviderService);\n              }\n              drawVpOsciMarkup(scope, ConfigProviderService, true);\n            }\n          }\n        }, true);\n        //\n        /////////////////////////\n        scope.redraw = function () {\n          drawVpOsciMarkup(scope, ConfigProviderService, true);\n        };\n        /**\n\t\t\t\t *\n\t\t\t\t */\n        function drawPlayHead(scope, config) {\n          var ctx = markupCanvas.getContext('2d');\n          ctx.clearRect(0, 0, canvas.width, canvas.height);\n          var posS = viewState.getPos(markupCanvas.width, viewState.playHeadAnimationInfos.sS);\n          var posCur = viewState.getPos(markupCanvas.width, viewState.playHeadAnimationInfos.curS);\n          // console.log(viewState.playHeadAnimationInfos.curS)\n          ctx.fillStyle = ConfigProviderService.vals.colors.selectedAreaColor;\n          ctx.fillRect(posS, 0, posCur - posS, canvas.height);\n          //console.log(posS,posCur);\n          drawVpOsciMarkup(scope, config, false);\n        }\n        /**\n\t\t\t\t * draws markup of osci according to\n\t\t\t\t * the information that is specified in\n\t\t\t\t * the viewport\n\t\t\t\t */\n        function drawVpOsciMarkup(scope, config, reset) {\n          var ctx = markupCanvas.getContext('2d');\n          if (reset) {\n            ctx.clearRect(0, 0, markupCanvas.width, markupCanvas.height);\n          }\n          // draw moving boundary line if moving\n          Drawhelperservice.drawMovingBoundaryLine(ctx);\n          Drawhelperservice.drawViewPortTimes(ctx, true);\n          // draw current viewport selected\n          Drawhelperservice.drawCurViewPortSelected(ctx, true);\n        }\n      }\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').directive('preview', [\n  'viewState',\n  'Soundhandlerservice',\n  'Drawhelperservice',\n  'ConfigProviderService',\n  function (viewState, Soundhandlerservice, Drawhelperservice, ConfigProviderService) {\n    return {\n      templateUrl: 'views/preview.html',\n      restrict: 'E',\n      scope: { currentBundleName: '@' },\n      link: function postLink(scope, element) {\n        // select the needed DOM elements from the template and init vals\n        var canvas = element.find('canvas')[0];\n        var markupCanvas = element.find('canvas')[1];\n        var initialized = false;\n        // hook up scope vars for watches\n        scope.vs = viewState;\n        scope.shs = Soundhandlerservice;\n        scope.backgroundCanvas = {\n          'background': '#eee',\n          'border': '1px solid gray',\n          'width': '100%',\n          'height': '100%'\n        };\n        /////////////////////\n        // watches\n        //\n        scope.$watch('vs.curViewPort', function (newVal, oldVal) {\n          if (!$.isEmptyObject(Soundhandlerservice.wavJSO)) {\n            if (oldVal.sS !== newVal.sS || oldVal.eS !== newVal.eS) {\n              drawPreview();\n            }\n          }\n        }, true);\n        //\n        scope.$watch('currentBundleName', function () {\n          if (!$.isEmptyObject(Soundhandlerservice.wavJSO)) {\n            initialized = false;\n            scope.backgroundCanvas = {\n              'background': ConfigProviderService.vals.colors.levelColor,\n              'border': '1px solid gray',\n              'width': '100%',\n              'height': '100%'\n            };\n            drawPreview();\n          }\n          //clear on empty bundle name\n          if (scope.currentBundleName === '') {\n            var ctx = canvas.getContext('2d');\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n          }\n        }, true);\n        //\n        /////////////////////\n        /**\n\t\t\t\t *\n\t\t\t\t */\n        function drawPreview() {\n          if (!initialized) {\n            Drawhelperservice.freshRedrawDrawOsciOnCanvas(viewState, canvas, Drawhelperservice.osciPeaks, Soundhandlerservice.wavJSO.Data, ConfigProviderService);\n            initialized = true;\n            drawVpOsciMarkup(viewState, canvas, ConfigProviderService);\n          } else {\n            drawVpOsciMarkup(viewState, canvas, ConfigProviderService);\n          }\n        }\n        /**\n\t\t\t\t * draws markup of osci according to\n\t\t\t\t * the information that is specified in\n\t\t\t\t * the viewport\n\t\t\t\t */\n        function drawVpOsciMarkup(vs, canvas, config) {\n          var ctx = markupCanvas.getContext('2d');\n          var posS = markupCanvas.width / Soundhandlerservice.wavJSO.Data.length * vs.curViewPort.sS;\n          var posE = markupCanvas.width / Soundhandlerservice.wavJSO.Data.length * vs.curViewPort.eS;\n          ctx.clearRect(0, 0, markupCanvas.width, markupCanvas.height);\n          ctx.fillStyle = config.vals.colors.selectedAreaColor;\n          ctx.fillRect(posS, 0, posE - posS, markupCanvas.height);\n          ctx.strokeStyle = config.vals.colors.selectedBorderColor;\n          ctx.beginPath();\n          ctx.moveTo(posS, 0);\n          ctx.lineTo(posS, markupCanvas.height);\n          ctx.moveTo(posE, 0);\n          ctx.lineTo(posE, markupCanvas.height);\n          ctx.closePath();\n          ctx.stroke();\n        }\n      }\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').directive('bundleListSideBar', [\n  '$animate',\n  'viewState',\n  function ($animate, viewState) {\n    return {\n      templateUrl: 'views/bundleListSideBar.html',\n      restrict: 'E',\n      replace: true,\n      link: function postLink(scope, element, attr) {\n        ////////////////\n        //watches\n        scope.$watch('vs.submenuOpen', function () {\n          if (scope.vs.submenuOpen) {\n            $animate.removeClass(element, 'emuwebapp-shrinkWidthTo0px');\n            $animate.addClass(element, 'emuwebapp-expandWidthTo240px');\n          } else {\n            $animate.addClass(element, 'emuwebapp-shrinkWidthTo0px');\n          }\n        }, true);\n      }\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').directive('spectro', [\n  '$timeout',\n  'fontScaleService',\n  function ($timeout, fontScaleService) {\n    return {\n      templateUrl: 'views/spectro.html',\n      restrict: 'E',\n      replace: true,\n      link: function postLink(scope, element, attrs) {\n        scope.order = attrs.order;\n        // select the needed DOM elements from the template\n        var canvasLength = element.find('canvas').length;\n        var canvas0 = element.find('canvas')[0];\n        var canvas1 = element.find('canvas')[canvasLength - 1];\n        // FFT default vars\n        var alpha = 0.16;\n        // default alpha for Window Function\n        var context = canvas0.getContext('2d');\n        var markupCtx = canvas1.getContext('2d');\n        var pcmperpixel = 0;\n        window.URL = window.URL || window.webkitURL;\n        var devicePixelRatio = window.devicePixelRatio || 1;\n        var spectroWorker = 'scripts/workers/spectroWorker.js';\n        var primeWorker = new Worker(spectroWorker);\n        var currentImage;\n        ///////////////\n        // watches\n        //\n        scope.$watch('vs.timelineSize', function () {\n          if (!$.isEmptyObject(scope.shs)) {\n            if (!$.isEmptyObject(scope.shs.wavJSO)) {\n              $timeout(scope.redraw, 5);\n            }\n          }\n        });\n        scope.$watch('vs.curViewPort', function (newValue, oldValue) {\n          if (!$.isEmptyObject(scope.shs)) {\n            if (!$.isEmptyObject(scope.shs.wavJSO)) {\n              // check for changed zoom\n              if (oldValue.sS !== newValue.sS || oldValue.eS !== newValue.eS) {\n                scope.redraw();\n              }\n              drawSpectMarkup(true);\n            }\n          }\n        }, true);\n        scope.$watch('vs.movingBoundarySample', function () {\n          if (!$.isEmptyObject(scope.shs)) {\n            if (!$.isEmptyObject(scope.shs.wavJSO)) {\n              markupCtx.clearRect(0, 0, canvas1.width, canvas1.height);\n              drawSpectMarkup();\n            }\n          }\n        }, true);\n        scope.$watch('vs.movingBoundary', function () {\n          if (!$.isEmptyObject(scope.shs)) {\n            if (!$.isEmptyObject(scope.shs.wavJSO)) {\n              // scope.redraw();\n              drawSpectMarkup(true);\n            }\n          }\n        }, true);\n        scope.$watch('vs.spectroSettings', function () {\n          if (!$.isEmptyObject(scope.shs)) {\n            if (!$.isEmptyObject(scope.shs.wavJSO)) {\n              setupEvent();\n              scope.redraw();\n            }\n          }\n        }, true);\n        ///////////////\n        // bindings\n        scope.redraw = function () {\n          pcmpp();\n          markupCtx.clearRect(0, 0, canvas1.width, canvas1.height);\n          drawSpectro(scope.shs.wavJSO.Data);\n        };\n        function pcmpp() {\n          pcmperpixel = (scope.vs.curViewPort.eS + 1 - scope.vs.curViewPort.sS) / canvas0.width;\n        }\n        function drawSpectMarkup(reset) {\n          if (reset) {\n            markupCtx.clearRect(0, 0, canvas1.width, canvas1.height);\n          }\n          // draw moving boundary line if moving\n          scope.dhs.drawMovingBoundaryLine(markupCtx);\n          // draw current viewport selected\n          scope.dhs.drawCurViewPortSelected(markupCtx, false);\n          // draw min max vals and name of track\n          scope.dhs.drawMinMaxAndName(markupCtx, '', scope.vs.spectroSettings.rangeFrom, scope.vs.spectroSettings.rangeTo, 2);\n        }\n        function killSpectroRenderingThread() {\n          context.fillStyle = scope.cps.vals.colors.levelColor;\n          context.fillRect(0, 0, canvas0.width, canvas0.height);\n          // draw current viewport selected\n          scope.dhs.drawCurViewPortSelected(markupCtx, false);\n          // context.font = (scope.cps.vals.font.fontPxSize + 'px' + ' ' + scope.cps.vals.font.fontType);\n          // context.fillStyle = scope.cps.vals.colors.labelColor;\n          var horizontalText = fontScaleService.getTextImage(context, 'rendering...', scope.cps.vals.font.fontPxSize * 0.75, scope.cps.vals.font.fontType, scope.cps.vals.colors.labelColor, true);\n          context.drawImage(horizontalText, 10, 50);\n          if (primeWorker !== null) {\n            primeWorker.terminate();\n            primeWorker = null;\n          }\n        }\n        function setupEvent() {\n          //pcmperpixel = Math.round((scope.vs.curViewPort.eS - scope.vs.curViewPort.sS) / canvas0.width);\n          pcmpp();\n          var imageData = context.createImageData(canvas0.width, canvas0.height);\n          primeWorker.addEventListener('message', function (event) {\n            if (pcmperpixel === event.data.myStep) {\n              var tmp = new Uint8ClampedArray(event.data.img);\n              imageData.data.set(tmp);\n              context.putImageData(imageData, 0, 0);\n              drawSpectMarkup();\n            }\n          });\n        }\n        function drawSpectro(buffer) {\n          killSpectroRenderingThread();\n          //markupCtx.clearRect(0, 0, canvas1.width, canvas1.height);\n          startSpectroRenderingThread(buffer);\n        }\n        function startSpectroRenderingThread(buffer) {\n          pcmpp();\n          primeWorker = new Worker(spectroWorker);\n          // var parseData = new Float32Array(buffer.subarray(scope.vs.curViewPort.sS, scope.vs.curViewPort.eS + Math.round(pcmperpixel * 20 * scope.vs.spectroSettings.windowLength)));\n          var parseData;\n          if (scope.vs.curViewPort.sS >= scope.vs.spectroSettings.windowLength / 2) {\n            parseData = new Float32Array(buffer.subarray(scope.vs.curViewPort.sS - scope.vs.spectroSettings.windowLength / 2, scope.vs.curViewPort.eS + scope.vs.spectroSettings.windowLength));  // pass in half a window extra at the front and a full window extra at the back so everything can be drawn/calculated this also fixes alignment issue\n          } else {\n            parseData = new Float32Array(buffer.subarray(scope.vs.curViewPort.sS, scope.vs.curViewPort.eS + scope.vs.spectroSettings.windowLength));  // tolerate window/2 alignment issue if at beginning of file\n          }\n          setupEvent();\n          primeWorker.postMessage({\n            'cmd': 'config',\n            'N': scope.vs.spectroSettings.windowLength,\n            'alpha': alpha,\n            'freq': scope.vs.spectroSettings.rangeTo,\n            'freqLow': scope.vs.spectroSettings.rangeFrom,\n            'start': scope.vs.curViewPort.sS,\n            'end': scope.vs.curViewPort.eS,\n            'myStep': pcmperpixel,\n            'window': scope.vs.spectroSettings.window,\n            'width': canvas0.width,\n            'height': canvas0.height,\n            'dynRangeInDB': scope.vs.spectroSettings.dynamicRange,\n            'pixelRatio': devicePixelRatio,\n            'sampleRate': scope.shs.wavJSO.SampleRate,\n            'streamChannels': scope.shs.wavJSO.NumChannels,\n            'transparency': scope.cps.vals.spectrogramSettings.transparency,\n            'stream': parseData.buffer,\n            'drawHeatMapColors': scope.vs.spectroSettings.drawHeatMapColors,\n            'preEmphasisFilterFactor': scope.vs.spectroSettings.preEmphasisFilterFactor,\n            'heatMapColorAnchors': scope.vs.spectroSettings.heatMapColorAnchors\n          }, [parseData.buffer]);\n          primeWorker.postMessage({ 'cmd': 'render' });\n        }\n      }\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').controller('TimelineCtrl', [\n  '$scope',\n  'Drawhelperservice',\n  function ($scope, Drawhelperservice) {\n    $scope.dhs = Drawhelperservice;\n  }\n]);\n'use strict';\nangular.module('emuwebApp').controller('ExportCtrl', [\n  '$scope',\n  'dialogService',\n  'exportData',\n  'exportName',\n  'viewState',\n  'HistoryService',\n  function ($scope, dialogService, exportData, exportName, viewState, HistoryService) {\n    $scope.exportData = exportData;\n    $scope.exportName = exportName;\n    $scope.firefox = navigator.userAgent.match(/Firefox/i) ? true : false;\n    /**\n\t\t *\n\t\t */\n    $scope.cancel = function () {\n      dialogService.close();\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.getBlob = function () {\n      return new Blob([$scope.exportData], { type: 'text/plain' });\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.export = function () {\n      $scope.SaveToDisk(URL.createObjectURL($scope.getBlob()), $scope.exportName);\n      dialogService.close();\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.updateHistoryService = function () {\n      HistoryService.movesAwayFromLastSave = 0;\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.cursorInTextField = function () {\n      viewState.focusInTextField = true;\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.cursorOutOfTextField = function () {\n      viewState.focusInTextField = false;\n    };\n    /**\n\t\t *  Save file to disk // Non-IE ONLY !!\n\t\t */\n    $scope.SaveToDisk = function (fileURL, fileName) {\n      var save = document.createElement('a');\n      if ($scope.firefox) {\n        save.setAttribute('download', fileName);\n        save.href = fileURL;\n        save.innerHTML = '';\n        save.style.display = 'none';\n        document.body.appendChild(save);\n        save.click();\n      } else {\n        save.href = fileURL;\n        save.target = '_blank';\n        save.download = fileName || 'unknown';\n        var event = document.createEvent('Event');\n        event.initEvent('click', true, true);\n        save.dispatchEvent(event);\n        (window.URL || window.webkitURL).revokeObjectURL(save.href);\n      }\n      $scope.updateHistoryService();\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').factory('viewState', [\n  '$rootScope',\n  '$window',\n  'Soundhandlerservice',\n  function ($rootScope, $window, Soundhandlerservice) {\n    //shared service object to be returned\n    var sServObj = {};\n    // window functions enum for spectro\n    var myWindow = {\n        BARTLETT: 1,\n        BARTLETTHANN: 2,\n        BLACKMAN: 3,\n        COSINE: 4,\n        GAUSS: 5,\n        HAMMING: 6,\n        HANN: 7,\n        LANCZOS: 8,\n        RECTANGULAR: 9,\n        TRIANGULAR: 10\n      };\n    // hold the current attribute definitions that are in view \n    var curLevelAttrDefs = [];\n    /**\n     * initialize all needed vars in viewState\n     */\n    sServObj.initialize = function () {\n      sServObj.curViewPort = {\n        sS: 0,\n        eS: 0,\n        selectS: -1,\n        selectE: -1,\n        dragBarActive: false,\n        dragBarHeight: -1,\n        windowWidth: undefined\n      };\n      sServObj.spectroSettings = {\n        windowLength: -1,\n        rangeFrom: -1,\n        rangeTo: -1,\n        dynamicRange: -1,\n        window: -1,\n        drawHeatMapColors: -1,\n        preEmphasisFilterFactor: -1\n      };\n      sServObj.playHeadAnimationInfos = {\n        sS: -1,\n        eS: -1,\n        curS: null,\n        endFreezeSample: -1\n      };\n      sServObj.timelineSize = -1;\n      sServObj.somethingInProgress = false;\n      sServObj.somethingInProgressTxt = '';\n      sServObj.curClickSegments = [];\n      sServObj.editing = false;\n      sServObj.submenuOpen = false;\n      sServObj.rightSubmenuOpen = false;\n      sServObj.curMousePosSample = 0;\n      sServObj.curMouseLevelName = undefined;\n      sServObj.curMouseLevelType = undefined;\n      sServObj.curClickLevelName = undefined;\n      sServObj.curClickLevelType = undefined;\n      sServObj.curPreselColumnSample = 2;\n      sServObj.curCorrectionToolNr = undefined;\n      sServObj.curClickLevelIndex = undefined;\n      sServObj.start = null;\n      sServObj.TransitionTime = undefined;\n      sServObj.showDropZone = true;\n      sServObj.movingBoundary = false;\n      sServObj.movingBoundarySample = undefined;\n      sServObj.focusInTextField = false;\n      sServObj.curTaskPercCompl = 0;\n      sServObj.curPerspectiveIdx = -1;\n      sServObj.mouseInEmuWebApp = false;\n      // possible general states of state machine\n      sServObj.states = [];\n      sServObj.states.noDBorFilesloaded = {\n        'permittedActions': [\n          'connectBtnClick',\n          'openDemoBtnDBclick'\n        ]\n      };\n      sServObj.states.loadingSaving = { 'permittedActions': [] };\n      sServObj.states.labeling = {\n        'permittedActions': [\n          'zoom',\n          'playaudio',\n          'spectSettingsChange',\n          'addLevelSegBtnClick',\n          'addLevelPointBtnClick',\n          'renameSelLevelBtnClick',\n          'downloadTextGridBtnClick',\n          'spectSettingsChange',\n          'clearBtnClick',\n          'labelAction',\n          'toggleSideBars',\n          'saveBndlBtnClick'\n        ]\n      };\n      sServObj.states.modalShowing = sServObj.states.loadingSaving;\n      sServObj.prevState = sServObj.states.noDBorFilesloaded;\n      sServObj.curState = sServObj.states.noDBorFilesloaded;\n      curLevelAttrDefs = [];\n    };\n    // initialize on init\n    sServObj.initialize();\n    /**\n     * function to ask permission in current labeler state\n     */\n    sServObj.getPermission = function (actionName) {\n      return sServObj.curState.permittedActions.indexOf(actionName) > -1;\n    };\n    /**\n     *\n     */\n    sServObj.setWindowWidth = function (b) {\n      this.curViewPort.windowWidth = b;\n    };\n    /**\n     * set state\n     */\n    sServObj.setState = function (nameOrObj) {\n      sServObj.prevState = sServObj.curState;\n      if (typeof nameOrObj === 'string') {\n        sServObj.curState = sServObj.states[nameOrObj];\n      } else {\n        sServObj.curState = nameOrObj;\n      }\n    };\n    /**\n     *\n     */\n    sServObj.updatePlayHead = function (timestamp) {\n      // at first push animation !!!\n      if (Soundhandlerservice.player.isPlaying) {\n        $window.requestAnimationFrame(sServObj.updatePlayHead);\n      }\n      // do work in this animation round now\n      if (sServObj.start === null) {\n        sServObj.start = timestamp;\n      }\n      var samplesPassed = Math.floor(timestamp - sServObj.start) / 1000 * Soundhandlerservice.wavJSO.SampleRate;\n      sServObj.playHeadAnimationInfos.curS = Math.floor(sServObj.playHeadAnimationInfos.sS + samplesPassed);\n      if (Soundhandlerservice.player.isPlaying && sServObj.playHeadAnimationInfos.curS <= sServObj.playHeadAnimationInfos.eS) {\n        if (sServObj.playHeadAnimationInfos.curS !== -1) {\n          sServObj.curMousePosSample = sServObj.playHeadAnimationInfos.curS;\n        }\n        $rootScope.$apply();\n      } else {\n        sServObj.curMousePosSample = sServObj.playHeadAnimationInfos.endFreezeSample;\n        sServObj.playHeadAnimationInfos.sS = -1;\n        sServObj.playHeadAnimationInfos.eS = -1;\n        sServObj.playHeadAnimationInfos.curS = 0;\n        sServObj.start = null;\n      }\n    };\n    /**\n     *\n     */\n    sServObj.animatePlayHead = function (startS, endS) {\n      sServObj.playHeadAnimationInfos.sS = startS;\n      sServObj.playHeadAnimationInfos.eS = endS;\n      sServObj.playHeadAnimationInfos.endFreezeSample = endS;\n      sServObj.playHeadAnimationInfos.curS = startS;\n      $window.requestAnimationFrame(sServObj.updatePlayHead);\n    };\n    /**\n     * set selected Area\n     * @param start of selected Area\n     * @param end of selected Area\n     */\n    sServObj.select = function (start, end) {\n      sServObj.curViewPort.selectS = start;\n      sServObj.curViewPort.selectE = end;  //$rootScope.$digest();\n    };\n    /**\n     * reset selected Area to default\n     * @param length of current pcm stream\n     */\n    sServObj.resetSelect = function () {\n      sServObj.curViewPort.selectS = -1;\n      sServObj.curViewPort.selectE = -1;\n    };\n    /**\n     * gets the current Viewport\n     */\n    sServObj.getViewPort = function () {\n      return sServObj.curViewPort;\n    };\n    /**\n     * setspectroSettings\n     */\n    sServObj.setspectroSettings = function (len, rfrom, rto, dyn, win, hm, preEmph, hmColorAnchors) {\n      sServObj.spectroSettings.windowLength = parseInt(len, 10);\n      sServObj.spectroSettings.rangeFrom = parseInt(rfrom, 10);\n      sServObj.spectroSettings.rangeTo = parseInt(rto, 10);\n      sServObj.spectroSettings.dynamicRange = parseInt(dyn, 10);\n      sServObj.setWindowFunction(win);\n      sServObj.spectroSettings.drawHeatMapColors = hm;\n      sServObj.spectroSettings.preEmphasisFilterFactor = preEmph;\n      sServObj.spectroSettings.heatMapColorAnchors = hmColorAnchors;\n    };\n    /**\n     * returns current selection as array\n     */\n    sServObj.getSelect = function () {\n      return [\n        sServObj.curViewPort.selectS,\n        sServObj.curViewPort.selectE\n      ];\n    };\n    /**\n     * set selected Area if new\n     * start value is smaler than actual and\n     * end value is greater than actual\n     * @param start of selected Area\n     * @param end of seleected Area\n     */\n    sServObj.selectDependent = function (start, end) {\n      if (start < this.curViewPort.selectS) {\n        this.curViewPort.selectS = start;\n      }\n      if (end > this.curViewPort.selectE) {\n        this.curViewPort.selectE = end;\n      }\n    };\n    /**\n     *\n     */\n    sServObj.selectLevel = function (next, order, Levelserv) {\n      var curLev;\n      var now = sServObj.getcurClickLevelName();\n      if (now === undefined && !next) {\n        // select first if none prev. defined (up)\n        // viewState.setcurClickLevel(levelID, levelType, scope.$index, scope.this.level.items.length);\n        curLev = Levelserv.getLevelDetails(order[0]);\n        sServObj.setcurClickLevel(curLev.level.name, curLev.level.type, 0);\n        return;\n      } else if (now === undefined && next) {\n        // select last if none prev. defined (down)\n        curLev = Levelserv.getLevelDetails(order[order.length - 1]);\n        sServObj.setcurClickLevel(curLev.level.name, curLev.level.type, order.length - 1);\n        return;\n      }\n      var idxOfNow;\n      order.forEach(function (name, idx) {\n        if (name === now) {\n          idxOfNow = idx;\n        }\n      });\n      if (next) {\n        if (idxOfNow + 1 < order.length) {\n          curLev = Levelserv.getLevelDetails(order[idxOfNow + 1]);\n          // sServObj.setcurClickLevelName(order[idxOfNow + 1]);\n          sServObj.setcurClickLevel(curLev.level.name, curLev.level.type, order.idxOfNow + 1);\n          sServObj.curClickSegments = [];\n          sServObj.selectBoundry();  //sServObj.resetSelect();\n        }\n      } else {\n        if (idxOfNow - 1 >= 0) {\n          curLev = Levelserv.getLevelDetails(order[idxOfNow - 1]);\n          // sServObj.setcurClickLevelName(order[idxOfNow - 1]);\n          sServObj.setcurClickLevel(curLev.level.name, curLev.level.type, order.idxOfNow - 1);\n          sServObj.curClickSegments = [];\n          sServObj.selectBoundry();  //sServObj.resetSelect();\n        }\n      }\n    };\n    /**\n     * set the window Function for the Spectrogram\n     * @param name of Window Function\n     */\n    sServObj.setWindowFunction = function (name) {\n      switch (name) {\n      case 'BARTLETT':\n        sServObj.spectroSettings.window = myWindow.BARTLETT;\n        break;\n      case 'BARTLETTHANN':\n        sServObj.spectroSettings.window = myWindow.BARTLETTHANN;\n        break;\n      case 'BLACKMAN':\n        sServObj.spectroSettings.window = myWindow.BLACKMAN;\n        break;\n      case 'COSINE':\n        sServObj.spectroSettings.window = myWindow.COSINE;\n        break;\n      case 'GAUSS':\n        sServObj.spectroSettings.window = myWindow.GAUSS;\n        break;\n      case 'HAMMING':\n        sServObj.spectroSettings.window = myWindow.HAMMING;\n        break;\n      case 'HANN':\n        sServObj.spectroSettings.window = myWindow.HANN;\n        break;\n      case 'LANCZOS':\n        sServObj.spectroSettings.window = myWindow.LANCZOS;\n        break;\n      case 'RECTANGULAR':\n        sServObj.spectroSettings.window = myWindow.RECTANGULAR;\n        break;\n      case 'TRIANGULAR':\n        sServObj.spectroSettings.window = myWindow.TRIANGULAR;\n        break;\n      default:\n        sServObj.spectroSettings.window = myWindow.BARTLETTHANN;\n        break;\n      }\n    };\n    /**\n     * @returns myWindow object\n     */\n    sServObj.getWindowFunctions = function () {\n      return myWindow;\n    };\n    /**\n     * set if user is dragging dragbar\n     */\n    sServObj.getdragBarActive = function () {\n      return this.curViewPort.dragBarActive;\n    };\n    /**\n     * set if user is dragging dragbar\n     */\n    sServObj.setdragBarActive = function (b) {\n      this.curViewPort.dragBarActive = b;\n    };\n    /**\n     * set if user is dragging dragbar\n     */\n    sServObj.getdragBarHeight = function () {\n      return this.curViewPort.dragBarHeight;\n    };\n    /**\n     * set if user is dragging dragbar\n     */\n    sServObj.setdragBarHeight = function (b) {\n      this.curViewPort.dragBarHeight = b;\n    };\n    /**\n     * get pixel position in current viewport given the canvas width\n     * @param w is width of canvas\n     * @param s is current sample to convert to pixel value\n     */\n    sServObj.getPos = function (w, s) {\n      return w * (s - this.curViewPort.sS) / (this.curViewPort.eS - this.curViewPort.sS + 1);  // + 1 because of view (displays all samples in view)\n    };\n    /**\n     * calculate the pixel distance between two samples\n     * @param w is width of canvas\n     */\n    sServObj.getSampleDist = function (w) {\n      return this.getPos(w, this.curViewPort.sS + 1) - this.getPos(w, this.curViewPort.sS);\n    };\n    /**\n     * get the height of the osci\n     */\n    sServObj.getsubmenuOpen = function () {\n      return this.submenuOpen;\n    };\n    /**\n     * get the height of the osci\n     */\n    sServObj.setsubmenuOpen = function (s) {\n      this.submenuOpen = s;\n    };\n    /**\n     * get the height of the osci\n     */\n    sServObj.setenlarge = function (s) {\n      this.timelineSize = s;\n    };\n    /**\n     * get the height of the osci\n     */\n    sServObj.getenlarge = function () {\n      return this.timelineSize;\n    };\n    /**\n     * get the height of the osci\n     */\n    sServObj.getTransitionTime = function () {\n      return this.TransitionTime;\n    };\n    /**\n     * get the height of the osci\n     */\n    sServObj.setTransitionTime = function (s) {\n      this.TransitionTime = s;\n    };\n    /**\n     * get the height of the osci\n     */\n    sServObj.getRightsubmenuOpen = function () {\n      return this.rightSubmenuOpen;\n    };\n    /**\n     * get the height of the osci\n     */\n    sServObj.setRightsubmenuOpen = function (s) {\n      this.rightSubmenuOpen = s;\n    };\n    /**\n     *\n     */\n    sServObj.setcurClickLevel = function (levelID, levelType, levelIndex) {\n      this.setcurClickLevelName(levelID, levelIndex);\n      this.setcurClickLevelType(levelType);\n    };\n    /**\n     * sets the current (clicked) Level Name\n     * @param name is name of level\n     */\n    sServObj.setcurClickLevelType = function (name) {\n      this.curClickLevelType = name;\n    };\n    /**\n     * gets the current (clicked) Level Name\n     */\n    sServObj.getcurClickLevelType = function () {\n      return this.curClickLevelType;\n    };\n    /**\n     * sets the current (clicked) Level Name\n     * @param name is name of level\n     */\n    sServObj.setcurClickLevelName = function (name, index) {\n      this.curClickLevelName = name;\n      this.curClickLevelIndex = index;\n    };\n    /**\n     * gets the current (clicked) Level Name\n     */\n    sServObj.getcurClickLevelName = function () {\n      return this.curClickLevelName;\n    };\n    /**\n     * gets the current (clicked) Level Name\n     */\n    sServObj.getcurClickLevelIndex = function () {\n      return this.curClickLevelIndex;\n    };\n    /**\n     * gets the current (clicked) Level Name\n     */\n    sServObj.getcurClickNeighbours = function () {\n      return this.curClickNeighbours;\n    };\n    /**\n     * sets the current (mousemove) Level Name\n     * @param name is name of level\n     */\n    sServObj.setcurMouseLevelName = function (name) {\n      this.curMouseLevelName = name;\n    };\n    /**\n     * gets the current (mousemove) Level Name\n     */\n    sServObj.getcurMouseLevelName = function () {\n      return this.curMouseLevelName;\n    };\n    /**\n     * sets the current (mousemove) Level Name\n     * @param name is name of level\n     */\n    sServObj.setcurMouseLevelType = function (name) {\n      this.curMouseLevelType = name;\n    };\n    /**\n     * gets the current (mousemove) Level Name\n     */\n    sServObj.getcurMouseLevelType = function () {\n      return this.curMouseLevelType;\n    };\n    /**\n     * sets the current (mousemove) Segment\n     * @param name is name of segment\n     */\n    sServObj.setcurMouseSegment = function (segment, neighbour, x) {\n      this.curMouseSegment = segment;\n      this.curMouseX = x;\n      this.curMouseNeighbours = neighbour;\n    };\n    /**\n     * gets the current (mousemove) Segment\n     */\n    sServObj.getcurMouseSegment = function () {\n      return this.curMouseSegment;\n    };\n    /**\n     * gets the current (mousemove) Segment\n     */\n    sServObj.getcurMouseNeighbours = function () {\n      return this.curMouseNeighbours;\n    };\n    /**\n     * selects all Segements on current level which are inside the selected viewport\n     */\n    sServObj.selectSegmentsInSelection = function (levelData) {\n      sServObj.curClickSegments = [];\n      //SIC should use getItemsInSelection -> then set min max\n      var rangeStart = sServObj.curViewPort.selectS;\n      var rangeEnd = sServObj.curViewPort.selectE;\n      var min = Infinity;\n      var max = -Infinity;\n      angular.forEach(levelData, function (t) {\n        if (t.name === sServObj.getcurClickLevelName()) {\n          angular.forEach(t.items, function (evt) {\n            if (evt.sampleStart >= rangeStart && evt.sampleStart + evt.sampleDur <= rangeEnd) {\n              sServObj.setcurClickSegmentMultiple(evt);\n              if (evt.sampleStart < min) {\n                min = evt.sampleStart;\n              }\n              if (evt.sampleStart + evt.sampleDur > max) {\n                max = evt.sampleStart + evt.sampleDur;\n              }\n            }\n          });\n        }\n      });\n      sServObj.curViewPort.selectS = min;\n      sServObj.curViewPort.selectE = max;\n    };\n    /**\n     * get all items of current level which are inside the selected viewport\n     */\n    sServObj.getItemsInSelection = function (levelData) {\n      var itemsInRange = [];\n      var rangeStart = sServObj.curViewPort.selectS;\n      var rangeEnd = sServObj.curViewPort.selectE;\n      angular.forEach(levelData, function (t) {\n        if (t.name === sServObj.getcurClickLevelName()) {\n          angular.forEach(t.items, function (item) {\n            //SEGMENTS\n            if (item.sampleStart >= rangeStart && item.sampleStart + item.sampleDur <= rangeEnd) {\n              itemsInRange.push(item);\n            }\n            //EVENTS\n            if (item.samplePoint >= rangeStart && item.samplePoint <= rangeEnd) {\n              itemsInRange.push(item);\n            }\n          });\n        }\n      });\n      return itemsInRange;\n    };\n    /**\n     * sets the current (click) Segment\n     * @param segment\n     */\n    sServObj.setcurClickSegment = function (segment) {\n      if (segment !== null && segment !== undefined) {\n        sServObj.curClickSegments = [];\n        sServObj.curClickSegments.push(segment);\n        sServObj.selectBoundry();\n      } else {\n        sServObj.curClickSegments = [];\n      }\n    };\n    /**\n     * sets a multiple select (click) Segment\n     */\n    sServObj.selectBoundry = function () {\n      if (sServObj.curClickSegments.length > 0) {\n        var left, right;\n        if (sServObj.curClickSegments[0].sampleStart !== undefined) {\n          left = sServObj.curClickSegments[0].sampleStart;\n        } else {\n          left = sServObj.curClickSegments[0].samplePoint;\n        }\n        var right = sServObj.curClickSegments[sServObj.curClickSegments.length - 1].sampleStart + sServObj.curClickSegments[sServObj.curClickSegments.length - 1].sampleDur || sServObj.curClickSegments[0].samplePoint;\n        sServObj.curClickSegments.forEach(function (entry) {\n          if (entry.sampleStart <= left) {\n            left = entry.sampleStart;\n          }\n          if (entry.sampleStart + entry.sampleDur >= right) {\n            right = entry.sampleStart + entry.sampleDur;\n          }\n        });\n        sServObj.select(left, right);\n      }\n    };\n    /**\n     * sets a multiple select (click) Segment\n     * @param segment\n     */\n    sServObj.setcurClickSegmentMultiple = function (segment) {\n      var empty = true;\n      var my = this;\n      var start = segment.sampleStart;\n      var end = start + segment.sampleDur;\n      sServObj.curClickSegments.forEach(function (entry) {\n        var front = entry.sampleStart == end ? true : false;\n        var back = entry.sampleStart + entry.sampleDur == start ? true : false;\n        if ((front || back) && sServObj.curClickSegments.indexOf(segment) === -1) {\n          sServObj.curClickSegments.push(segment);\n          empty = false;\n        }\n      });\n      if (empty) {\n        sServObj.curClickSegments = [];\n        sServObj.curClickSegments.push(segment);\n      } else {\n        sServObj.curClickSegments.sort(sServObj.sortbyid);\n      }\n    };\n    /**\n     *\n     */\n    sServObj.sortbyid = function (a, b) {\n      //Compare \"a\" and \"b\" in some fashion, and return -1, 0, or 1\n      if (a.sampleStart > b.sampleStart)\n        return 1;\n      if (a.sampleStart < b.sampleStart)\n        return -1;\n      return 0;\n    };\n    /**\n     * gets the current (click) Segment\n     */\n    sServObj.getselectedRange = function () {\n      if (this.curClickSegments.length > 1) {\n        return {\n          start: this.curClickSegments[0].sampleStart,\n          end: this.curClickSegments[this.curClickSegments.length - 1].sampleStart + this.curClickSegments[this.curClickSegments.length - 1].sampleDur\n        };\n      } else if (this.curClickSegments.length === 1) {\n        if (this.curClickSegments[0].sampleStart !== undefined) {\n          return {\n            start: this.curClickSegments[0].sampleStart,\n            end: this.curClickSegments[0].sampleStart + this.curClickSegments[0].sampleDur\n          };\n        } else {\n          return {\n            start: this.curClickSegments[0].samplePoint,\n            end: this.curClickSegments[0].samplePoint\n          };\n        }\n      } else {\n        return {\n          start: -1,\n          end: -1\n        };\n      }\n    };\n    /**\n     * gets the current (click) Segments\n     */\n    sServObj.getcurClickSegments = function () {\n      return this.curClickSegments;\n    };\n    /**\n     * gets the first ! current (click) Segment\n     */\n    sServObj.getfirstClickSegment = function () {\n      if (sServObj.curClickSegments.length > 0) {\n        return sServObj.curClickSegments[0];\n      }\n    };\n    /**\n     *\n     */\n    sServObj.getselected = function () {\n      return this.curClickSegments;\n    };\n    /**\n     *\n     */\n    sServObj.isEditing = function () {\n      return this.editing;\n    };\n    /**\n     *\n     */\n    sServObj.setEditing = function (n) {\n      this.editing = n;\n    };\n    /**\n     *\n     */\n    sServObj.countSelected = function () {\n      return this.curClickSegments.length;\n    };\n    /**\n     *\n     */\n    sServObj.getCurrentSample = function (perc) {\n      return this.curViewPort.sS + (this.curViewPort.eS - this.curViewPort.sS) * perc;\n    };\n    /**\n     *\n     */\n    sServObj.getCurrentPercent = function (sample) {\n      return sample * (100 / (this.curViewPort.eS - this.curViewPort.sS) / 100);\n    };\n    /**\n     *\n     */\n    sServObj.getPCMpp = function (event) {\n      var start = parseFloat(this.curViewPort.sS);\n      var end = parseFloat(this.curViewPort.eS);\n      return (end - start) / event.originalEvent.target.width;\n    };\n    /**\n     * round to n decimal digits after the comma\n     * used to help display numbers with a given\n     * precision\n     */\n    sServObj.round = function (x, n) {\n      if (n < 1 || n > 14) {\n        console.error('error in call of round function!!');\n      }\n      var e = Math.pow(10, n);\n      var k = (Math.round(x * e) / e).toString();\n      if (k.indexOf('.') === -1) {\n        k += '.';\n      }\n      k += e.toString().substring(1);\n      return parseFloat(k.substring(0, k.indexOf('.') + n + 1));\n    };\n    /**\n     * calcs and returns start in secs\n     */\n    sServObj.getViewPortStartTime = function () {\n      return this.curViewPort.sS * 1 / Soundhandlerservice.wavJSO.SampleRate - 0.5 / Soundhandlerservice.wavJSO.SampleRate;\n    };\n    /**\n     * calcs and returns end time in secs\n     */\n    sServObj.getViewPortEndTime = function () {\n      return this.curViewPort.eS * 1 / Soundhandlerservice.wavJSO.SampleRate + 0.5 / Soundhandlerservice.wavJSO.SampleRate;\n    };\n    /**\n     * calcs and returns start in secs\n     */\n    sServObj.getSelectedStartTime = function () {\n      return this.curViewPort.selectS * 1 / Soundhandlerservice.wavJSO.SampleRate - 0.5 / Soundhandlerservice.wavJSO.SampleRate;\n    };\n    /**\n     * calcs and returns end time in secs\n     */\n    sServObj.getSelectedEndTime = function () {\n      return this.curViewPort.selectE * 1 / Soundhandlerservice.wavJSO.SampleRate + 0.5 / Soundhandlerservice.wavJSO.SampleRate;\n    };\n    /**\n     * set view port to start and end sample\n     * (with several out-of-bounds like checks)\n     *\n     * @param sSample start sample of view\n     * @param sSample end sample of view\n     */\n    sServObj.setViewPort = function (sSample, eSample) {\n      var oldStart = this.curViewPort.sS;\n      var oldEnd = this.curViewPort.eS;\n      if (sSample !== undefined) {\n        this.curViewPort.sS = Math.round(sSample);\n      }\n      if (eSample !== undefined) {\n        this.curViewPort.eS = Math.round(eSample);\n      }\n      // check if moving left or right is not out of bounds -> prevent zooming on edge when moving left/right\n      if (oldStart > this.curViewPort.sS && oldEnd > this.curViewPort.eS) {\n        //moved left\n        if (this.curViewPort.sS < 0) {\n          this.curViewPort.sS = 0;\n          this.curViewPort.eS = oldEnd + Math.abs(this.curViewPort.sS);\n        }\n      }\n      if (oldStart < this.curViewPort.sS && oldEnd < this.curViewPort.eS) {\n        //moved right\n        if (this.curViewPort.eS > Soundhandlerservice.wavJSO.Data.length) {\n          this.curViewPort.sS = oldStart;\n          this.curViewPort.eS = Soundhandlerservice.wavJSO.Data.length;\n        }\n      }\n      // check if in range\n      if (this.curViewPort.sS < 0) {\n        this.curViewPort.sS = 0;\n      }\n      if (this.curViewPort.eS > Soundhandlerservice.wavJSO.Data.length) {\n        this.curViewPort.eS = Soundhandlerservice.wavJSO.Data.length;\n      }\n      // check if at least 4 samples are showing (fixed max zoom size)\n      if (this.curViewPort.eS - this.curViewPort.sS < 4) {\n        this.curViewPort.sS = oldStart;\n        this.curViewPort.eS = oldEnd;\n      }\n    };\n    /**\n     * set view port to start and end sample\n     * (with several out-of-bounds like checks)\n     *\n     * @param zoomIn bool to specify zooming direction\n     * if set to true -> zoom in\n     * if set to false -> zoom out\n     */\n    sServObj.zoomViewPort = function (zoomIn, LevelService) {\n      var newStartS, newEndS, curMouseMoveSegmentStart;\n      var seg = this.getcurMouseSegment();\n      var d = this.curViewPort.eS - this.curViewPort.sS;\n      var isLastSeg = false;\n      if (seg !== undefined) {\n        if (seg === false) {\n          // before first element\n          seg = LevelService.getElementDetails(sServObj.getcurMouseLevelName(), 0);\n        } else if (seg === true) {\n          seg = LevelService.getLastElement(sServObj.getcurMouseLevelName());\n          isLastSeg = true;\n        }\n        if (this.getcurMouseLevelType() === 'SEGMENT') {\n          if (isLastSeg) {\n            curMouseMoveSegmentStart = seg.sampleStart + seg.sampleDur;\n          } else {\n            curMouseMoveSegmentStart = seg.sampleStart;\n          }\n        } else {\n          curMouseMoveSegmentStart = seg.samplePoint;\n        }\n        // console.log(curMouseMoveSegmentStart);\n        var d1 = curMouseMoveSegmentStart - this.curViewPort.sS;\n        var d2 = this.curViewPort.eS - curMouseMoveSegmentStart;\n        if (zoomIn) {\n          newStartS = this.curViewPort.sS + d1 * 0.5;\n          newEndS = this.curViewPort.eS - d2 * 0.5;\n        } else {\n          newStartS = this.curViewPort.sS - d1 * 0.5;\n          newEndS = this.curViewPort.eS + d2 * 0.5;\n        }\n      } else {\n        if (zoomIn) {\n          newStartS = this.curViewPort.sS + ~~(d / 4);\n          newEndS = this.curViewPort.eS - ~~(d / 4);\n        } else {\n          newStartS = this.curViewPort.sS - ~~(d / 4);\n          newEndS = this.curViewPort.eS + ~~(d / 4);\n        }\n      }\n      this.setViewPort(newStartS, newEndS);\n    };\n    /**\n     * moves view port to the right or to the left\n     * without changing the zoom\n     *\n     * @param shiftRight bool to specify direction\n     * if set to true -> shift right\n     * if set to false -> shift left\n     */\n    sServObj.shiftViewPort = function (shiftRight) {\n      // my.removeLabelDoubleClick();\n      var newStartS, newEndS;\n      if (shiftRight) {\n        newStartS = this.curViewPort.sS + ~~((this.curViewPort.eS - this.curViewPort.sS) / 4);\n        newEndS = this.curViewPort.eS + ~~((this.curViewPort.eS - this.curViewPort.sS) / 4);\n      } else {\n        newStartS = this.curViewPort.sS - ~~((this.curViewPort.eS - this.curViewPort.sS) / 4);\n        newEndS = this.curViewPort.eS - ~~((this.curViewPort.eS - this.curViewPort.sS) / 4);\n      }\n      this.setViewPort(newStartS, newEndS);\n    };\n    /**\n     * sets all the curLevelAttrDefs array\n     * to hold the default attr. definitions\n     * which are the same as the level names\n     *\n     * @param levelDefs level definitions from the DBconfig\n     */\n    sServObj.setCurLevelAttrDefs = function (levelDefs) {\n      angular.forEach(levelDefs, function (ld) {\n        curLevelAttrDefs.push({\n          'levelName': ld.name,\n          'curAttrDefName': ld.name\n        });\n      });\n    };\n    /**\n     * set the current attribute definition name of the\n     * given levelName\n     *\n     * @param levelName name of level\n     * @param newAttrDefName\n     */\n    sServObj.setCurAttrDef = function (levelName, newAttrDefName) {\n      angular.forEach(curLevelAttrDefs, function (ad) {\n        if (ad.levelName === levelName) {\n          ad.curAttrDefName = newAttrDefName;\n        }\n      });\n    };\n    /**\n     * get the current attribute definition name of the\n     * given levelName\n     *\n     * @param levelName name of level\n     * @returns attrDefName\n     */\n    sServObj.getCurAttrDef = function (levelName) {\n      var curAttrDef;\n      angular.forEach(curLevelAttrDefs, function (ad) {\n        if (ad.levelName === levelName) {\n          curAttrDef = ad.curAttrDefName;\n        }\n      });\n      return curAttrDef;\n    };\n    /**\n     *\n     */\n    sServObj.resetToInitState = function () {\n      sServObj.initialize();\n    };\n    return sServObj;\n  }\n]);\n'use strict';\nangular.module('emuwebApp').directive('trackmouseinlevel', [\n  'viewState',\n  'LevelService',\n  'ConfigProviderService',\n  'HistoryService',\n  'Soundhandlerservice',\n  function (viewState, LevelService, ConfigProviderService, HistoryService, Soundhandlerservice) {\n    return {\n      restrict: 'A',\n      scope: { level: '=' },\n      link: function (scope, element, attr) {\n        var lastEventClick;\n        var lastEventClickId;\n        var lastEventRightClick;\n        var lastEventRightClickId;\n        var lastEventMove;\n        var lastEventMoveId;\n        var lastNeighbours;\n        var lastNeighboursMove;\n        var lastPCM;\n        var thisPCM;\n        var levelID = scope.level.name;\n        var levelType = scope.level.type;\n        /////////////////////////////\n        // Bindings\n        //\n        element.bind('click', function (event) {\n          event.preventDefault();\n          setLastMove(event, true);\n          setLastClick(event);\n        });\n        //\n        element.bind('contextmenu', function (event) {\n          event.preventDefault();\n          setLastMove(event, true);\n          setLastRightClick(event);\n        });\n        //\n        element.bind('dblclick', function (event) {\n          setLastMove(event, true);\n          if (ConfigProviderService.vals.restrictions.editItemName) {\n            setLastDblClick(event);\n          } else {\n            setLastClick(event);\n          }\n        });\n        //\n        element.bind('mousemove', function (event) {\n          if (!viewState.getdragBarActive()) {\n            var moveLine = true;\n            var zoom = viewState.getPCMpp(event);\n            thisPCM = getX(event) * zoom;\n            var moveBy = thisPCM - lastPCM;\n            if (zoom <= 1) {\n              var zoomEventMove = LevelService.getEvent(thisPCM + viewState.curViewPort.sS, scope.this.level.name, Soundhandlerservice.wavJSO.Data.length);\n              // absolute movement in pcm below 1 pcm per pixel\n              if (scope.this.level.type === 'SEGMENT') {\n                if (zoomEventMove.nearest === false) {\n                  // before first elem\n                  moveBy = Math.floor(thisPCM + viewState.curViewPort.sS - LevelService.getElementDetails(scope.this.level.name, 0).sampleStart);\n                } else if (zoomEventMove.nearest === true) {\n                  // after last elem\n                  moveBy = Math.floor(thisPCM + viewState.curViewPort.sS - LevelService.getLastElement(scope.this.level.name).sampleStart);\n                } else {\n                  moveBy = Math.floor(thisPCM + viewState.curViewPort.sS - LevelService.getElementDetailsById(scope.this.level.name, zoomEventMove.nearest.id).sampleStart);\n                }\n              } else {\n                moveBy = Math.floor(thisPCM + viewState.curViewPort.sS - LevelService.getElementDetailsById(scope.this.level.name, zoomEventMove.nearest.id).samplePoint);\n              }\n            } else {\n              // relative movement in pcm above 1 pcm per pixel\n              moveBy = Math.round(thisPCM - lastPCM);\n            }\n          }\n          var mbutton = 0;\n          if (event.buttons === undefined) {\n            mbutton = event.which;\n          } else {\n            mbutton = event.buttons;\n          }\n          switch (mbutton) {\n          case 1:\n            //console.log('Left mouse button pressed');\n            break;\n          case 2:\n            //console.log('Middle mouse button pressed');\n            break;\n          case 3:\n            //console.log('Right mouse button pressed');\n            break;\n          default:\n            if (!viewState.getdragBarActive()) {\n              if (ConfigProviderService.vals.restrictions.editItemSize && event.shiftKey) {\n                LevelService.deleteEditArea();\n                if (viewState.getcurMouseSegment() !== undefined) {\n                  viewState.movingBoundary = true;\n                  var position = 0;\n                  if (scope.this.level.type === 'SEGMENT') {\n                    if (typeof viewState.getcurMouseSegment() === 'boolean') {\n                      var seg, leftMost, rightB;\n                      // before first segment\n                      if (viewState.getcurMouseSegment() === false) {\n                        seg = LevelService.getElementDetails(scope.this.level.name, 0);\n                        viewState.movingBoundarySample = seg.sampleStart + moveBy;\n                        position = -1;\n                      } else {\n                        seg = LevelService.getLastElement(scope.this.level.name);\n                        viewState.movingBoundarySample = seg.sampleStart + seg.sampleDur + moveBy;\n                        position = 1;\n                      }\n                    } else {\n                      viewState.movingBoundarySample = viewState.getcurMouseSegment().sampleStart + moveBy;\n                      seg = viewState.getcurMouseSegment();\n                    }\n                    LevelService.moveBoundary(scope.this.level.name, seg.id, moveBy, position);\n                    HistoryService.updateCurChangeObj({\n                      'type': 'ESPS',\n                      'action': 'moveBoundary',\n                      'name': scope.this.level.name,\n                      'id': seg.id,\n                      'movedBy': moveBy,\n                      'position': position\n                    });\n                  } else {\n                    seg = viewState.getcurMouseSegment();\n                    viewState.movingBoundarySample = viewState.getcurMouseSegment().samplePoint + moveBy;\n                    LevelService.movePoint(scope.this.level.name, seg.id, moveBy);\n                    HistoryService.updateCurChangeObj({\n                      'type': 'ESPS',\n                      'action': 'movePoint',\n                      'name': scope.this.level.name,\n                      'id': seg.id,\n                      'movedBy': moveBy\n                    });\n                  }\n                  lastPCM = thisPCM;\n                  viewState.selectBoundry();\n                  moveLine = false;\n                }\n              } else if (ConfigProviderService.vals.restrictions.editItemSize && event.altKey) {\n                LevelService.deleteEditArea();\n                if (scope.this.level.type == 'SEGMENT') {\n                  seg = viewState.getcurClickSegments();\n                  LevelService.moveSegment(scope.this.level.name, seg[0].id, seg.length, moveBy);\n                  HistoryService.updateCurChangeObj({\n                    'type': 'ESPS',\n                    'action': 'moveSegment',\n                    'name': scope.this.level.name,\n                    'id': seg[0].id,\n                    'length': seg.length,\n                    'movedBy': moveBy\n                  });\n                  lastPCM = thisPCM;\n                  viewState.selectBoundry();\n                }\n              } else {\n                viewState.movingBoundary = false;\n              }\n            }\n            break;\n          }\n          if (!viewState.getdragBarActive()) {\n            setLastMove(event, moveLine);\n          }\n          if (lastEventMove.nearest !== undefined) {\n            viewState.setcurMouseSegment(lastEventMove.nearest, lastNeighboursMove, lastPCM);\n          }\n        });\n        //\n        element.bind('mousedown', function (event) {\n          viewState.movingBoundary = true;\n          setLastMove(event, true);\n        });\n        //\n        element.bind('mouseup', function (event) {\n          viewState.movingBoundary = false;\n          setLastMove(event, true);\n        });\n        //\n        element.bind('mouseout', function (event) {\n          viewState.movingBoundary = false;\n          setLastMove(event, true);\n        });\n        //\n        /////////////////////////\n        /**\n         *\n         */\n        function setLastClick(x) {\n          thisPCM = getX(x) * viewState.getPCMpp(x);\n          LevelService.deleteEditArea();\n          viewState.setEditing(false);\n          viewState.focusInTextField = false;\n          lastEventClick = LevelService.getEvent(thisPCM + viewState.curViewPort.sS, scope.this.level.name, Soundhandlerservice.wavJSO.Data.length);\n          if (lastEventClick.evtr !== undefined && lastEventClick.nearest !== undefined) {\n            LevelService.setlasteditArea('_' + lastEventClick.evtr.id);\n            LevelService.setlasteditAreaElem(element.parent());\n            viewState.setcurClickLevel(levelID, levelType, scope.$index);\n            viewState.setcurClickSegment(lastEventClick.evtr);\n          }\n          lastPCM = thisPCM;\n          scope.$apply();\n        }\n        /**\n         *\n         */\n        function setLastRightClick(x) {\n          if (viewState.getcurClickLevelName() !== levelID) {\n            setLastClick(x);\n          }\n          thisPCM = getX(x) * viewState.getPCMpp(x);\n          LevelService.deleteEditArea();\n          lastEventClick = LevelService.getEvent(thisPCM + viewState.curViewPort.sS, scope.this.level.name, Soundhandlerservice.wavJSO.Data.length);\n          if (lastEventClick.evtr !== undefined && lastEventClick.nearest !== undefined) {\n            viewState.setcurClickLevel(levelID, levelType, scope.$index);\n            viewState.setcurClickSegmentMultiple(lastEventClick.evtr);\n            viewState.selectBoundry();\n          }\n          lastPCM = thisPCM;\n          scope.$apply();\n        }\n        /**\n         *\n         */\n        function setLastDblClick(x) {\n          thisPCM = getX(x) * viewState.getPCMpp(x);\n          lastEventClick = LevelService.getEvent(thisPCM + viewState.curViewPort.sS, scope.this.level.name, Soundhandlerservice.wavJSO.Data.length);\n          if (lastEventClick.evtr !== undefined && lastEventClick.nearest !== undefined) {\n            if (levelType === 'SEGMENT') {\n              if (lastEventClick.evtr.sampleStart >= viewState.curViewPort.sS) {\n                if (lastEventClick.evtr.sampleStart + lastEventClick.evtr.sampleDur <= viewState.curViewPort.eS) {\n                  viewState.setcurClickLevel(levelID, levelType, scope.$index);\n                  viewState.setcurClickSegment(lastEventClick.evtr);\n                  LevelService.setlasteditArea('_' + lastEventClick.evtr.id);\n                  LevelService.setlasteditAreaElem(element.parent());\n                  viewState.setEditing(true);\n                  LevelService.openEditArea(lastEventClick.evtr, element.parent(), levelType);\n                  viewState.focusInTextField = true;\n                } else {\n                  console.log('Editing out of right bound !');\n                }\n              } else {\n                console.log('Editing out of left bound !');\n              }\n            } else {\n              viewState.setcurClickLevel(levelID, levelType, scope.$index);\n              viewState.setcurClickSegment(lastEventClick.evtr);\n              LevelService.setlasteditArea('_' + lastEventClick.evtr.id);\n              LevelService.setlasteditAreaElem(element.parent());\n              viewState.setEditing(true);\n              LevelService.openEditArea(lastEventClick.evtr, element.parent(), levelType);\n              viewState.focusInTextField = true;\n            }\n          }\n          lastPCM = thisPCM;\n          scope.$apply();\n        }\n        /**\n         *\n         */\n        function setLastMove(x, doChange) {\n          thisPCM = getX(x) * viewState.getPCMpp(x);\n          lastEventMove = LevelService.getEvent(thisPCM + viewState.curViewPort.sS, scope.this.level.name, Soundhandlerservice.wavJSO.Data.length);\n          if (doChange) {\n            if (lastEventMove.evtr !== undefined && lastEventMove.nearest !== undefined) {\n              lastNeighboursMove = LevelService.getElementNeighbourDetails(scope.this.level.name, lastEventMove.nearest.id, lastEventMove.nearest.id);\n              viewState.setcurMouseSegment(lastEventMove.nearest, lastNeighboursMove, lastPCM);\n            }\n          }\n          viewState.setcurMouseLevelName(levelID);\n          viewState.setcurMouseLevelType(levelType);\n          lastPCM = thisPCM;\n          scope.$apply();\n        }\n        /**\n         *\n         */\n        function getX(e) {\n          return (e.offsetX || e.originalEvent.layerX) * (e.originalEvent.target.width / e.originalEvent.target.clientWidth);\n        }\n      }\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').directive('handleglobalkeystrokes', [\n  '$timeout',\n  'viewState',\n  'Soundhandlerservice',\n  'ConfigProviderService',\n  'HistoryService',\n  'LevelService',\n  'AnagestService',\n  function ($timeout, viewState, Soundhandlerservice, ConfigProviderService, HistoryService, LevelService, AnagestService) {\n    return {\n      restrict: 'A',\n      link: function postLink(scope) {\n        $(document).bind('keydown', function (e) {\n          if (!scope.firefox) {\n            var code = e.keyCode ? e.keyCode : e.which;\n            if (code == 8 || code == 9 || code == 27 || code == 37 || code == 38 || code == 39 || code == 40 || code == 32) {\n              applyKeyCode(code, e);\n            }\n          }\n        });\n        $(document).bind('keypress', function (e) {\n          var code = e.keyCode ? e.keyCode : e.which;\n          applyKeyCode(code, e);\n        });\n        function applyKeyCode(code, e) {\n          scope.$apply(function () {\n            // check if mouse has to be in labeler for key mappings\n            if (ConfigProviderService.vals.main.catchMouseForKeyBinding) {\n              if (!viewState.mouseInEmuWebApp) {\n                return;\n              }\n            }\n            scope.setlastkeycode(code, e.shiftKey);\n            if (viewState.focusInTextField) {\n              if (code === ConfigProviderService.vals.keyMappings.createNewItemAtSelection) {\n                if (viewState.isEditing()) {\n                  var editingElement = LevelService.getElementDetailsById(viewState.getcurClickLevelName(), LevelService.getlastID());\n                  console.error('parallel labels are not added to history service correctly!!!!!!');\n                  HistoryService.addObjToUndoStack({\n                    'type': 'ESPS',\n                    'action': 'renameLabel',\n                    'name': viewState.getcurClickLevelName(),\n                    'id': LevelService.getlastID(),\n                    'oldValue': editingElement.labels[0].value,\n                    'newValue': $('.' + LevelService.getlasteditArea()).val()\n                  });\n                  LevelService.renameLabel(viewState.getcurClickLevelName(), LevelService.getlastID(), $('.' + LevelService.getlasteditArea()).val());\n                  LevelService.deleteEditArea();\n                  viewState.focusInTextField = false;\n                }\n              }\n              if (code === ConfigProviderService.vals.keyMappings.esc) {\n                viewState.focusInTextField = false;\n                LevelService.deleteEditArea();\n              }\n              if (code === 13) {\n                e.preventDefault();\n                e.stopPropagation();\n              }  //}\n            } else {\n              LevelService.deleteEditArea();\n              // delegate keyboard keyMappings according to keyMappings of scope\n              // zoomAll\n              if (code === ConfigProviderService.vals.keyMappings.zoomAll) {\n                if (viewState.getPermission('zoom')) {\n                  viewState.setViewPort(0, Soundhandlerservice.wavJSO.Data.length);\n                } else {\n                  console.log('action currently not allowed');\n                }\n              }\n              // zoomIn\n              if (code === ConfigProviderService.vals.keyMappings.zoomIn) {\n                if (viewState.getPermission('zoom')) {\n                  viewState.zoomViewPort(true, LevelService);\n                } else {\n                  console.log('action currently not allowed');\n                }\n              }\n              // zoomOut\n              if (code === ConfigProviderService.vals.keyMappings.zoomOut) {\n                if (viewState.getPermission('zoom')) {\n                  viewState.zoomViewPort(false, LevelService);\n                } else {\n                  console.log('action currently not allowed');\n                }\n              }\n              // shiftViewPortLeft\n              if (code === ConfigProviderService.vals.keyMappings.shiftViewPortLeft) {\n                if (viewState.getPermission('zoom')) {\n                  viewState.shiftViewPort(false);\n                } else {\n                  console.log('action currently not allowed');\n                }\n              }\n              // shiftViewPortRight\n              if (code === ConfigProviderService.vals.keyMappings.shiftViewPortRight) {\n                if (viewState.getPermission('zoom')) {\n                  viewState.shiftViewPort(true);\n                } else {\n                  console.log('action currently not allowed');\n                }\n              }\n              // zoomSel\n              if (code === ConfigProviderService.vals.keyMappings.zoomSel) {\n                if (viewState.getPermission('zoom')) {\n                  viewState.setViewPort(viewState.curViewPort.selectS, viewState.curViewPort.selectE);\n                } else {\n                  console.log('action currently not allowed');\n                }\n              }\n              // playEntireFile\n              if (code === ConfigProviderService.vals.keyMappings.playEntireFile) {\n                if (viewState.getPermission('playaudio')) {\n                  if (ConfigProviderService.vals.restrictions.playback) {\n                    Soundhandlerservice.playFromTo(0, Soundhandlerservice.wavJSO.Data.length);\n                    viewState.animatePlayHead(0, Soundhandlerservice.wavJSO.Data.length);\n                  }\n                } else {\n                  console.log('action currently not allowed');\n                }\n              }\n              // playAllInView\n              if (code === ConfigProviderService.vals.keyMappings.playAllInView) {\n                if (viewState.getPermission('playaudio')) {\n                  if (ConfigProviderService.vals.restrictions.playback) {\n                    Soundhandlerservice.playFromTo(viewState.curViewPort.sS, viewState.curViewPort.eS);\n                    viewState.animatePlayHead(viewState.curViewPort.sS, viewState.curViewPort.eS);\n                  }\n                } else {\n                  console.log('action currently not allowed');\n                }\n              }\n              // playSelected\n              if (code === ConfigProviderService.vals.keyMappings.playSelected) {\n                if (viewState.getPermission('playaudio')) {\n                  if (ConfigProviderService.vals.restrictions.playback) {\n                    Soundhandlerservice.playFromTo(viewState.curViewPort.selectS, viewState.curViewPort.selectE);\n                    viewState.animatePlayHead(viewState.curViewPort.selectS, viewState.curViewPort.selectE);\n                  }\n                } else {\n                  console.log('action currently not allowed');\n                }\n              }\n              // selectFirstContourCorrectionTool\n              if (code === ConfigProviderService.vals.keyMappings.selectFirstContourCorrectionTool) {\n                if (viewState.getPermission('labelAction')) {\n                  if (ConfigProviderService.vals.restrictions.correctionTool) {\n                    viewState.curCorrectionToolNr = 1;\n                  }\n                }\n              }\n              // selectSecondContourCorrectionTool\n              if (code === ConfigProviderService.vals.keyMappings.selectSecondContourCorrectionTool) {\n                if (viewState.getPermission('labelAction')) {\n                  if (ConfigProviderService.vals.restrictions.correctionTool) {\n                    viewState.curCorrectionToolNr = 2;\n                  }\n                }\n              }\n              // selectThirdContourCorrectionTool\n              if (code === ConfigProviderService.vals.keyMappings.selectThirdContourCorrectionTool) {\n                if (viewState.getPermission('labelAction')) {\n                  if (ConfigProviderService.vals.restrictions.correctionTool) {\n                    viewState.curCorrectionToolNr = 3;\n                  }\n                }\n              }\n              // selectFourthContourCorrectionTool\n              if (code === ConfigProviderService.vals.keyMappings.selectFourthContourCorrectionTool) {\n                if (viewState.getPermission('labelAction')) {\n                  if (ConfigProviderService.vals.restrictions.correctionTool) {\n                    viewState.curCorrectionToolNr = 4;\n                  }\n                }\n              }\n              // selectNOContourCorrectionTool\n              if (code === ConfigProviderService.vals.keyMappings.selectNoContourCorrectionTool) {\n                if (viewState.getPermission('labelAction')) {\n                  if (ConfigProviderService.vals.restrictions.correctionTool) {\n                    viewState.curCorrectionToolNr = undefined;\n                  }\n                }\n              }\n              // levelUp\n              if (code === ConfigProviderService.vals.keyMappings.levelUp) {\n                if (viewState.getPermission('labelAction')) {\n                  viewState.selectLevel(false, ConfigProviderService.vals.perspectives[viewState.curPerspectiveIdx].levelCanvases.order, LevelService);  // pass in LevelService to prevent circular deps\n                }\n              }\n              // levelDown\n              if (code === ConfigProviderService.vals.keyMappings.levelDown) {\n                if (viewState.getPermission('labelAction')) {\n                  viewState.selectLevel(true, ConfigProviderService.vals.perspectives[viewState.curPerspectiveIdx].levelCanvases.order, LevelService);  // pass LevelService to prevent circular deps\n                }\n              }\n              // preselected boundary snap to top\n              if (code === ConfigProviderService.vals.keyMappings.snapBoundaryToNearestTopBoundary) {\n                if (viewState.getPermission('labelAction')) {\n                  if (ConfigProviderService.vals.restrictions.editItemSize) {\n                    var mouseSeg = viewState.getcurMouseSegment();\n                    var levelName = viewState.getcurMouseLevelName();\n                    var levelType = viewState.getcurMouseLevelType();\n                    var neighbor = viewState.getcurMouseNeighbours();\n                    var minDist = LevelService.snapBoundary(true, levelName, mouseSeg, neighbor, levelType);\n                    if (minDist === false) {\n                      // error msg nothing moved / nothing on top\n                      console.log('error msg nothing moved / nothing on top');\n                    } else {\n                      if (levelType === 'EVENT') {\n                        HistoryService.updateCurChangeObj({\n                          'type': 'ESPS',\n                          'action': 'movePoint',\n                          'name': levelName,\n                          'id': mouseSeg.id,\n                          'movedBy': minDist\n                        });\n                      } else if (levelType === 'SEGMENT') {\n                        HistoryService.updateCurChangeObj({\n                          'type': 'ESPS',\n                          'action': 'moveBoundary',\n                          'name': levelName,\n                          'id': mouseSeg.id,\n                          'movedBy': minDist,\n                          'position': 0\n                        });\n                      }\n                      HistoryService.addCurChangeObjToUndoStack();\n                    }\n                  }\n                }\n              }\n              // preselected boundary snap to bottom\n              if (code === ConfigProviderService.vals.keyMappings.snapBoundaryToNearestBottomBoundary) {\n                if (viewState.getPermission('labelAction')) {\n                  if (ConfigProviderService.vals.restrictions.editItemSize) {\n                    var mouseSeg = viewState.getcurMouseSegment();\n                    var levelName = viewState.getcurMouseLevelName();\n                    var levelType = viewState.getcurMouseLevelType();\n                    var neighbor = viewState.getcurMouseNeighbours();\n                    var minDist = LevelService.snapBoundary(false, levelName, mouseSeg, neighbor, levelType);\n                    if (minDist == false) {\n                    } else {\n                      if (levelType === 'EVENT') {\n                        HistoryService.updateCurChangeObj({\n                          'type': 'ESPS',\n                          'action': 'movePoint',\n                          'name': levelName,\n                          'id': mouseSeg.id,\n                          'movedBy': minDist\n                        });\n                      } else if (levelType === 'SEGMENT') {\n                        console.log('seg to bottom');\n                        HistoryService.updateCurChangeObj({\n                          'type': 'ESPS',\n                          'action': 'moveBoundary',\n                          'name': levelName,\n                          'id': mouseSeg.id,\n                          'movedBy': minDist,\n                          'position': 0\n                        });\n                      }\n                      HistoryService.addCurChangeObjToUndoStack();\n                    }\n                  }\n                }\n              }\n              // preselected boundary to nearest zero crossing\n              if (code === ConfigProviderService.vals.keyMappings.snapBoundaryToNearestZeroCrossing) {\n                if (viewState.getPermission('labelAction')) {\n                  if (ConfigProviderService.vals.restrictions.editItemSize) {\n                    var dist;\n                    if (viewState.getcurMouseLevelType() === 'SEGMENT') {\n                      dist = LevelService.calcDistanceToNearestZeroCrossing(viewState.getcurMouseSegment().sampleStart);\n                    } else {\n                      dist = LevelService.calcDistanceToNearestZeroCrossing(viewState.getcurMouseSegment().samplePoint);\n                    }\n                    if (dist !== 0) {\n                      var seg = viewState.getcurMouseSegment();\n                      var neigh = viewState.getcurMouseNeighbours();\n                      var levelname = viewState.getcurMouseLevelName();\n                      LevelService.moveBoundary(levelname, seg.id, dist, 0);\n                      HistoryService.updateCurChangeObj({\n                        'type': 'ESPS',\n                        'action': 'moveBoundary',\n                        'name': levelname,\n                        'id': seg.id,\n                        'movedBy': dist,\n                        'position': 0\n                      });\n                      HistoryService.addCurChangeObjToUndoStack();\n                    }\n                  }\n                }\n              }\n              // expand Segments\n              if (code === ConfigProviderService.vals.keyMappings.expandSelSegmentsRight) {\n                if (viewState.getPermission('labelAction')) {\n                  if (ConfigProviderService.vals.restrictions.editItemSize) {\n                    if (viewState.getcurClickLevelName() === undefined) {\n                      scope.dials.open('views/error.html', 'ModalCtrl', 'Expand Segments Error: Please select a Level first');\n                    } else {\n                      if (viewState.getselected().length === 0) {\n                        scope.dials.open('views/error.html', 'ModalCtrl', 'Expand Segments Error: Please select one or more Segments first');\n                      } else {\n                        if (ConfigProviderService.vals.labelCanvasConfig.addTimeMode === 'absolute') {\n                          var changeTime = parseInt(ConfigProviderService.vals.labelCanvasConfig.addTimeValue, 10);\n                        } else if (ConfigProviderService.vals.labelCanvasConfig.addTimeMode === 'relative') {\n                          var changeTime = ConfigProviderService.vals.labelCanvasConfig.addTimeValue * (Soundhandlerservice.wavJSO.Data.length / 100);\n                        } else {\n                          scope.dials.open('views/error.html', 'ModalCtrl', 'Expand Segements Error: Error in Configuration (Value labelCanvasConfig.addTimeMode)');\n                        }\n                        LevelService.expandSegment(true, viewState.getcurClickSegments(), viewState.getcurClickLevelName(), changeTime);\n                        scope.hists.addObjToUndoStack({\n                          'type': 'ESPS',\n                          'action': 'expandSegments',\n                          'levelName': viewState.getcurClickLevelName(),\n                          'item': viewState.getcurClickSegments(),\n                          'rightSide': true,\n                          'changeTime': changeTime\n                        });\n                        var l = viewState.getcurClickSegments().length;\n                        if (l == 1) {\n                          viewState.select(viewState.getcurClickSegments()[0].sampleStart, viewState.getcurClickSegments()[0].sampleStart + viewState.getcurClickSegments()[0].sampleDur);\n                        } else {\n                          viewState.select(viewState.getcurClickSegments()[0].sampleStart, viewState.getcurClickSegments()[l - 1].sampleStart + viewState.getcurClickSegments()[l - 1].sampleDur);\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n              // expand Segment left\n              if (code === ConfigProviderService.vals.keyMappings.expandSelSegmentsLeft) {\n                if (viewState.getPermission('labelAction')) {\n                  if (ConfigProviderService.vals.restrictions.editItemSize) {\n                    if (viewState.getcurClickLevelName() === undefined) {\n                      scope.dials.open('views/error.html', 'ModalCtrl', 'Expand Segments Error: Please select a Level first');\n                    } else {\n                      if (viewState.getselected().length === 0) {\n                        scope.dials.open('views/error.html', 'ModalCtrl', 'Expand Segments Error: Please select one or more Segments first');\n                      } else {\n                        if (ConfigProviderService.vals.labelCanvasConfig.addTimeMode === 'absolute') {\n                          var changeTime = parseInt(ConfigProviderService.vals.labelCanvasConfig.addTimeValue, 10);\n                        } else if (ConfigProviderService.vals.labelCanvasConfig.addTimeMode === 'relative') {\n                          var changeTime = ConfigProviderService.vals.labelCanvasConfig.addTimeValue * (Soundhandlerservice.wavJSO.Data.length / 100);\n                        } else {\n                          scope.dials.open('views/error.html', 'ModalCtrl', 'Expand Segements Error: Error in Configuration (Value labelCanvasConfig.addTimeMode)');\n                        }\n                        LevelService.expandSegment(false, viewState.getcurClickSegments(), viewState.getcurClickLevelName(), changeTime);\n                        scope.hists.addObjToUndoStack({\n                          'type': 'ESPS',\n                          'action': 'expandSegments',\n                          'levelName': viewState.getcurClickLevelName(),\n                          'item': viewState.getcurClickSegments(),\n                          'rightSide': false,\n                          'changeTime': changeTime\n                        });\n                        var l = viewState.getcurClickSegments().length;\n                        if (l == 1) {\n                          viewState.select(viewState.getcurClickSegments()[0].sampleStart, viewState.getcurClickSegments()[0].sampleStart + viewState.getcurClickSegments()[0].sampleDur);\n                        } else {\n                          viewState.select(viewState.getcurClickSegments()[0].sampleStart, viewState.getcurClickSegments()[l - 1].sampleStart + viewState.getcurClickSegments()[l - 1].sampleDur);\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n              // shrink Segments Left\n              if (code === ConfigProviderService.vals.keyMappings.shrinkSelSegmentsLeft) {\n                if (viewState.getPermission('labelAction')) {\n                  if (ConfigProviderService.vals.restrictions.editItemSize) {\n                    if (viewState.getcurClickLevelName() === undefined) {\n                      scope.dials.open('views/error.html', 'ModalCtrl', 'Expand Segments Error: Please select a Level first');\n                    } else {\n                      if (viewState.getselected().length === 0) {\n                        scope.dials.open('views/error.html', 'ModalCtrl', 'Expand Segments Error: Please select one or more Segments first');\n                      } else {\n                        if (ConfigProviderService.vals.labelCanvasConfig.addTimeMode === 'absolute') {\n                          var changeTime = parseInt(ConfigProviderService.vals.labelCanvasConfig.addTimeValue, 10);\n                        } else if (ConfigProviderService.vals.labelCanvasConfig.addTimeMode === 'relative') {\n                          var changeTime = ConfigProviderService.vals.labelCanvasConfig.addTimeValue * (Soundhandlerservice.wavJSO.Data.length / 100);\n                        } else {\n                          scope.dials.open('views/error.html', 'ModalCtrl', 'Expand Segements Error: Error in Configuration (Value labelCanvasConfig.addTimeMode)');\n                        }\n                        scope.hists.addObjToUndoStack({\n                          'type': 'ESPS',\n                          'action': 'expandSegments',\n                          'levelName': viewState.getcurClickLevelName(),\n                          'item': viewState.getcurClickSegments(),\n                          'rightSide': true,\n                          'changeTime': -changeTime\n                        });\n                        LevelService.expandSegment(true, viewState.getcurClickSegments(), viewState.getcurClickLevelName(), -changeTime);\n                        var l = viewState.getcurClickSegments().length;\n                        if (l == 1) {\n                          viewState.select(viewState.getcurClickSegments()[0].sampleStart, viewState.getcurClickSegments()[0].sampleStart + viewState.getcurClickSegments()[0].sampleDur);\n                        } else {\n                          viewState.select(viewState.getcurClickSegments()[0].sampleStart, viewState.getcurClickSegments()[l - 1].sampleStart + viewState.getcurClickSegments()[l - 1].sampleDur);\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n              // shrink Segments Right\n              if (code === ConfigProviderService.vals.keyMappings.shrinkSelSegmentsRight) {\n                if (viewState.getPermission('labelAction')) {\n                  if (ConfigProviderService.vals.restrictions.editItemSize) {\n                    if (viewState.getcurClickLevelName() === undefined) {\n                      scope.dials.open('views/error.html', 'ModalCtrl', 'Expand Segments Error: Please select a Level first');\n                    } else {\n                      if (viewState.getselected().length === 0) {\n                        scope.dials.open('views/error.html', 'ModalCtrl', 'Expand Segments Error: Please select one or more Segments first');\n                      } else {\n                        if (ConfigProviderService.vals.labelCanvasConfig.addTimeMode === 'absolute') {\n                          var changeTime = parseInt(ConfigProviderService.vals.labelCanvasConfig.addTimeValue, 10);\n                        } else if (ConfigProviderService.vals.labelCanvasConfig.addTimeMode === 'relative') {\n                          var changeTime = ConfigProviderService.vals.labelCanvasConfig.addTimeValue * (Soundhandlerservice.wavJSO.Data.length / 100);\n                        } else {\n                          scope.dials.open('views/error.html', 'ModalCtrl', 'Expand Segements Error: Error in Configuration (Value labelCanvasConfig.addTimeMode)');\n                        }\n                        scope.hists.addObjToUndoStack({\n                          'type': 'ESPS',\n                          'action': 'expandSegments',\n                          'levelName': viewState.getcurClickLevelName(),\n                          'item': viewState.getcurClickSegments(),\n                          'rightSide': false,\n                          'changeTime': -changeTime\n                        });\n                        LevelService.expandSegment(false, viewState.getcurClickSegments(), viewState.getcurClickLevelName(), -changeTime);\n                        var l = viewState.getcurClickSegments().length;\n                        if (l == 1) {\n                          viewState.select(viewState.getcurClickSegments()[0].sampleStart, viewState.getcurClickSegments()[0].sampleStart + viewState.getcurClickSegments()[0].sampleDur);\n                        } else {\n                          viewState.select(viewState.getcurClickSegments()[0].sampleStart, viewState.getcurClickSegments()[l - 1].sampleStart + viewState.getcurClickSegments()[l - 1].sampleDur);\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n              // toggleSideBars\n              if (code === ConfigProviderService.vals.keyMappings.toggleSideBarLeft) {\n                if (viewState.getPermission('toggleSideBars')) {\n                  // check if menu button in showing -> if not -> no submenu open\n                  if (ConfigProviderService.vals.activeButtons.openMenu) {\n                    scope.openSubmenu();\n                  }\n                }\n              }\n              // toggleSideBars\n              if (code === ConfigProviderService.vals.keyMappings.toggleSideBarRight) {\n                if (viewState.getPermission('toggleSideBars')) {\n                  // check if menu button in showing -> if not -> no submenu open\n                  if (ConfigProviderService.vals.activeButtons.openMenu) {\n                    scope.toggleRightSideMenuHidden();\n                  }\n                }\n              }\n              // select Segments in viewport selection\n              if (code === ConfigProviderService.vals.keyMappings.selectSegmentsInSelection) {\n                if (viewState.getPermission('labelAction')) {\n                  if (viewState.getcurClickLevelName() === undefined) {\n                    scope.dials.open('views/error.html', 'ModalCtrl', 'Selection Error : Please select a Level first');\n                  } else {\n                    viewState.selectSegmentsInSelection(LevelService.data.levels);\n                  }\n                }\n              }\n              // selPrevItem\n              if (code === ConfigProviderService.vals.keyMappings.selPrevItem) {\n                if (viewState.getPermission('labelAction')) {\n                  if (viewState.getcurClickSegments().length > 0) {\n                    var idLeft = viewState.getcurClickSegments()[0].id;\n                    var idRight = viewState.getcurClickSegments()[viewState.getcurClickSegments().length - 1].id;\n                    var lastNeighboursMove = LevelService.getElementNeighbourDetails(viewState.getcurClickLevelName(), idLeft, idRight);\n                    if (lastNeighboursMove.left !== undefined) {\n                      if (lastNeighboursMove.left.sampleStart !== undefined) {\n                        // check if in view\n                        if (lastNeighboursMove.left.sampleStart + lastNeighboursMove.left.sampleDur > viewState.curViewPort.sS) {\n                          viewState.setcurClickSegment(lastNeighboursMove.left, lastNeighboursMove.left.id);\n                          LevelService.setlasteditArea('_' + lastNeighboursMove.left.id);\n                        }\n                      } else {\n                        // check if in view\n                        if (lastNeighboursMove.left.samplePoint > viewState.curViewPort.sS) {\n                          viewState.setcurClickSegment(lastNeighboursMove.left, lastNeighboursMove.left.id);\n                          LevelService.setlasteditArea('_' + lastNeighboursMove.left.id);\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n              // selNextItem\n              if (code === ConfigProviderService.vals.keyMappings.selNextItem) {\n                if (viewState.getPermission('labelAction')) {\n                  if (viewState.getcurClickSegments().length > 0) {\n                    var idLeft = viewState.getcurClickSegments()[0].id;\n                    var idRight = viewState.getcurClickSegments()[viewState.getcurClickSegments().length - 1].id;\n                    var lastNeighboursMove = LevelService.getElementNeighbourDetails(viewState.getcurClickLevelName(), idLeft, idRight);\n                    if (lastNeighboursMove.right.sampleStart !== undefined) {\n                      // check if in view\n                      if (lastNeighboursMove.right.sampleStart < viewState.curViewPort.eS) {\n                        viewState.setcurClickSegment(lastNeighboursMove.right, lastNeighboursMove.right.id);\n                        LevelService.setlasteditArea('_' + lastNeighboursMove.right.id);\n                      }\n                    } else {\n                      // check if in view\n                      if (lastNeighboursMove.right.samplePoint < viewState.curViewPort.eS) {\n                        viewState.setcurClickSegment(lastNeighboursMove.right, lastNeighboursMove.right.id);\n                        LevelService.setlasteditArea('_' + lastNeighboursMove.right.id);\n                      }\n                    }\n                  }\n                }\n              }\n              // selNextPrevItem\n              if (code === ConfigProviderService.vals.keyMappings.selNextPrevItem) {\n                if (viewState.getPermission('labelAction')) {\n                  if (viewState.getcurClickSegments().length > 0) {\n                    var idLeft = viewState.getcurClickSegments()[0].id;\n                    var idRight = viewState.getcurClickSegments()[viewState.getcurClickSegments().length - 1].id;\n                    var lastNeighboursMove = LevelService.getElementNeighbourDetails(viewState.getcurClickLevelName(), idLeft, idRight);\n                    if (e.shiftKey) {\n                      if (lastNeighboursMove.left !== undefined) {\n                        if (lastNeighboursMove.left.sampleStart !== undefined) {\n                          // check if in view\n                          if (lastNeighboursMove.left.sampleStart + lastNeighboursMove.left.sampleDur > viewState.curViewPort.sS) {\n                            viewState.setcurClickSegment(lastNeighboursMove.left, lastNeighboursMove.left.id);\n                            LevelService.setlasteditArea('_' + lastNeighboursMove.left.id);\n                          }\n                        } else {\n                          // check if in view\n                          if (lastNeighboursMove.left.samplePoint > viewState.curViewPort.sS) {\n                            viewState.setcurClickSegment(lastNeighboursMove.left, lastNeighboursMove.left.id);\n                            LevelService.setlasteditArea('_' + lastNeighboursMove.left.id);\n                          }\n                        }\n                      }\n                    } else {\n                      if (lastNeighboursMove.right !== undefined) {\n                        if (lastNeighboursMove.right.sampleStart !== undefined) {\n                          // check if in view\n                          if (lastNeighboursMove.right.sampleStart < viewState.curViewPort.eS) {\n                            viewState.setcurClickSegment(lastNeighboursMove.right, lastNeighboursMove.right.id);\n                            LevelService.setlasteditArea('_' + lastNeighboursMove.right.id);\n                          }\n                        } else {\n                          // check if in view\n                          if (lastNeighboursMove.right.samplePoint < viewState.curViewPort.eS) {\n                            viewState.setcurClickSegment(lastNeighboursMove.right, lastNeighboursMove.right.id);\n                            LevelService.setlasteditArea('_' + lastNeighboursMove.right.id);\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n              // createNewItemAtSelection\n              if (code === ConfigProviderService.vals.keyMappings.createNewItemAtSelection) {\n                if (viewState.getPermission('labelAction')) {\n                  if (ConfigProviderService.vals.restrictions.addItem) {\n                    if (viewState.getselectedRange().start === viewState.curViewPort.selectS && viewState.getselectedRange().end === viewState.curViewPort.selectE) {\n                      if (viewState.getcurClickSegments().length === 1) {\n                        // check if in view\n                        if (viewState.getselectedRange().start >= viewState.curViewPort.sS && viewState.getselectedRange().end <= viewState.curViewPort.eS) {\n                          viewState.setEditing(true);\n                          LevelService.openEditArea(viewState.getcurClickSegments()[0], LevelService.getlasteditAreaElem(), viewState.getcurClickLevelType());\n                          scope.cursorInTextField();\n                        }\n                      } else {\n                        console.log(viewState.getcurClickSegments());\n                        scope.dials.open('views/error.html', 'ModalCtrl', 'Modify Error: Please select a single Segment.');\n                      }\n                    } else {\n                      if (viewState.curViewPort.selectE == -1 && viewState.curViewPort.selectS == -1) {\n                        scope.dials.open('views/error.html', 'ModalCtrl', 'Error : Please select a Segment or Point to modify it\\'s name. Or select a level plus a range in the viewport in order to insert a new Segment.');\n                      } else {\n                        if (viewState.getcurClickLevelType() === 'SEGMENT') {\n                          var insSeg = LevelService.insertSegment(viewState.getcurClickLevelName(), viewState.curViewPort.selectS, viewState.curViewPort.selectE, ConfigProviderService.vals.labelCanvasConfig.newSegmentName);\n                          if (!insSeg.ret) {\n                            scope.dials.open('views/error.html', 'ModalCtrl', 'Error : You are not allowed to insert a Segment here.');\n                          } else {\n                            scope.hists.addObjToUndoStack({\n                              'type': 'ESPS',\n                              'action': 'insertSegments',\n                              'name': viewState.getcurClickLevelName(),\n                              'start': viewState.curViewPort.selectS,\n                              'end': viewState.curViewPort.selectE,\n                              'ids': insSeg.ids,\n                              'segName': ConfigProviderService.vals.labelCanvasConfig.newSegmentName\n                            });\n                          }\n                        } else {\n                          var levelDef = ConfigProviderService.getLevelDefinition(viewState.getcurClickLevelName());\n                          if (typeof levelDef.anagestConfig === 'undefined') {\n                            var insPoint = LevelService.insertPoint(viewState.getcurClickLevelName(), viewState.curViewPort.selectS, ConfigProviderService.vals.labelCanvasConfig.newEventName);\n                            if (!insPoint.ret) {\n                              scope.dials.open('views/error.html', 'ModalCtrl', 'Error: You are not allowed to insert a Point here.');\n                            } else {\n                              scope.hists.addObjToUndoStack({\n                                'type': 'ESPS',\n                                'action': 'insertPoint',\n                                'name': viewState.getcurClickLevelName(),\n                                'start': viewState.curViewPort.selectS,\n                                'id': insPoint.id,\n                                'pointName': ConfigProviderService.vals.labelCanvasConfig.newEventName\n                              });\n                            }\n                          } else {\n                            AnagestService.insertAnagestEvents();\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                  }\n                }\n              }\n              // undo\n              if (code === ConfigProviderService.vals.keyMappings.undo) {\n                console.log(scope.hists.getCurrentStack());\n                if (viewState.getPermission('labelAction')) {\n                  HistoryService.undo();\n                }\n              }\n              // redo\n              if (code === ConfigProviderService.vals.keyMappings.redo) {\n                console.log(scope.hists.getCurrentStack());\n                if (viewState.getPermission('labelAction')) {\n                  HistoryService.redo();\n                }\n              }\n              // deletePreselBoundary\n              if (code === ConfigProviderService.vals.keyMappings.deletePreselBoundary) {\n                if (viewState.getPermission('labelAction')) {\n                  if (!e.shiftKey) {\n                    if (ConfigProviderService.vals.restrictions.deleteItemBoundary) {\n                      var seg = viewState.getcurMouseSegment();\n                      var levelname = viewState.getcurMouseLevelName();\n                      var type = viewState.getcurMouseLevelType();\n                      if (seg !== undefined) {\n                        if (seg === false) {\n                          // before first segment\n                          seg = LevelService.getElementDetails(levelname, 0);\n                          var deletedSegment = LevelService.deleteSegments(levelname, seg.id, 1);\n                          scope.hists.addObjToUndoStack({\n                            'type': 'ESPS',\n                            'action': 'deleteSegments',\n                            'name': levelname,\n                            'id': seg.id,\n                            'length': 1,\n                            'deletedSegment': deletedSegment\n                          });\n                          viewState.setcurMouseSegment(undefined, undefined, undefined);\n                          viewState.setcurClickSegment(deletedSegment.clickSeg);\n                        } else if (seg === true) {\n                          // after last segment\n                          seg = LevelService.getLastElement(levelname);\n                          var deletedSegment = LevelService.deleteSegments(levelname, seg.id, 1);\n                          scope.hists.addObjToUndoStack({\n                            'type': 'ESPS',\n                            'action': 'deleteSegments',\n                            'name': levelname,\n                            'id': seg.id,\n                            'length': 1,\n                            'deletedSegment': deletedSegment\n                          });\n                          viewState.setcurMouseSegment(undefined, undefined, undefined);\n                          viewState.setcurClickSegment(deletedSegment.clickSeg);\n                        } else {\n                          if (type === 'SEGMENT') {\n                            var deletedSegment = LevelService.deleteBoundary(levelname, seg.id);\n                            scope.hists.addObjToUndoStack({\n                              'type': 'ESPS',\n                              'action': 'deleteBoundary',\n                              'name': levelname,\n                              'id': seg.id,\n                              'deletedSegment': deletedSegment\n                            });\n                            // reset to undefined\n                            viewState.setcurMouseSegment(undefined, undefined, undefined);\n                            viewState.setcurClickSegment(deletedSegment.clickSeg);\n                          } else {\n                            var deletedPoint = LevelService.deletePoint(levelname, seg.id);\n                            scope.hists.addObjToUndoStack({\n                              'type': 'ESPS',\n                              'action': 'deletePoint',\n                              'name': levelname,\n                              'start': deletedPoint.samplePoint,\n                              'id': deletedPoint.id,\n                              'pointName': deletedPoint.labels[0].value\n                            });\n                            // reset to undefined\n                            viewState.setcurMouseSegment(undefined, undefined, undefined);\n                          }\n                        }\n                      } else {\n                      }\n                    }\n                  } else {\n                    if (ConfigProviderService.vals.restrictions.deleteItem) {\n                      var seg = viewState.getcurClickSegments();\n                      if (seg !== undefined && seg.length > 0) {\n                        var levelname = viewState.getcurClickLevelName();\n                        if (viewState.getcurClickLevelType() === 'SEGMENT') {\n                          var deletedSegment = LevelService.deleteSegments(levelname, seg[0].id, seg.length);\n                          scope.hists.addObjToUndoStack({\n                            'type': 'ESPS',\n                            'action': 'deleteSegments',\n                            'name': levelname,\n                            'id': seg[0].id,\n                            'length': seg.length,\n                            'deletedSegment': deletedSegment\n                          });\n                          viewState.setcurMouseSegment(undefined, undefined, undefined);\n                          viewState.setcurClickSegment(deletedSegment.clickSeg);\n                        } else {\n                          scope.dials.open('views/error.html', 'ModalCtrl', 'Delete Error: You can not delete Segments on Point Levels.');\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n              if (!e.metaKey && !e.ctrlKey) {\n                e.preventDefault();\n                e.stopPropagation();\n              }\n            }\n          });\n        }\n        scope.safeApply = function (fn) {\n          var phase = this.$root.$$phase;\n          if (phase == '$apply' || phase == '$digest') {\n            if (fn && typeof fn === 'function') {\n              fn();\n            }\n          } else {\n            this.$apply(fn);\n          }\n        };\n        //remove binding on destroy\n        scope.$on('$destroy', function () {\n          $(window).off('keydown');\n        });\n      }\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').directive('delete', function () {\n  return {\n    restrict: 'A',\n    link: function (scope, element, attr) {\n      var name = scope.this.level.name;\n      element.bind('click', function () {\n        scope.vs.setcurClickLevelName(name, attr.delete);\n        scope.dials.open('views/deleteLevel.html', 'ModalCtrl', name);\n      });\n    }\n  };\n});\n'use strict';\nangular.module('emuwebApp').directive('resize', function () {\n  return {\n    restrict: 'A',\n    link: function (scope, element) {\n      var elem = element.parent().parent();\n      var elemHeight = 0;\n      var deleteButton = elem.find(element.parent().children()[0]);\n      var resizeButton = elem.find(element.parent().children()[1]);\n      var saveButton = elem.find(element.parent().children()[2]);\n      element.bind('click', function () {\n        if (scope.open) {\n          scope.open = false;\n          elemHeight = elem.css('height');\n          elem.css({ 'height': '30px' });\n          if (scope.cps.vals.activeButtons.deleteSingleLevel) {\n            deleteButton.hide();\n          }\n          if (scope.cps.vals.activeButtons.saveSingleLevel) {\n            saveButton.hide();\n          }\n        } else {\n          scope.open = true;\n          elem.css({ 'height': elemHeight });\n          if (scope.cps.vals.activeButtons.deleteSingleLevel) {\n            deleteButton.show();\n          }\n          if (scope.cps.vals.activeButtons.saveSingleLevel) {\n            saveButton.show();\n          }\n        }\n        scope.updateView();\n      });\n    }\n  };\n});\n'use strict';\nangular.module('emuwebApp').directive('enlarge', [\n  '$rootScope',\n  'viewState',\n  function ($rootScope, viewState) {\n    return {\n      restrict: 'A',\n      link: function (scope, element, attrs) {\n        var open = false;\n        element.bind('click', function () {\n          if (open) {\n            open = false;\n            viewState.setenlarge(-1);\n          } else {\n            open = true;\n            viewState.setenlarge(attrs.enlarge);\n          }\n          $rootScope.$apply();\n        });\n      }\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').directive('save', [\n  'dialogService',\n  'Espsparserservice',\n  function (dialogService, Espsparserservice) {\n    return {\n      restrict: 'A',\n      link: function (scope, element, attr) {\n        var name = scope.this.level.name;\n        element.bind('click', function () {\n          scope.vs.setcurClickLevelName(name, attr.save);\n          Espsparserservice.asyncParseJSO(name).then(function (result) {\n            dialogService.openExport('views/export.html', 'ExportCtrl', result.data, name + '_esps.txt');\n          });\n        });\n      }\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').directive('previewtrack', [\n  'viewState',\n  'Soundhandlerservice',\n  function (viewState, Soundhandlerservice) {\n    return {\n      restrict: 'A',\n      scope: {},\n      link: function (scope, element) {\n        var startPCM = -1;\n        ///////////////\n        // bindings\n        //\n        element.bind('click', function (x) {\n          if (!$.isEmptyObject(Soundhandlerservice.wavJSO)) {\n            var width = viewState.curViewPort.eS - viewState.curViewPort.sS;\n            startPCM = getX(x) * (Soundhandlerservice.wavJSO.Data.length / x.originalEvent.target.width);\n            if (!viewState.focusInTextField) {\n              scope.$apply(function () {\n                viewState.setViewPort(startPCM - width / 2, startPCM + width / 2);\n              });\n            }\n          }\n        });\n        //\n        element.bind('mousedown', function (x) {\n          if (!$.isEmptyObject(Soundhandlerservice.wavJSO)) {\n            startPCM = getX(x) * (Soundhandlerservice.wavJSO.Data.length / x.originalEvent.target.width);\n          }\n        });\n        //\n        element.bind('mousemove', function (x) {\n          var mbutton = 0;\n          if (x.buttons === undefined) {\n            mbutton = x.which;\n          } else {\n            mbutton = x.buttons;\n          }\n          switch (mbutton) {\n          case 1:\n            if (startPCM !== -1) {\n              var width = viewState.curViewPort.eS - viewState.curViewPort.sS;\n              startPCM = getX(x) * (Soundhandlerservice.wavJSO.Data.length / x.originalEvent.target.width);\n              if (!viewState.focusInTextField) {\n                scope.$apply(function () {\n                  viewState.setViewPort(startPCM - width / 2, startPCM + width / 2);\n                });\n              }\n            }\n            break;\n          }\n        });\n        //\n        element.bind('mouseup', function () {\n          startPCM = -1;\n        });\n        //\n        element.bind('mouseout', function () {\n          startPCM = -1;\n        });\n        //\n        /////////////////\n        function getX(e) {\n          return (e.offsetX || e.originalEvent.layerX) * (e.originalEvent.target.width / e.originalEvent.target.clientWidth);\n        }\n      }\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').service('Iohandlerservice', [\n  '$rootScope',\n  '$http',\n  '$location',\n  '$q',\n  'HistoryService',\n  'viewState',\n  'Soundhandlerservice',\n  'Ssffparserservice',\n  'Wavparserservice',\n  'Textgridparserservice',\n  'ConfigProviderService',\n  'Espsparserservice',\n  'Ssffdataservice',\n  'Websockethandler',\n  function Iohandlerservice($rootScope, $http, $location, $q, HistoryService, viewState, Soundhandlerservice, Ssffparserservice, Wavparserservice, Textgridparserservice, ConfigProviderService, Espsparserservice, Ssffdataservice, Websockethandler) {\n    // shared service object\n    var sServObj = {};\n    // $http.defaults.useXDomain = true;\n    sServObj.wsH = Websockethandler;\n    /**\n\t\t * default config is always loaded from same origin\n\t\t */\n    sServObj.httpGetDefaultConfig = function () {\n      var prom = $http.get('configFiles/default_emuwebappConfig.json');\n      return prom;\n    };\n    /**\n\t\t * default config is always loaded from same origin\n\t\t */\n    sServObj.httpGetPath = function (path, respType) {\n      var prom = $http.get(path, { responseType: respType });\n      return prom;\n    };\n    ////////////////////////////\n    // EMU-webApp protocol begins here\n    //\n    /**\n\t\t *\n\t\t */\n    sServObj.getProtocol = function () {\n      var getProm;\n      if (ConfigProviderService.vals.main.comMode === 'CORS') {\n        alert('CORS version of getProtocol not implemented');\n      } else if (ConfigProviderService.vals.main.comMode === 'WS') {\n        getProm = Websockethandler.getProtocol();\n      }\n      return getProm;\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.getDoUserManagement = function () {\n      var getProm;\n      if (ConfigProviderService.vals.main.comMode === 'CORS') {\n        alert('CORS version of getDoUserManagement not implemented');\n      } else if (ConfigProviderService.vals.main.comMode === 'WS') {\n        getProm = Websockethandler.getDoUserManagement();\n      }\n      return getProm;\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.logOnUser = function (name, pwd) {\n      var getProm;\n      if (ConfigProviderService.vals.main.comMode === 'CORS') {\n        alert('CORS version of logOnUser not implemented');\n      } else if (ConfigProviderService.vals.main.comMode === 'WS') {\n        getProm = Websockethandler.logOnUser(name, pwd);\n      }\n      return getProm;\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.getDBconfigFile = function (nameOfDB) {\n      var getProm;\n      if (ConfigProviderService.vals.main.comMode === 'CORS') {\n        alert('CORS version of getDBconfigFile not implemented');\n      } else if (ConfigProviderService.vals.main.comMode === 'WS') {\n        getProm = Websockethandler.getDBconfigFile();\n      } else if (ConfigProviderService.vals.main.comMode === 'DEMO') {\n        getProm = $http.get('demoDBs/' + nameOfDB + '/' + nameOfDB + '_DBconfig.json');\n      }\n      return getProm;\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.getBundleList = function (nameOfDB) {\n      var getProm;\n      if (ConfigProviderService.vals.main.comMode === 'CORS') {\n        alert('CORS version of getBundleList not implemented');\n      } else if (ConfigProviderService.vals.main.comMode === 'WS') {\n        getProm = Websockethandler.getBundleList();\n      } else if (ConfigProviderService.vals.main.comMode === 'DEMO') {\n        getProm = $http.get('demoDBs/' + nameOfDB + '/' + nameOfDB + '_bundleList.json');\n      }\n      return getProm;\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.getBundle = function (name, nameOfDB) {\n      var getProm;\n      if (ConfigProviderService.vals.main.comMode === 'CORS') {\n        alert('CORS version of getBundle not implemented');\n      } else if (ConfigProviderService.vals.main.comMode === 'WS') {\n        getProm = Websockethandler.getBundle(name);\n      } else if (ConfigProviderService.vals.main.comMode === 'DEMO') {\n        // getProm = $http.get('testData/newAE/SES0000/' + name + '/' + name + '.json');\n        getProm = $http.get('demoDBs/' + nameOfDB + '/' + name + '_bndl.json');\n      }\n      return getProm;\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.saveBundle = function (bundleData) {\n      var getProm;\n      if (ConfigProviderService.vals.main.comMode === 'CORS') {\n        alert('CORS version of saveBundle not implemented');\n      } else if (ConfigProviderService.vals.main.comMode === 'WS') {\n        getProm = Websockethandler.saveBundle(bundleData);\n      }\n      // else if (ConfigProviderService.vals.main.comMode === 'DEMO') {\n      // getProm = $http.get('testData/newAE/SES0000/' + name + '/' + name + '.json');\n      // \tgetProm = $http.get('testData/testAeBundle.json'); // SIC SIC SIC HARDCODED -> name is ignored\n      // }\n      return getProm;\n    };\n    //\n    // EMU-webApp protocol ends here\n    ////////////////////////////\n    /**\n\t\t * pass through to according parser\n\t\t */\n    sServObj.parseLabelFile = function (string, annotates, name, fileType) {\n      var prom;\n      if (fileType === 'ESPS') {\n        prom = Espsparserservice.asyncParseEsps(string, ConfigProviderService.embeddedVals.labelGetUrl, 'embeddedESPS');\n      } else if (fileType === 'TEXTGRID') {\n        prom = Textgridparserservice.asyncParseTextGrid(string, ConfigProviderService.embeddedVals.labelGetUrl, 'embeddedTEXTGRID');\n      }\n      return prom;\n    };\n    return sServObj;\n  }\n]);\n'use strict';\nangular.module('emuwebApp').service('Soundhandlerservice', [\n  '$document',\n  'Binarydatamaniphelper',\n  function Soundhandlerservice($document, Binarydatamaniphelper) {\n    // shared service object\n    var sServObj = {};\n    sServObj.wavJSO = {};\n    sServObj.player = $document[0].createElement('audio');\n    sServObj.player.isPlaying = false;\n    sServObj.setPlayerSrc = function (buf) {\n      var base64String = Binarydatamaniphelper.arrayBufferToBase64(buf);\n      this.player.src = 'data:audio/wav;base64,' + base64String;\n    };\n    sServObj.resetPlayerSrcFromTo = function (sampleStart, endSample) {\n      var bytePerSample = this.wavJSO.BitsPerSample / 8;\n      var header = this.wavJSO.origArrBuf.subarray(0, 44);\n      var data = this.wavJSO.origArrBuf.subarray(44, this.wavJSO.Data.length * bytePerSample);\n      var dv = new DataView(header);\n      dv.setUint32(40, (endSample - sampleStart) * bytePerSample, true);\n      // var Subchunk2Size = dv.getUint32(40, true);\n      // console.log(Subchunk2Size);\n      var newData = data.subarray(sampleStart * bytePerSample, (endSample - sampleStart) * bytePerSample);\n      var tmp = new Uint8Array(header.byteLength + newData.byteLength);\n      tmp.set(new Uint8Array(header), 0);\n      tmp.set(new Uint8Array(newData), header.byteLength);\n      var base64String = Binarydatamaniphelper.arrayBufferToBase64(tmp.buffer);\n      this.player.src = 'data:audio/wav;base64,' + base64String;\n    };\n    sServObj.playFromTo = function (sampleStart, endSample) {\n      this.resetPlayerSrcFromTo(sampleStart, endSample);\n      if (this.player.isPlaying) {\n        this.player.isPlaying = false;\n        this.player.pause();\n      } else {\n        this.player.isPlaying = true;\n        this.player.play();\n      }\n    };\n    sServObj.player.addEventListener('ended', function () {\n      this.isPlaying = false;\n    }, false);\n    return sServObj;\n  }\n]);\n'use strict';\nangular.module('emuwebApp').directive('drawssff', [\n  'viewState',\n  'ConfigProviderService',\n  'Ssffdataservice',\n  'HistoryService',\n  'fontScaleService',\n  function (viewState, ConfigProviderService, Ssffdataservice, HistoryService, fontScaleService) {\n    return {\n      restrict: 'A',\n      scope: {},\n      link: function postLink(scope, element, atts) {\n        var canvas = element[0];\n        var trackName;\n        var assTrackName = '';\n        var lastDraw = Date.now();\n        // add watch vars to scope\n        scope.vs = viewState;\n        scope.hists = HistoryService;\n        scope.ssffds = Ssffdataservice;\n        ////////////////////\n        // observes\n        // observe attribute\n        atts.$observe('ssffTrackname', function (val) {\n          trackName = val;\n        });\n        ////////////////////\n        // watches\n        //watch viewPort change\n        scope.$watch('vs.curViewPort', function (newValue, oldValue) {\n          if (oldValue.sS !== newValue.sS || oldValue.eS !== newValue.eS) {\n            handleUpdate(newValue, oldValue);\n          }\n        }, true);\n        //watch perspective change\n        scope.$watch('vs.curPerspectiveIdx', function (newValue, oldValue) {\n          handleUpdate(newValue, oldValue);\n        }, true);\n        //watch vs.curCorrectionToolNr change\n        scope.$watch('vs.curCorrectionToolNr', function (newValue, oldValue) {\n          handleUpdate(newValue, oldValue);\n        }, true);\n        //watch hists.\n        scope.$watch('hists.movesAwayFromLastSave', function (newValue, oldValue) {\n          handleUpdate(newValue, oldValue);\n        }, true);\n        // watch ssffds.data change\n        scope.$watch('ssffds.data.length', function (newValue, oldValue) {\n          handleUpdate(newValue, oldValue);\n        }, true);\n        // watch vs.spectroSettings change\n        scope.$watch('vs.spectroSettings', function (newValue, oldValue) {\n          handleUpdate(newValue, oldValue);\n        }, true);\n        //\n        //////////////////////\n        /**\n         *\n         */\n        function handleUpdate() {\n          var ctx = canvas.getContext('2d');\n          ctx.clearRect(0, 0, canvas.width, canvas.height);\n          if (!$.isEmptyObject(Ssffdataservice.data)) {\n            if (Ssffdataservice.data.length !== 0) {\n              assTrackName = '';\n              // check assignments (= overlays)\n              ConfigProviderService.vals.perspectives[viewState.curPerspectiveIdx].signalCanvases.assign.forEach(function (ass, i) {\n                if (ass.signalCanvasName === trackName) {\n                  assTrackName = ass.ssffTrackName;\n                  var tr = ConfigProviderService.getSsffTrackConfig(ass.ssffTrackName);\n                  var col = Ssffdataservice.getColumnOfTrack(tr.name, tr.columnName);\n                  var sRaSt = Ssffdataservice.getSampleRateAndStartTimeOfTrack(tr.name);\n                  var minMaxLims = ConfigProviderService.getLimsOfTrack(tr.name);\n                  // draw values  \n                  drawValues(viewState, canvas, ConfigProviderService, col, sRaSt.sampleRate, sRaSt.startTime, minMaxLims);\n                }\n              });\n              assTrackName = '';\n              // draw ssffTrack onto own canvas\n              if (trackName !== 'OSCI' && trackName !== 'SPEC') {\n                // console.log('#######here')\n                // console.log(trackName)\n                var tr = ConfigProviderService.getSsffTrackConfig(trackName);\n                var col = Ssffdataservice.getColumnOfTrack(tr.name, tr.columnName);\n                var sRaSt = Ssffdataservice.getSampleRateAndStartTimeOfTrack(tr.name);\n                var minMaxLims = ConfigProviderService.getLimsOfTrack(tr.name);\n                // draw values  \n                drawValues(viewState, canvas, ConfigProviderService, col, sRaSt.sampleRate, sRaSt.startTime, minMaxLims);\n              }\n            }\n          } else {\n            var ctx = canvas.getContext('2d');\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n          }\n        }\n        /**\n         * draw values onto canvas\n         */\n        function drawValues(viewState, canvas, config, col, sR, sT, minMaxLims) {\n          var ctx = canvas.getContext('2d');\n          // create a destination canvas. Here the altered image will be placed\n          // ctx.fillStyle = \"rgba(\" + transparentColor.r + \", \" + transparentColor.g + \", \" + transparentColor.b + \", 1.0)\";\n          // ctx.clearRect(0, 0, canvas.width, canvas.height);\n          var minVal, maxVal;\n          if (trackName === 'SPEC' && assTrackName === 'FORMANTS') {\n            minVal = viewState.spectroSettings.rangeFrom;\n            maxVal = viewState.spectroSettings.rangeTo;\n          } else {\n            minVal = col._minVal;\n            maxVal = col._maxVal;\n          }\n          var startTimeVP = viewState.getViewPortStartTime();\n          var endTimeVP = viewState.getViewPortEndTime();\n          var colStartSampleNr = Math.round(startTimeVP * sR + sT);\n          var colEndSampleNr = Math.round(endTimeVP * sR + sT);\n          var nrOfSamples = colEndSampleNr - colStartSampleNr;\n          // console.log('###################################');\n          // console.log(col.name);\n          // console.log(startTimeVP);\n          // console.log(endTimeVP);\n          var curSampleArrs = col.values.slice(colStartSampleNr, colStartSampleNr + nrOfSamples);\n          if (nrOfSamples < canvas.width && nrOfSamples >= 2) {\n            var x, y, prevX, prevY, prevVal, curSampleInCol, curSampleInColTime;\n            ////////////////////////////////\n            // NEW VERSION\n            ////////////////////////////////\n            angular.forEach(curSampleArrs[0], function (contourVal, contourNr) {\n              // console.log(contourNr);\n              if ($.isEmptyObject(minMaxLims) || contourNr >= minMaxLims.min && contourNr <= minMaxLims.max) {\n                // set color\n                if ($.isEmptyObject(minMaxLims)) {\n                  ctx.strokeStyle = 'hsl(' + contourNr * (360 / curSampleArrs[0].length) + ',80%, 50%)';\n                  ctx.fillStyle = 'hsl(' + contourNr * (360 / curSampleArrs[0].length) + ',80%, 50%)';\n                } else {\n                  var l = minMaxLims.max - minMaxLims.min + 1;\n                  ctx.strokeStyle = 'hsl(' + contourNr * (360 / l) + ',80%, 50%)';\n                  ctx.fillStyle = 'hsl(' + contourNr * (360 / l) + ',80%, 50%)';\n                }\n                // mark selected\n                // console.log(viewState.curCorrectionToolNr);\n                if (viewState.curCorrectionToolNr - 1 === contourNr && trackName === 'SPEC' && assTrackName === 'FORMANTS') {\n                  ctx.strokeStyle = ConfigProviderService.vals.colors.selectedContourColor;\n                  ctx.fillStyle = ConfigProviderService.vals.colors.selectedContourColor;\n                }\n                ctx.beginPath();\n                // first line from sample not in view (left)\n                if (colStartSampleNr >= 1) {\n                  var leftBorder = col.values[colStartSampleNr - 1];\n                  var leftVal = leftBorder[contourNr];\n                  curSampleInCol = colStartSampleNr - 1;\n                  curSampleInColTime = 1 / sR * curSampleInCol + sT;\n                  x = (curSampleInColTime - startTimeVP) / (endTimeVP - startTimeVP) * canvas.width;\n                  y = canvas.height - (leftVal - minVal) / (maxVal - minVal) * canvas.height;\n                  ctx.moveTo(x, y);\n                }\n                angular.forEach(curSampleArrs, function (curArr, curArrIdx) {\n                  // console.log(curArr[contourNr]);\n                  curSampleInCol = colStartSampleNr + curArrIdx;\n                  curSampleInColTime = 1 / sR * curSampleInCol + sT;\n                  x = (curSampleInColTime - startTimeVP) / (endTimeVP - startTimeVP) * canvas.width;\n                  y = canvas.height - (curArr[contourNr] - minVal) / (maxVal - minVal) * canvas.height;\n                  ctx.arc(x, y - 1, 2, 0, 2 * Math.PI, false);\n                  ctx.lineTo(x, y);\n                });\n                // last line from sample not in view (right)\n                if (colEndSampleNr < col.values.length - 1) {\n                  var rightBorder = col.values[colEndSampleNr + 1];\n                  var rightVal = rightBorder[contourNr];\n                  curSampleInCol = colEndSampleNr + 1;\n                  curSampleInColTime = 1 / sR * curSampleInCol + sT;\n                  x = (curSampleInColTime - startTimeVP) / (endTimeVP - startTimeVP) * canvas.width;\n                  y = canvas.height - (rightVal - minVal) / (maxVal - minVal) * canvas.height;\n                  ctx.lineTo(x, y);\n                }\n                ctx.stroke();  // ctx.fill();\n              }\n            });  ////////////////////////////////\n                 // OLD VERSION\n                 ////////////////////////////////\n                 // curSampleArrs.forEach(function (valRep, valIdx) {\n                 //   valRep.forEach(function (val, idx) {\n                 //     if ($.isEmptyObject(minMaxLims) || (idx >= minMaxLims.min && idx <= minMaxLims.max)) {\n                 //       curSampleInCol = colStartSampleNr + valIdx;\n                 //       curSampleInColTime = (1 / sR * curSampleInCol) + sT;\n                 //       x = (curSampleInColTime - startTimeVP) / (endTimeVP - startTimeVP) * canvas.width;\n                 //       y = canvas.height - ((val - minVal) / (maxVal - minVal) * canvas.height);\n                 //       // set color\n                 //       if ($.isEmptyObject(minMaxLims)) {\n                 //         ctx.strokeStyle = 'hsl(' + idx * (360 / valRep.length) + ',80%, 50%)';\n                 //         ctx.fillStyle = 'hsl(' + idx * (360 / valRep.length) + ',80%, 50%)';\n                 //       } else {\n                 //         var l = (minMaxLims.max - minMaxLims.min) + 1;\n                 //         ctx.strokeStyle = 'hsl(' + idx * (360 / l) + ',80%, 50%)';\n                 //         ctx.fillStyle = 'hsl(' + idx * (360 / l) + ',80%, 50%)';\n                 //       }\n                 //       // draw dot\n                 //       // if (val !== null) {\n                 //       //   ctx.beginPath();\n                 //       //   ctx.arc(x, y - 1, 2, 0, 2 * Math.PI, false);\n                 //       //   ctx.closePath();\n                 //       //   ctx.stroke();\n                 //       //   ctx.fill();\n                 //       // }\n                 //       if (valIdx !== 0) {\n                 //         curSampleInCol = colStartSampleNr + valIdx - 1;\n                 //         curSampleInColTime = (1 / sR * curSampleInCol) + sT;\n                 //         prevX = (curSampleInColTime - startTimeVP) / (endTimeVP - startTimeVP) * canvas.width;\n                 //         prevY = canvas.height - ((curSampleArrs[valIdx - 1][idx] - minVal) / (maxVal - minVal) * canvas.height);\n                 //         // mark selected\n                 //         if (viewState.curCorrectionToolNr - 1 === idx && trackName === 'SPEC' && assTrackName === 'FORMANTS') {\n                 //           ctx.strokeStyle = 'white';\n                 //           ctx.fillStyle = 'white';\n                 //         }\n                 //         // draw line\n                 //         if (val !== null && prevVal !== null) {\n                 //           ctx.beginPath();\n                 //           ctx.arc(x, y - 1, 2, 0, 2 * Math.PI, false);\n                 //           ctx.moveTo(prevX, prevY);\n                 //           ctx.lineTo(x, y);\n                 //           ctx.stroke();\n                 //           ctx.fill();\n                 //         }\n                 //         prevVal = val;\n                 //         //check if last sample\n                 //         if (valIdx === curSampleArrs.length - 1) {\n                 //           if (colEndSampleNr !== col.values.length - 1) {\n                 //             // lines to right boarder samples not in view\n                 //             var rightBorder = col.values[colEndSampleNr + 1];\n                 //             val = rightBorder[idx];\n                 //             curSampleInCol = colEndSampleNr + 1;\n                 //             curSampleInColTime = (1 / sR * curSampleInCol) + sT;\n                 //             var nextX = (curSampleInColTime - startTimeVP) / (endTimeVP - startTimeVP) * canvas.width;\n                 //             var nextY = canvas.height - ((val - minVal) / (maxVal - minVal) * canvas.height);\n                 //             // draw line\n                 //             ctx.beginPath();\n                 //             ctx.moveTo(x, y);\n                 //             ctx.lineTo(nextX, nextY);\n                 //             ctx.stroke();\n                 //             ctx.fill();\n                 //           }\n                 //         }\n                 //       } else {\n                 //         // lines to left boarder samples not in view\n                 //         if (colStartSampleNr !== 0) {\n                 //           var leftBorder = col.values[colStartSampleNr - 1];\n                 //           val = leftBorder[idx];\n                 //           curSampleInCol = colStartSampleNr - 1;\n                 //           curSampleInColTime = (1 / sR * curSampleInCol) + sT;\n                 //           prevX = (curSampleInColTime - startTimeVP) / (endTimeVP - startTimeVP) * canvas.width;\n                 //           prevY = canvas.height - ((val - minVal) / (maxVal - minVal) * canvas.height);\n                 //           // mark selected\n                 //           if (viewState.curCorrectionToolNr - 1 === idx && trackName === 'SPEC' && assTrackName === 'FORMANTS') {\n                 //             ctx.strokeStyle = 'white';\n                 //             ctx.fillStyle = 'white';\n                 //           }\n                 //           // draw line\n                 //           ctx.beginPath();\n                 //           ctx.moveTo(prevX, prevY);\n                 //           ctx.lineTo(x, y);\n                 //           ctx.stroke();\n                 //           ctx.fill();\n                 //         }\n                 //       }\n                 //     }\n                 //   });\n                 // });\n          } else {\n            ctx.strokeStyle = 'red';\n            var txt;\n            // var tW;\n            var horizontalText;\n            if (nrOfSamples <= 2) {\n              horizontalText = fontScaleService.getTextImageTwoLines(ctx, 'Zoom out to', 'see contour(s)', ConfigProviderService.vals.font.fontPxSize, ConfigProviderService.vals.font.fontType, ConfigProviderService.vals.colors.crossHairsColor);\n              // ctx.fillStyle = ConfigProviderService.vals.colors.levelColor;\n              // ctx.fillRect(0, 0, canvas.width, canvas.height);\n              ctx.drawImage(horizontalText, 0, 0, horizontalText.width, horizontalText.height, canvas.width / 2 - horizontalText.width / 2, 25, horizontalText.width, horizontalText.height);\n            } else {\n              txt = 'Zoom in to see contour(s)';\n              horizontalText = fontScaleService.getTextImageTwoLines(ctx, 'Zoom in to', 'see contour(s)', ConfigProviderService.vals.font.fontPxSize, ConfigProviderService.vals.font.fontType, ConfigProviderService.vals.colors.crossHairsColor);\n              // ctx.fillStyle = ConfigProviderService.vals.colors.levelColor;\n              // ctx.fillRect(0, 0, canvas.width, canvas.height);              \n              ctx.drawImage(horizontalText, 0, 0, horizontalText.width, horizontalText.height, canvas.width / 2 - horizontalText.width / 2, 25, horizontalText.width, horizontalText.height);\n            }\n          }\n        }  //function\n      }\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').service('Ssffparserservice', [\n  '$q',\n  function Ssffparserservice($q) {\n    // shared service object\n    var sServObj = {};\n    var worker = new Worker('scripts/workers/ssffParserWorker.js');\n    var defer;\n    // add event listener to worker to respond to messages\n    worker.addEventListener('message', function (e) {\n      if (e.data.status.type === 'SUCCESS') {\n        defer.resolve(e.data);\n      } else {\n        defer.reject(e.data);\n      }\n    }, false);\n    /**\n\t\t * parse array of ssff file using webworker\n\t\t * @param array of ssff files encoded as base64 stings\n\t\t * @returns promise\n\t\t */\n    sServObj.asyncParseSsffArr = function (ssffArray) {\n      defer = $q.defer();\n      worker.postMessage({\n        'cmd': 'parseArr',\n        'ssffArr': ssffArray\n      });\n      // Send data to our worker.\n      return defer.promise;\n    };\n    /**\n\t\t * convert jso to ssff binary file using webworker\n\t\t * @param java script object of ssff file (internal rep)\n\t\t * @returns promise\n\t\t */\n    sServObj.asyncJso2ssff = function (jso) {\n      defer = $q.defer();\n      worker.postMessage({\n        'cmd': 'jso2ssff',\n        'jso': JSON.stringify(jso)\n      });\n      // Send data to our worker.\n      return defer.promise;\n    };\n    return sServObj;\n  }\n]);\n'use strict';\nangular.module('emuwebApp').directive('mouseTrackAndCorrectionTool', [\n  'viewState',\n  'ConfigProviderService',\n  'Ssffdataservice',\n  'Drawhelperservice',\n  'HistoryService',\n  'Soundhandlerservice',\n  function (viewState, ConfigProviderService, Ssffdataservice, Drawhelperservice, HistoryService, Soundhandlerservice) {\n    return {\n      restrict: 'A',\n      scope: {},\n      link: function (scope, element, atts) {\n        var curMouseSample;\n        var dragStartSample;\n        var dragEndSample;\n        var canvas = element[0];\n        var ctx = canvas.getContext('2d');\n        // var elem = element[0];\n        var tr, col, sRaSt;\n        var trackName;\n        var bundleName;\n        /////////////////////////////\n        // observe attribute\n        atts.$observe('ssffTrackname', function (val) {\n          if (val) {\n            trackName = val;\n          }\n        });\n        // bundleName needed to reset tr, col, sRaSt on bundle change\n        atts.$observe('bundleName', function (val) {\n          if (val) {\n            bundleName = val;\n            if (!$.isEmptyObject(Ssffdataservice.data)) {\n              if (Ssffdataservice.data.length !== 0) {\n                tr = ConfigProviderService.getSsffTrackConfig('FORMANTS');\n                if (tr !== undefined) {\n                  col = Ssffdataservice.getColumnOfTrack(tr.name, tr.columnName);\n                  sRaSt = Ssffdataservice.getSampleRateAndStartTimeOfTrack(tr.name);\n                }\n              }\n            }\n          }\n        });\n        /////////////////////////////\n        // Bindings\n        element.bind('mousedown', function (event) {\n          dragStartSample = Math.round(Drawhelperservice.getX(event) * viewState.getPCMpp(event) + viewState.curViewPort.sS);\n          dragEndSample = dragStartSample;\n          viewState.select(dragStartSample, dragStartSample);\n          //Drawhelperservice.drawViewPortTimes(ctx, true);\n          switchMarkupContext(event);\n          scope.$apply();\n        });\n        element.bind('mousemove', function (event) {\n          var mbutton = 0;\n          if (event.buttons === undefined) {\n            mbutton = event.which;\n          } else {\n            mbutton = event.buttons;\n          }\n          // perform mouse tracking\n          var mouseX = Drawhelperservice.getX(event);\n          viewState.curMousePosSample = Math.round(viewState.curViewPort.sS + mouseX / element[0].width * (viewState.curViewPort.eS - viewState.curViewPort.sS));\n          switch (mbutton) {\n          case 0:\n            if (viewState.getPermission('labelAction')) {\n              switchMarkupContext(event);\n              if (!$.isEmptyObject(Ssffdataservice.data)) {\n                if (Ssffdataservice.data.length !== 0) {\n                  if (!viewState.getdragBarActive()) {\n                    if (viewState.curCorrectionToolNr !== undefined && !viewState.getdragBarActive() && !$.isEmptyObject(ConfigProviderService.getAssignment(trackName))) {\n                      // var col = Ssffdataservice.data[0].Columns[0];\n                      if (tr === undefined) {\n                        tr = ConfigProviderService.getSsffTrackConfig('FORMANTS');\n                        col = Ssffdataservice.getColumnOfTrack(tr.name, tr.columnName);\n                        sRaSt = Ssffdataservice.getSampleRateAndStartTimeOfTrack(tr.name);\n                      }\n                      var startTimeVP = viewState.getViewPortStartTime();\n                      var endTimeVP = viewState.getViewPortEndTime();\n                      var colStartSampleNr = Math.round(startTimeVP * sRaSt.sampleRate + sRaSt.startTime);\n                      var colEndSampleNr = Math.round(endTimeVP * sRaSt.sampleRate + sRaSt.startTime);\n                      var nrOfSamples = colEndSampleNr - colStartSampleNr;\n                      var curSampleArrs = col.values.slice(colStartSampleNr, colStartSampleNr + nrOfSamples);\n                      // console.log(colStartSampleNr)\n                      var curMouseTime = startTimeVP + Drawhelperservice.getX(event) / event.originalEvent.target.width * (endTimeVP - startTimeVP);\n                      var curMouseSample = Math.round((curMouseTime + sRaSt.startTime) * sRaSt.sampleRate) - 1;\n                      //-1 for in view correction\n                      var curMouseSampleTime = 1 / sRaSt.sampleRate * curMouseSample + sRaSt.startTime;\n                      if (curMouseSample - colStartSampleNr < 0 || curMouseSample - colStartSampleNr >= curSampleArrs.length) {\n                        console.log('early return');\n                        return;\n                      }\n                      viewState.curPreselColumnSample = curMouseSample - colStartSampleNr;\n                      var x = (curMouseSampleTime - startTimeVP) / (endTimeVP - startTimeVP) * canvas.width;\n                      var y = canvas.height - curSampleArrs[viewState.curPreselColumnSample][viewState.curCorrectionToolNr - 1] / (viewState.spectroSettings.rangeTo - viewState.spectroSettings.rangeFrom) * canvas.height;\n                      // draw sample\n                      ctx.strokeStyle = 'black';\n                      ctx.fillStyle = 'black';\n                      ctx.beginPath();\n                      ctx.arc(x, y - 1, 2, 0, 2 * Math.PI, false);\n                      ctx.closePath();\n                      ctx.stroke();\n                      ctx.fill();\n                      if (event.shiftKey) {\n                        var oldValue = angular.copy(curSampleArrs[viewState.curPreselColumnSample][viewState.curCorrectionToolNr - 1]);\n                        var newValue = viewState.spectroSettings.rangeTo - Drawhelperservice.getY(event) / event.originalEvent.target.height * viewState.spectroSettings.rangeTo;\n                        // SIC only using rangeTo\n                        curSampleArrs[viewState.curPreselColumnSample][viewState.curCorrectionToolNr - 1] = viewState.spectroSettings.rangeTo - Drawhelperservice.getY(event) / event.originalEvent.target.height * viewState.spectroSettings.rangeTo;\n                        var updateObj = HistoryService.updateCurChangeObj({\n                            'type': 'SSFF',\n                            'trackName': tr.name,\n                            'sampleBlockIdx': colStartSampleNr + viewState.curPreselColumnSample,\n                            'sampleIdx': viewState.curCorrectionToolNr - 1,\n                            'oldValue': oldValue,\n                            'newValue': newValue\n                          });\n                        //draw updateObj as overlay\n                        for (var key in updateObj) {\n                          curMouseSampleTime = 1 / sRaSt.sampleRate * updateObj[key].sampleBlockIdx + sRaSt.startTime;\n                          x = (curMouseSampleTime - startTimeVP) / (endTimeVP - startTimeVP) * canvas.width;\n                          y = canvas.height - updateObj[key].newValue / (viewState.spectroSettings.rangeTo - viewState.spectroSettings.rangeFrom) * canvas.height;\n                          // draw sample\n                          ctx.strokeStyle = 'red';\n                          ctx.fillStyle = 'red';\n                          // ctx.lineWidth = 4;\n                          ctx.beginPath();\n                          ctx.arc(x, y - 1, 2, 0, 2 * Math.PI, false);\n                          ctx.closePath();\n                          ctx.stroke();\n                          ctx.fill();\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n            break;\n          case 1:\n            if (!viewState.getdragBarActive()) {\n              setSelectDrag(event);\n            }\n            break;\n          }\n          scope.$apply();\n        });\n        element.bind('mouseup', function (event) {\n          if (!viewState.getdragBarActive()) {\n            setSelectDrag(event);\n            switchMarkupContext(event);\n          }\n        });\n        // on mouse leave clear markup canvas\n        element.bind('mouseleave', function (event) {\n          if (!$.isEmptyObject(Soundhandlerservice)) {\n            if (!$.isEmptyObject(Soundhandlerservice.wavJSO)) {\n              // if (!$.isEmptyObject(Ssffdataservice.data)) {\n              // if (Ssffdataservice.data.length !== 0) {\n              if (!viewState.getdragBarActive()) {\n                if (viewState.getPermission('labelAction')) {\n                  switchMarkupContext(event, false);\n                }\n              }  // }\n                 // }\n            }\n          }\n        });\n        //\n        ////////////////////\n        function switchMarkupContext(event, leave) {\n          ctx.clearRect(0, 0, canvas.width, canvas.height);\n          // draw current viewport selected\n          if (atts.ssffTrackname == 'OSCI') {\n            Drawhelperservice.drawViewPortTimes(ctx, true);\n            Drawhelperservice.drawCurViewPortSelected(ctx, true);\n          } else if (atts.ssffTrackname == 'SPEC') {\n            Drawhelperservice.drawCurViewPortSelected(ctx, false);\n            Drawhelperservice.drawMinMaxAndName(ctx, '', viewState.spectroSettings.rangeFrom, viewState.spectroSettings.rangeTo, 2);\n          } else {\n            var tr = ConfigProviderService.getSsffTrackConfig(atts.ssffTrackname);\n            var col = Ssffdataservice.getColumnOfTrack(tr.name, tr.columnName);\n            Drawhelperservice.drawCurViewPortSelected(ctx, false);\n            Drawhelperservice.drawMinMaxAndName(ctx, atts.ssffTrackname, col._minVal, col._maxVal, 2);\n          }\n          // draw crossHairs\n          if (leave !== false && ConfigProviderService.vals.restrictions.drawCrossHairs) {\n            Drawhelperservice.drawCrossHairs(ctx, event, viewState.spectroSettings.rangeFrom, viewState.spectroSettings.rangeTo, 'Hz', atts.ssffTrackname);\n          }\n          // draw moving boundary line if moving\n          Drawhelperservice.drawMovingBoundaryLine(ctx);\n        }\n        function setSelectDrag(event) {\n          curMouseSample = Math.round(Drawhelperservice.getX(event) * viewState.getPCMpp(event) + viewState.curViewPort.sS);\n          if (curMouseSample > dragStartSample) {\n            dragEndSample = curMouseSample;\n            viewState.select(dragStartSample, dragEndSample);\n          } else {\n            dragStartSample = curMouseSample;\n            viewState.select(dragStartSample, dragEndSample);\n          }\n          scope.$apply();\n        }\n      }\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').service('Drawhelperservice', [\n  'viewState',\n  'ConfigProviderService',\n  'Soundhandlerservice',\n  'fontScaleService',\n  'Ssffdataservice',\n  function Drawhelperservice(viewState, ConfigProviderService, Soundhandlerservice, fontScaleService, Ssffdataservice) {\n    //shared service object to be returned\n    var sServObj = {};\n    function getScale(ctx, str, scale) {\n      return ctx.measureText(str).width * scale;\n    }\n    function getScaleWidth(ctx, str1, str2, scaleX) {\n      if (str1.toString().length > str2.toString().length) {\n        return getScale(ctx, str1, scaleX);\n      } else {\n        return getScale(ctx, str2, scaleX);\n      }\n    }\n    /**\n\t\t * drawing method to draw single line between two\n\t\t * envelope points. Is used by drawOsciOnCanvas if\n\t\t * envelope drawing is done\n\t\t * @param index\n\t\t * @param value\n\t\t * @param max\n\t\t * @param prevPeak\n\t\t * @param canvas\n\t\t */\n    function drawFrame(viewState, index, value, max, prevPeak, canvas, config) {\n      var ctx = canvas.getContext('2d');\n      //cur\n      var w = 1;\n      var h = Math.round(value * (canvas.height / max));\n      //rel to max\n      var x = index * w;\n      var y = Math.round((canvas.height - h) / 2);\n      //prev\n      // var prevW = 1;\n      var prevH = Math.round(prevPeak * (canvas.height / max));\n      var prevX = (index - 1) * w;\n      var prevY = Math.round((canvas.height - prevH) / 2);\n      // if (posC >= x) {\n      // \tconsole.error('here...')\n      // \tctx.fillStyle = config.vals.colors.playProgressColor;\n      // \tctx.strokeStyle = config.vals.colors.playProgressColor;\n      // } else {\n      ctx.fillStyle = config.vals.colors.osciColor;\n      ctx.strokeStyle = config.vals.colors.osciColor;\n      // }\n      // ctx.beginPath();\n      ctx.moveTo(prevX, prevY);\n      ctx.lineTo(x, y);  // ctx.stroke();\n    }\n    sServObj.osciPeaks = [];\n    /**\n\t\t *\n\t\t */\n    sServObj.getX = function (e) {\n      return (e.offsetX || e.originalEvent.layerX) * (e.originalEvent.target.width / e.originalEvent.target.clientWidth);\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.getY = function (e) {\n      return (e.offsetY || e.originalEvent.layerY) * (e.originalEvent.target.height / e.originalEvent.target.clientHeight);\n    };\n    /**\n\t\t * get current peaks to be drawn\n\t\t * if drawing over sample exact -> samples\n\t\t * if multiple samples per pixel -> calculate envelope points\n\t\t */\n    sServObj.calculatePeaks = function (viewState, canvas, data) {\n      var samplePerPx = (viewState.curViewPort.eS + 1 - viewState.curViewPort.sS) / canvas.width;\n      // PCM Samples per new pixel + one to correct for subtraction\n      var numberOfChannels = 1;\n      // hardcode for now...\n      var peaks = [];\n      var minPeak = Infinity;\n      var maxPeak = -Infinity;\n      var relData;\n      if (samplePerPx <= 1) {\n        // check if view at start            \n        if (viewState.curViewPort.sS === 0) {\n          relData = data.subarray(viewState.curViewPort.sS, viewState.curViewPort.eS + 2);  // +2 to compensate for length\n        } else {\n          relData = data.subarray(viewState.curViewPort.sS - 1, viewState.curViewPort.eS + 2);  // +2 to compensate for length\n        }\n        minPeak = Math.min.apply(Math, relData);\n        maxPeak = Math.max.apply(Math, relData);\n        peaks = Array.prototype.slice.call(relData);\n      } else {\n        relData = data.subarray(viewState.curViewPort.sS, viewState.curViewPort.eS);\n        for (var curPxIdx = 0; curPxIdx < canvas.width; curPxIdx++) {\n          var avrVal = 0;\n          for (var c = 0; c < numberOfChannels; c++) {\n            var vals = relData.subarray(curPxIdx * samplePerPx, (curPxIdx + 1) * samplePerPx);\n            // var peak = -Infinity;\n            var sum = 0;\n            for (var p = 0, l = vals.length; p < l; p++) {\n              // if (vals[p] > peak) {\n              // \tpeak = vals[p];\n              // }\n              sum += vals[p];\n            }\n            avrVal += sum / vals.length;\n          }\n          peaks[curPxIdx] = avrVal;\n          if (avrVal > maxPeak) {\n            maxPeak = avrVal;\n          }\n        }\n      }\n      //else\n      return {\n        'peaks': peaks,\n        'minPeak': minPeak,\n        'maxPeak': maxPeak,\n        'samplePerPx': samplePerPx\n      };\n    };\n    /**\n\t\t * @param cps color provider service\n\t\t */\n    sServObj.freshRedrawDrawOsciOnCanvas = function (viewState, canvas, allPeakVals, buffer, config) {\n      var ctx = canvas.getContext('2d');\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      //set font\n      // ctx.font = (this.params.fontPxSize + \"px\" + \" \" + this.params.fontType);\n      if (allPeakVals.peaks && allPeakVals.samplePerPx >= 1) {\n        ctx.beginPath();\n        allPeakVals.peaks.forEach(function (peak, index) {\n          if (index !== 0) {\n            drawFrame(viewState, index, peak, allPeakVals.maxPeak, allPeakVals.peaks[index - 1], canvas, config);\n          }\n        });\n        ctx.stroke();\n      } else if (allPeakVals.samplePerPx < 1) {\n        // console.log(\"at 0 over sample exact\")\n        var hDbS = 1 / allPeakVals.samplePerPx / 2;\n        // half distance between samples\n        var sNr = viewState.curViewPort.sS;\n        // over sample exact\n        ctx.strokeStyle = config.vals.colors.osciColor;\n        ctx.fillStyle = config.vals.colors.osciColor;\n        // ctx.beginPath();\n        var i;\n        if (viewState.curViewPort.sS === 0) {\n          ctx.moveTo(hDbS, (allPeakVals.peaks[0] - allPeakVals.minPeak) / (allPeakVals.maxPeak - allPeakVals.minPeak) * canvas.height);\n          for (i = 0; i < allPeakVals.peaks.length; i++) {\n            ctx.lineTo(i / allPeakVals.samplePerPx + hDbS, (allPeakVals.peaks[i] - allPeakVals.minPeak) / (allPeakVals.maxPeak - allPeakVals.minPeak) * canvas.height);\n          }\n          ctx.stroke();\n          // draw sample dots\n          for (i = 0; i < allPeakVals.peaks.length; i++) {\n            ctx.beginPath();\n            ctx.arc(i / allPeakVals.samplePerPx + hDbS, (allPeakVals.peaks[i] - allPeakVals.minPeak) / (allPeakVals.maxPeak - allPeakVals.minPeak) * canvas.height - 3, 4, 0, 2 * Math.PI, false);\n            ctx.stroke();\n            ctx.fill();\n            if (config.vals.restrictions.drawSampleNrs) {\n              ctx.strokeText(sNr, i / allPeakVals.samplePerPx + hDbS, (allPeakVals.peaks[i] - allPeakVals.minPeak) / (allPeakVals.maxPeak - allPeakVals.minPeak) * canvas.height - 10);\n              sNr = sNr + 1;\n            }\n          }\n        } else {\n          //draw lines\n          ctx.beginPath();\n          ctx.moveTo(-hDbS, canvas.height - (allPeakVals.peaks[0] - allPeakVals.minPeak) / (allPeakVals.maxPeak - allPeakVals.minPeak) * canvas.height);\n          for (i = 1; i <= allPeakVals.peaks.length; i++) {\n            ctx.lineTo(i / allPeakVals.samplePerPx - hDbS, canvas.height - ((allPeakVals.peaks[i] - allPeakVals.minPeak) / (allPeakVals.maxPeak - allPeakVals.minPeak) * canvas.height + 3));\n          }\n          ctx.stroke();\n          // draw sample dots\n          for (i = 1; i <= allPeakVals.peaks.length; i++) {\n            ctx.beginPath();\n            ctx.arc(i / allPeakVals.samplePerPx - hDbS, canvas.height - (allPeakVals.peaks[i] - allPeakVals.minPeak) / (allPeakVals.maxPeak - allPeakVals.minPeak) * canvas.height - 3, 4, 0, 2 * Math.PI, false);\n            ctx.stroke();\n            ctx.fill();\n            if (config.vals.restrictions.drawSampleNrs) {\n              ctx.fillText(sNr, i / allPeakVals.samplePerPx - hDbS, canvas.height - (allPeakVals.peaks[i] - allPeakVals.minPeak) / (allPeakVals.maxPeak - allPeakVals.minPeak) * canvas.height - 10);\n              sNr = sNr + 1;\n            }\n          }\n        }\n      }\n      if (config.vals.restrictions.drawZeroLine) {\n        // draw zero line\n        ctx.strokeStyle = config.vals.colors.zeroLineColor;\n        ctx.fillStyle = config.vals.colors.zeroLineColor;\n        // see if Chrome ->dashed line\n        if (navigator.vendor === 'Google Inc.') {\n          ctx.setLineDash([2]);\n        }\n        if (allPeakVals.samplePerPx >= 1) {\n          ctx.beginPath();\n          ctx.moveTo(0, canvas.height / 2);\n          ctx.lineTo(canvas.width, canvas.height / 2);\n          ctx.stroke();\n          ctx.fillText('0', 5, canvas.height / 2 - 5, canvas.width);\n        } else {\n          var zeroLineY = canvas.height - (0 - allPeakVals.minPeak) / (allPeakVals.maxPeak - allPeakVals.minPeak) * canvas.height;\n          ctx.beginPath();\n          ctx.moveTo(0, zeroLineY);\n          ctx.lineTo(canvas.width, zeroLineY);\n          ctx.stroke();\n          ctx.fill();\n          ctx.fillText('0', 5, canvas.height - (0 - allPeakVals.minPeak) / (allPeakVals.maxPeak - allPeakVals.minPeak) * canvas.height - 5, canvas.width);\n        }\n        // see if Chrome ->dashed line\n        if (navigator.vendor === 'Google Inc.') {\n          ctx.setLineDash([0]);\n        }\n      }\n    };\n    /**\n\t\t * drawing method to drawMovingBoundaryLine\n\t\t */\n    sServObj.drawMovingBoundaryLine = function (ctx) {\n      var xOffset, sDist;\n      sDist = viewState.getSampleDist(ctx.canvas.width);\n      // calc. offset dependant on type of level of mousemove  -> default is sample exact\n      if (viewState.getcurMouseLevelType() === 'SEGMENT') {\n        xOffset = 0;\n      } else {\n        xOffset = sDist / 2;\n      }\n      if (viewState.movingBoundary) {\n        ctx.fillStyle = ConfigProviderService.vals.colors.selectedBoundaryColor;\n        var p = Math.round(viewState.getPos(ctx.canvas.width, viewState.movingBoundarySample));\n        ctx.fillRect(p + xOffset, 0, 1, ctx.canvas.height);\n      }\n    };\n    /**\n\t\t * drawing method to drawCurViewPortSelected\n\t\t */\n    sServObj.drawCurViewPortSelected = function (ctx, drawTimeAndSamples) {\n      var xOffset, sDist, space, horizontalText, scaleX;\n      sDist = viewState.getSampleDist(ctx.canvas.width);\n      // calc. offset dependant on type of level of mousemove  -> default is sample exact\n      if (viewState.getcurMouseLevelType() === 'seg') {\n        xOffset = 0;\n      } else {\n        xOffset = sDist / 2;\n      }\n      var posS = viewState.getPos(ctx.canvas.width, viewState.curViewPort.selectS);\n      var posE = viewState.getPos(ctx.canvas.width, viewState.curViewPort.selectE);\n      if (posS === posE) {\n        ctx.fillStyle = ConfigProviderService.vals.colors.selectedBorderColor;\n        ctx.fillRect(posS + xOffset, 0, 2, ctx.canvas.height);\n        if (drawTimeAndSamples) {\n          if (viewState.curViewPort.sS !== viewState.curViewPort.selectS && viewState.curViewPort.selectS !== -1) {\n            scaleX = ctx.canvas.width / ctx.canvas.offsetWidth;\n            space = getScaleWidth(ctx, viewState.curViewPort.selectS, viewState.round(viewState.curViewPort.selectS / Soundhandlerservice.wavJSO.SampleRate, 6), scaleX);\n            horizontalText = fontScaleService.getTextImageTwoLines(ctx, viewState.curViewPort.selectS, viewState.round(viewState.curViewPort.selectS / Soundhandlerservice.wavJSO.SampleRate, 6), ConfigProviderService.vals.font.fontPxSize, ConfigProviderService.vals.font.fontType, ConfigProviderService.vals.colors.labelColor, true);\n            ctx.drawImage(horizontalText, 0, 0, horizontalText.width, horizontalText.height, posE + 5, 0, horizontalText.width, horizontalText.height);\n          }\n        }\n      } else {\n        ctx.fillStyle = ConfigProviderService.vals.colors.selectedAreaColor;\n        ctx.fillRect(posS, 0, posE - posS, ctx.canvas.height);\n        ctx.strokeStyle = ConfigProviderService.vals.colors.selectedBorderColor;\n        ctx.beginPath();\n        ctx.moveTo(posS, 0);\n        ctx.lineTo(posS, ctx.canvas.height);\n        ctx.moveTo(posE, 0);\n        ctx.lineTo(posE, ctx.canvas.height);\n        ctx.closePath();\n        ctx.stroke();\n        if (drawTimeAndSamples) {\n          // start values\n          scaleX = ctx.canvas.width / ctx.canvas.offsetWidth;\n          space = getScaleWidth(ctx, viewState.curViewPort.selectS, viewState.round(viewState.curViewPort.selectS / Soundhandlerservice.wavJSO.SampleRate, 6), scaleX);\n          horizontalText = fontScaleService.getTextImageTwoLines(ctx, viewState.curViewPort.selectS, viewState.round(viewState.curViewPort.selectS / Soundhandlerservice.wavJSO.SampleRate, 6), ConfigProviderService.vals.font.fontPxSize, ConfigProviderService.vals.font.fontType, ConfigProviderService.vals.colors.labelColor, false);\n          ctx.drawImage(horizontalText, 0, 0, horizontalText.width, horizontalText.height, posS - space - 5, 0, horizontalText.width, horizontalText.height);\n          // end values\n          horizontalText = fontScaleService.getTextImageTwoLines(ctx, viewState.curViewPort.selectE, viewState.round(viewState.curViewPort.selectE / Soundhandlerservice.wavJSO.SampleRate, 6), ConfigProviderService.vals.font.fontPxSize, ConfigProviderService.vals.font.fontType, ConfigProviderService.vals.colors.labelColor, true);\n          ctx.drawImage(horizontalText, 0, 0, horizontalText.width, horizontalText.height, posE + 5, 0, horizontalText.width, horizontalText.height);\n          // dur values\n          // check if space\n          space = getScale(ctx, viewState.round((viewState.curViewPort.selectE - viewState.curViewPort.selectS) / Soundhandlerservice.wavJSO.SampleRate, 6), scaleX);\n          if (posE - posS > space) {\n            var str1 = viewState.curViewPort.selectE - viewState.curViewPort.selectS;\n            var str2 = viewState.round((viewState.curViewPort.selectE - viewState.curViewPort.selectS) / Soundhandlerservice.wavJSO.SampleRate, 6);\n            space = getScaleWidth(ctx, str1, str2, scaleX);\n            horizontalText = fontScaleService.getTextImageTwoLines(ctx, str1, str2, ConfigProviderService.vals.font.fontPxSize, ConfigProviderService.vals.font.fontType, ConfigProviderService.vals.colors.labelColor, false);\n            ctx.drawImage(horizontalText, 0, 0, horizontalText.width, horizontalText.height, posS + (posE - posS) / 2 - space / 2, 0, horizontalText.width, horizontalText.height);\n          }\n        }\n      }\n    };\n    /**\n\t\t * drawing method to drawCrossHairs\n\t\t */\n    sServObj.drawCrossHairs = function (ctx, mouseEvt, min, max, unit, trackname) {\n      if (ConfigProviderService.vals.restrictions.drawCrossHairs) {\n        // ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n        ctx.strokeStyle = ConfigProviderService.vals.colors.crossHairsColor;\n        ctx.fillStyle = ConfigProviderService.vals.colors.crossHairsColor;\n        // see if Chrome -> dashed line\n        if (navigator.vendor === 'Google Inc.') {\n          ctx.setLineDash([2]);\n        }\n        // draw lines\n        var mouseX = sServObj.getX(mouseEvt);\n        var mouseY = sServObj.getY(mouseEvt);\n        if (navigator.vendor === 'Google Inc.') {\n          ctx.setLineDash([0]);\n        }\n        // draw frequency / sample / time\n        ctx.font = ConfigProviderService.vals.font.fontPxSize + 'px' + ' ' + ConfigProviderService.vals.font.fontType;\n        var mouseFreq = viewState.round(max - mouseY / ctx.canvas.height * max, 2);\n        // SIC only uses max\n        var tW = ctx.measureText(mouseFreq + unit).width;\n        var s1 = Math.round(viewState.curViewPort.sS + mouseX / ctx.canvas.width * (viewState.curViewPort.eS - viewState.curViewPort.sS));\n        var s2 = viewState.round(viewState.getViewPortStartTime() + mouseX / ctx.canvas.width * (viewState.getViewPortEndTime() - viewState.getViewPortStartTime()), 6);\n        var horizontalText = fontScaleService.getTextImage(ctx, mouseFreq + unit, ConfigProviderService.vals.font.fontPxSize, ConfigProviderService.vals.font.fontType, ConfigProviderService.vals.colors.crossHairsColor, true);\n        var verticalText = fontScaleService.getTextImageTwoLines(ctx, s1, s2, ConfigProviderService.vals.font.fontPxSize, ConfigProviderService.vals.font.fontType, ConfigProviderService.vals.colors.crossHairsColor, true);\n        if (max !== undefined || min !== undefined) {\n          if (trackname == 'OSCI') {\n            // no horizontal values\t\t\n            ctx.beginPath();\n            //ctx.moveTo(0, mouseY);\n            //ctx.lineTo(5, mouseY + 5);\n            //ctx.moveTo(0, mouseY);\n            //ctx.lineTo(ctx.canvas.width, mouseY);\n            //ctx.lineTo(ctx.canvas.width - 5, mouseY + 5);\n            ctx.moveTo(mouseX, 0);\n            ctx.lineTo(mouseX, ctx.canvas.height);\n            ctx.stroke();\n          } else if (trackname == 'SPEC') {\n            ctx.drawImage(horizontalText, 0, 0, horizontalText.width, horizontalText.height, 5, mouseY, horizontalText.width, horizontalText.height);\n            ctx.drawImage(horizontalText, 0, 0, horizontalText.width, horizontalText.height, ctx.canvas.width - 5 - tW * (ctx.canvas.width / ctx.canvas.offsetWidth), mouseY, horizontalText.width, horizontalText.height);\n            ctx.beginPath();\n            ctx.moveTo(0, mouseY);\n            ctx.lineTo(5, mouseY + 5);\n            ctx.moveTo(0, mouseY);\n            ctx.lineTo(ctx.canvas.width, mouseY);\n            ctx.lineTo(ctx.canvas.width - 5, mouseY + 5);\n            ctx.moveTo(mouseX, 0);\n            ctx.lineTo(mouseX, ctx.canvas.height);\n            ctx.stroke();\n          } else {\n            // draw min max an name of track\n            var tr = ConfigProviderService.getSsffTrackConfig(trackname);\n            var col = Ssffdataservice.getColumnOfTrack(tr.name, tr.columnName);\n            mouseFreq = viewState.round(col._maxVal - mouseY / ctx.canvas.height * col._maxVal, 2);\n            horizontalText = fontScaleService.getTextImage(ctx, mouseFreq, ConfigProviderService.vals.font.fontPxSize, ConfigProviderService.vals.font.fontType, ConfigProviderService.vals.colors.crossHairsColor, true);\n            ctx.drawImage(horizontalText, 0, 0, horizontalText.width, horizontalText.height, 5, mouseY, horizontalText.width, horizontalText.height);\n            ctx.drawImage(horizontalText, 0, 0, horizontalText.width, horizontalText.height, ctx.canvas.width - 5 - tW * (ctx.canvas.width / ctx.canvas.offsetWidth), mouseY, horizontalText.width, horizontalText.height);\n            ctx.beginPath();\n            ctx.moveTo(0, mouseY);\n            ctx.lineTo(5, mouseY + 5);\n            ctx.moveTo(0, mouseY);\n            ctx.lineTo(ctx.canvas.width, mouseY);\n            ctx.lineTo(ctx.canvas.width - 5, mouseY + 5);\n            ctx.moveTo(mouseX, 0);\n            ctx.lineTo(mouseX, ctx.canvas.height);\n            ctx.stroke();\n          }\n        }\n        ctx.drawImage(verticalText, 0, 0, verticalText.width, verticalText.height, mouseX + 5, 0, verticalText.width, verticalText.height);\n      }\n    };\n    /**\n\t\t * drawing method to drawMinMaxAndName\n\t\t * @param ctx is context to be drawn on\n\t\t * @param trackName name of track to be drawn in the center of the canvas (left aligned)\n\t\t * @param min value to be drawn at the bottom of the canvas (left aligned)\n\t\t * @param max value to be drawn at the top of the canvas (left aligned)\n\t\t * @param round value to round to for min/max values (== digits after comma)\n\t\t */\n    sServObj.drawMinMaxAndName = function (ctx, trackName, min, max, round) {\n      // ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n      ctx.strokeStyle = ConfigProviderService.vals.colors.labelColor;\n      ctx.fillStyle = ConfigProviderService.vals.colors.labelColor;\n      // var scaleX = ctx.canvas.width / ctx.canvas.offsetWidth;\n      var scaleY = ctx.canvas.height / ctx.canvas.offsetHeight;\n      var smallFontSize = ConfigProviderService.vals.font.fontPxSize * 3 / 4;\n      var th = smallFontSize * scaleY;\n      // draw corner pointers\n      ctx.beginPath();\n      ctx.moveTo(0, 0);\n      ctx.lineTo(5, 5);\n      ctx.moveTo(0, ctx.canvas.height);\n      ctx.lineTo(5, ctx.canvas.height - 5);\n      ctx.stroke();\n      ctx.closePath();\n      // draw ssffTrackName\n      if (trackName !== '') {\n        ctx.font = ConfigProviderService.vals.font.fontPxSize + 'px' + ' ' + ConfigProviderService.vals.font.fontType;\n        var trackNameImg = fontScaleService.getTextImage(ctx, trackName, ConfigProviderService.vals.font.fontPxSize, ConfigProviderService.vals.font.fontType, ConfigProviderService.vals.colors.labelColor, true);\n        ctx.drawImage(trackNameImg, 0, ctx.canvas.height / 2 - ConfigProviderService.vals.font.fontPxSize * scaleY / 2);\n      }\n      // draw min/max vals\n      if (max !== undefined) {\n        var labelTxtImg = fontScaleService.getTextImage(ctx, 'max: ' + viewState.round(max, round), smallFontSize, ConfigProviderService.vals.font.fontType, ConfigProviderService.vals.colors.endBoundaryColor);\n        ctx.drawImage(labelTxtImg, 5, 5, labelTxtImg.width, labelTxtImg.height);\n      }\n      // draw min/max vals\n      if (min !== undefined) {\n        labelTxtImg = fontScaleService.getTextImage(ctx, 'min: ' + viewState.round(min, round), smallFontSize, ConfigProviderService.vals.font.fontType, ConfigProviderService.vals.colors.endBoundaryColor);\n        ctx.drawImage(labelTxtImg, 5, ctx.canvas.height - th - 5, labelTxtImg.width, labelTxtImg.height);\n      }\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.drawViewPortTimes = function (ctx) {\n      ctx.strokeStyle = ConfigProviderService.vals.colors.labelColor;\n      ctx.fillStyle = ConfigProviderService.vals.colors.labelColor;\n      ctx.font = ConfigProviderService.vals.font.fontPxSize + 'px' + ' ' + ConfigProviderService.vals.font.fontType;\n      // lines to corners\n      ctx.beginPath();\n      ctx.moveTo(0, 0);\n      ctx.lineTo(5, 5);\n      ctx.moveTo(ctx.canvas.width, 0);\n      ctx.lineTo(ctx.canvas.width - 5, 5);\n      ctx.closePath();\n      ctx.stroke();\n      var scaleX = ctx.canvas.width / ctx.canvas.offsetWidth;\n      var scaleY = ctx.canvas.height / ctx.canvas.offsetHeight;\n      var sTime;\n      var eTime;\n      var horizontalText;\n      var space;\n      if (viewState.curViewPort) {\n        //draw time and sample nr\n        sTime = viewState.round(viewState.curViewPort.sS / Soundhandlerservice.wavJSO.SampleRate, 6);\n        eTime = viewState.round(viewState.curViewPort.eS / Soundhandlerservice.wavJSO.SampleRate, 6);\n        horizontalText = fontScaleService.getTextImageTwoLines(ctx, viewState.curViewPort.sS, sTime, ConfigProviderService.vals.font.fontPxSize, ConfigProviderService.vals.font.fontType, ConfigProviderService.vals.colors.labelColor, true);\n        // ctx.drawImage(horizontalText, 0, 0, horizontalText.width, horizontalText.height, 0, 0, horizontalText.width, horizontalText.height);\n        ctx.drawImage(horizontalText, 5, 5);\n        space = getScaleWidth(ctx, viewState.curViewPort.eS, eTime, scaleX);\n        horizontalText = fontScaleService.getTextImageTwoLines(ctx, viewState.curViewPort.eS, eTime, ConfigProviderService.vals.font.fontPxSize, ConfigProviderService.vals.font.fontType, ConfigProviderService.vals.colors.labelColor, false);\n        ctx.drawImage(horizontalText, 0, 0, horizontalText.width, horizontalText.height, ctx.canvas.width - space - 5, 0, horizontalText.width, horizontalText.height);  //draw dot at edge of image\n                                                                                                                                                                         // var spaceW = getScaleWidth(ctx, viewState.curViewPort.eS, eTime, scaleX);\n                                                                                                                                                                         // var startPoint = (Math.PI / 180) * 0;\n                                                                                                                                                                         // var endPoint = (Math.PI / 180) * 360;\n                                                                                                                                                                         // ctx.beginPath();\n                                                                                                                                                                         // ctx.arc(spaceW, config.vals.font.fontPxSize * 2 * scaleY, 10, startPoint, endPoint, true);\n                                                                                                                                                                         // ctx.fill();\n                                                                                                                                                                         // ctx.closePath();\n      }\n    };\n    return sServObj;\n  }\n]);\n'use strict';\nangular.module('emuwebApp').service('HistoryService', [\n  '$log',\n  'Ssffdataservice',\n  'LevelService',\n  'ConfigProviderService',\n  'viewState',\n  'Soundhandlerservice',\n  function HistoryService($log, Ssffdataservice, LevelService, ConfigProviderService, viewState, Soundhandlerservice) {\n    // shared service object\n    var sServObj = {};\n    sServObj.movesAwayFromLastSave = 0;\n    //////////////////////////////////////////\n    // new dual stack implementation\n    //private\n    var undoStack = [];\n    var redoStack = [];\n    var curChangeObj = {};\n    // applyChanges should be called by undo redo functions\n    function applyChange(changeObj, applyOldVal) {\n      Object.keys(changeObj).forEach(function (key) {\n        var cur = changeObj[key];\n        if (cur.type === 'SSFF') {\n          if (applyOldVal) {\n            var tr = ConfigProviderService.getSsffTrackConfig(cur.trackName);\n            var col = Ssffdataservice.getColumnOfTrack(tr.name, tr.columnName);\n            col.values[cur.sampleBlockIdx][cur.sampleIdx] = cur.oldValue;\n          } else {\n            var tr = ConfigProviderService.getSsffTrackConfig(cur.trackName);\n            var col = Ssffdataservice.getColumnOfTrack(tr.name, tr.columnName);\n            col.values[cur.sampleBlockIdx][cur.sampleIdx] = cur.newValue;\n          }\n        } else if (cur.type === 'ESPS') {\n          switch (cur.action) {\n          case 'moveBoundary':\n            if (applyOldVal) {\n              LevelService.moveBoundary(cur.name, cur.id, -cur.movedBy, cur.position);\n            } else {\n              LevelService.moveBoundary(cur.name, cur.id, cur.movedBy, cur.position);\n            }\n            break;\n          case 'moveSegment':\n            if (applyOldVal) {\n              LevelService.moveSegment(cur.name, cur.id, cur.length, -cur.movedBy);\n            } else {\n              LevelService.moveSegment(cur.name, cur.id, cur.length, cur.movedBy);\n            }\n            break;\n          case 'movePoint':\n            if (applyOldVal) {\n              LevelService.movePoint(cur.name, cur.id, -cur.movedBy);\n            } else {\n              LevelService.movePoint(cur.name, cur.id, cur.movedBy);\n            }\n            break;\n          case 'renameLabel':\n            if (applyOldVal) {\n              LevelService.renameLabel(cur.name, cur.id, cur.oldValue);\n            } else {\n              LevelService.renameLabel(cur.name, cur.id, cur.newValue);\n            }\n            break;\n          case 'renameLevel':\n            if (applyOldVal) {\n              LevelService.renameLevel(cur.newname, cur.name, cur.curPerspectiveIdx);\n            } else {\n              LevelService.renameLevel(cur.name, cur.newname, cur.curPerspectiveIdx);\n            }\n            break;\n          case 'deleteLevel':\n            if (applyOldVal) {\n              LevelService.addLevel(cur.level, cur.id, cur.curPerspectiveIdx);\n            } else {\n              LevelService.deleteLevel(cur.id, cur.curPerspectiveIdx);\n            }\n            break;\n          case 'addLevel':\n            if (applyOldVal) {\n              LevelService.deleteLevel(cur.id, cur.curPerspectiveIdx);\n            } else {\n              LevelService.addLevel(cur.level, cur.id, cur.curPerspectiveIdx);\n            }\n            break;\n          case 'deleteBoundary':\n            if (applyOldVal) {\n              LevelService.deleteBoundaryInvers(cur.name, cur.id, cur.deletedSegment);\n            } else {\n              LevelService.deleteBoundary(cur.name, cur.id);\n            }\n            break;\n          case 'deleteSegments':\n            if (applyOldVal) {\n              LevelService.deleteSegmentsInvers(cur.name, cur.id, cur.length, cur.deletedSegment);\n            } else {\n              LevelService.deleteSegments(cur.name, cur.id, cur.length);\n            }\n            break;\n          case 'insertSegments':\n            if (applyOldVal) {\n              LevelService.insertSegmentInvers(cur.name, cur.start, cur.end, cur.segName);\n            } else {\n              LevelService.insertSegment(cur.name, cur.start, cur.end, cur.segName, cur.ids);\n            }\n            break;\n          case 'insertPoint':\n            if (applyOldVal) {\n              LevelService.deletePoint(cur.name, cur.id);\n            } else {\n              LevelService.insertPoint(cur.name, cur.start, cur.pointName, cur.id);\n            }\n            break;\n          case 'deletePoint':\n            if (applyOldVal) {\n              LevelService.insertPoint(cur.name, cur.start, cur.pointName, cur.id);\n            } else {\n              LevelService.deletePoint(cur.name, cur.id);\n            }\n            break;\n          case 'expandSegments':\n            if (applyOldVal) {\n              LevelService.expandSegment(cur.rightSide, cur.item, cur.levelName, -cur.changeTime);\n            } else {\n              LevelService.expandSegment(cur.rightSide, cur.item, cur.levelName, cur.changeTime);\n            }\n            break;\n          }\n        }\n      });\n    }\n    /////////////////////////////////////\n    // public API\n    /**\n\t\t *\n\t\t */\n    sServObj.updateCurChangeObj = function (dataObj) {\n      // console.log(dataObj);\n      var dataKey;\n      if (dataObj.type === 'SSFF') {\n        dataKey = String(dataObj.type + '#' + dataObj.trackName) + '#' + String(dataObj.sampleBlockIdx) + '#' + String(dataObj.sampleIdx);\n        console.log(dataKey);\n        // update curChangeObj\n        if (!curChangeObj[dataKey]) {\n          curChangeObj[dataKey] = dataObj;\n        } else {\n          // console.log('here' + curChangeObj[dataKey].oldValue);\n          // keep init old value\n          dataObj.oldValue = curChangeObj[dataKey].oldValue;\n          curChangeObj[dataKey] = dataObj;\n        }\n      } else if (dataObj.type === 'ESPS') {\n        switch (dataObj.action) {\n        case 'moveBoundary':\n        case 'movePoint':\n        case 'moveSegment':\n        case 'insertPoint':\n          dataKey = String(dataObj.type + '#' + dataObj.action + '#' + dataObj.name + '#' + dataObj.id);\n          if (!curChangeObj[dataKey]) {\n            curChangeObj[dataKey] = dataObj;\n          } else {\n            dataObj.movedBy += curChangeObj[dataKey].movedBy;\n            curChangeObj[dataKey] = dataObj;\n          }\n          break;\n        }\n      }\n      return curChangeObj;\n    };\n    // addCurChangeObjToUndoStack\n    sServObj.addCurChangeObjToUndoStack = function () {\n      // empty redo stack\n      redoStack = [];\n      // add to undoStack\n      if (!$.isEmptyObject(curChangeObj)) {\n        undoStack.push(curChangeObj);\n        sServObj.movesAwayFromLastSave += 1;\n      }\n      $log.info(curChangeObj);\n      // reset curChangeObj\n      curChangeObj = {};\n    };\n    // addCurChangeObjToUndoStack\n    sServObj.addObjToUndoStack = function (obj) {\n      // empty redo stack\n      redoStack = [];\n      var tmpObj = {};\n      var dataKey = String(obj.type + '#' + obj.action + '#' + obj.name + '#' + obj.id);\n      tmpObj[dataKey] = angular.copy(obj);\n      // add to undoStack\n      if (!$.isEmptyObject(tmpObj)) {\n        undoStack.push(tmpObj);\n        sServObj.movesAwayFromLastSave += 1;\n      }\n      // reset curChangeObj\n      curChangeObj = {};\n    };\n    // undo\n    sServObj.undo = function () {\n      if (undoStack.length > 0) {\n        // add to redo stack\n        var oldChangeObj = angular.copy(undoStack[undoStack.length - 1]);\n        redoStack.push(oldChangeObj);\n        applyChange(oldChangeObj, true);\n        // remove old \n        undoStack.pop();\n        sServObj.movesAwayFromLastSave -= 1;\n      }\n    };\n    // redo\n    sServObj.redo = function () {\n      if (redoStack.length > 0) {\n        var oldChangeObj = angular.copy(redoStack[redoStack.length - 1]);\n        undoStack.push(oldChangeObj);\n        applyChange(oldChangeObj, false);\n        redoStack.pop();\n        sServObj.movesAwayFromLastSave += 1;\n      }\n    };\n    // getNrOfPossibleUndos\n    sServObj.getNrOfPossibleUndos = function () {\n      return undoStack.length;\n    };\n    // return current History Stack\n    sServObj.getCurrentStack = function () {\n      return {\n        'undo': undoStack,\n        'redo': redoStack\n      };\n    };\n    // resetToInitState\n    sServObj.resetToInitState = function () {\n      undoStack = [];\n      redoStack = [];\n      curChangeObj = {};\n      sServObj.movesAwayFromLastSave = 0;\n    };\n    return sServObj;\n  }\n]);\n'use strict';\nangular.module('emuwebApp').service('Wavparserservice', [\n  '$q',\n  function Wavparserservice($q) {\n    // shared service object\n    var sServObj = {};\n    var worker = new Worker('scripts/workers/wavParserWorker.js');\n    var defer;\n    // add event listener to worker to respond to messages\n    worker.addEventListener('message', function (e) {\n      if (e.data.status.type === 'SUCCESS') {\n        defer.resolve(e.data.data);\n      } else {\n        defer.reject(e.data);\n      }\n    }, false);\n    /**\n\t\t * parse buffer containing wav file using webworker\n\t\t * @param buf\n\t\t * @returns promise\n\t\t */\n    sServObj.parseWavArrBuf = function (buf) {\n      defer = $q.defer();\n      worker.postMessage({\n        'cmd': 'parseBuf',\n        'buffer': buf\n      }, [buf]);\n      // Send data to our worker.\n      return defer.promise;\n    };\n    return sServObj;\n  }\n]);\n'use strict';\nangular.module('emuwebApp').service('Textgridparserservice', [\n  '$q',\n  'LevelService',\n  'viewState',\n  'Soundhandlerservice',\n  function Textgridparserservice($q, LevelService, viewState, Soundhandlerservice) {\n    // shared service object\n    var sServObj = {};\n    var worker = new Worker('scripts/workers/textGridParserWorker.js');\n    var defer;\n    // add event listener to worker to respond to messages\n    worker.addEventListener('message', function (e) {\n      if (e.data.status.type === 'SUCCESS') {\n        defer.resolve(e.data);\n      } else {\n        defer.reject(e.data);\n      }\n    }, false);\n    /**\n\t\t * parse level data to Textgrid File\n\t\t * @param level data\n\t\t * @returns promise\n\t\t */\n    sServObj.asyncToTextGrid = function () {\n      defer = $q.defer();\n      worker.postMessage({\n        'cmd': 'toTextGrid',\n        'levels': LevelService.getData().levels,\n        'sampleRate': Soundhandlerservice.wavJSO.SampleRate,\n        'buffLength': Soundhandlerservice.wavJSO.Data.length\n      });\n      // Send data to our worker.\n      return defer.promise;\n    };\n    /**\n\t\t * parse array of ssff file using webworker\n\t\t * @param array of ssff files encoded as base64 stings\n\t\t * @returns promise\n\t\t */\n    sServObj.asyncParseTextGrid = function (textGrid, annotates, name) {\n      defer = $q.defer();\n      worker.postMessage({\n        'cmd': 'parseTG',\n        'textGrid': textGrid,\n        'sampleRate': Soundhandlerservice.wavJSO.SampleRate,\n        'annotates': annotates,\n        'name': name\n      });\n      // Send data to our worker.\n      return defer.promise;\n    };\n    return sServObj;\n  }\n]);\n'use strict';\nangular.module('emuwebApp').factory('uuid', function () {\n  // shared service object\n  var sServObj = {};\n  function rand(s) {\n    var p = (Math.random().toString(16) + '000000000').substr(2, 8);\n    return s ? '-' + p.substr(0, 4) + '-' + p.substr(4, 4) : p;\n  }\n  //\n  sServObj.new = function () {\n    return rand() + rand(true) + rand(true) + rand();\n  };\n  sServObj.newHash = function () {\n    return rand() + rand(true) + rand(true) + rand();\n  };\n  //\n  sServObj.empty = function () {\n    return '00000000-0000-0000-0000-000000000000';\n  };\n  return sServObj;\n});\n'use strict';\nangular.module('emuwebApp').service('fontScaleService', function fontScaleService() {\n  // shared service object\n  var sServObj = {};\n  sServObj.lastTextWidth = null;\n  sServObj.spaceTop = 0;\n  /**\n\t\t *\n\t\t */\n  sServObj.getTextImage = function (ctxOriginal, text, fontPxSize, fontType, color) {\n    var scaleY = ctxOriginal.canvas.height / ctxOriginal.canvas.offsetHeight;\n    var scaleX = ctxOriginal.canvas.width / ctxOriginal.canvas.offsetWidth;\n    fontPxSize = Math.floor(fontPxSize + 2 - scaleY / 2);\n    var img = document.createElement('canvas');\n    img.setAttribute('width', Math.round(scaleX * 200));\n    img.setAttribute('height', Math.round(scaleY * 100));\n    var ctx = img.getContext('2d');\n    ctx.save();\n    ctx.font = fontPxSize + 'px' + ' ' + fontType;\n    ctx.fillStyle = color;\n    ctx.scale(scaleX, scaleY);\n    ctx.fillText(text, 0, fontPxSize + sServObj.spaceTop);\n    sServObj.lastTextWidth = ctx.measureText(text).width * scaleX;\n    // draw frame to see size\n    ctx.restore();\n    // ctx.fillStyle = \"red\";\n    // ctx.strokeStyle = \"red\";\n    // ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    // ctx.stroke();\n    return img;\n  };\n  /**\n\t\t *\n\t\t */\n  sServObj.getLastImageWidth = function () {\n    return sServObj.lastTextWidth;\n  };\n  /**\n\t\t *\n\t\t */\n  sServObj.getTextImageTwoLines = function (ctxOriginal, text, text2, fontPxSize, fontType, color, alignLeft) {\n    var scaleY = ctxOriginal.canvas.height / ctxOriginal.canvas.offsetHeight;\n    var scaleX = ctxOriginal.canvas.width / ctxOriginal.canvas.offsetWidth;\n    fontPxSize = Math.floor(fontPxSize + 2 - scaleY / 2);\n    var img = document.createElement('canvas');\n    img.setAttribute('width', Math.round(scaleX * 200));\n    img.setAttribute('height', Math.round(scaleY * 100));\n    var ctx = img.getContext('2d');\n    ctx.save();\n    ctx.font = fontPxSize + 'px' + ' ' + fontType;\n    ctx.fillStyle = color;\n    ctx.scale(scaleX, scaleY);\n    sServObj.lastTextWidth = ctx.measureText(text).width * scaleX;\n    if (alignLeft) {\n      ctx.fillText(text, 0, fontPxSize + sServObj.spaceTop);\n      ctx.fillText(text2, 0, 2 * fontPxSize + sServObj.spaceTop);\n    } else {\n      var a = ctx.measureText(text).width;\n      var b = ctx.measureText(text2).width;\n      // var c;\n      if (a > b) {\n        ctx.fillText(text, 0, fontPxSize + sServObj.spaceTop);\n        ctx.fillText(text2, a - b, 2 * fontPxSize + sServObj.spaceTop);\n      } else {\n        ctx.fillText(text, b - a, fontPxSize + sServObj.spaceTop);\n        ctx.fillText(text2, 0, 2 * fontPxSize + sServObj.spaceTop);\n      }\n    }\n    // draw frame to see size\n    ctx.restore();\n    // ctx.fillStyle = 'red';\n    // ctx.strokeStyle = 'red';\n    // ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    // ctx.stroke();\n    return img;\n  };\n  return sServObj;\n});\n'use strict';\nangular.module('emuwebApp').service('Espsparserservice', [\n  '$q',\n  'LevelService',\n  'Soundhandlerservice',\n  function Espsparserservice($q, LevelService, Soundhandlerservice) {\n    // shared service object\n    var sServObj = {};\n    var worker = new Worker('scripts/workers/espsParserWorker.js');\n    var defer;\n    // add event listener to worker to respond to messages\n    worker.addEventListener('message', function (e) {\n      if (e.data.status.type === 'SUCCESS') {\n        defer.resolve(e.data);\n      } else {\n        defer.reject(e.data);\n      }\n    }, false);\n    /**\n\t\t * parse ESPS file using webworker\n\t\t * @param esps\n\t\t * @param annotates\n\t\t * @param name\n\t\t * @returns promise\n\t\t */\n    sServObj.asyncParseEsps = function (esps, annotates, name) {\n      defer = $q.defer();\n      worker.postMessage({\n        'cmd': 'parseESPS',\n        'textGrid': esps,\n        'sampleRate': Soundhandlerservice.wavJSO.SampleRate,\n        'annotates': annotates,\n        'name': name\n      });\n      // Send data to our worker.\n      return defer.promise;\n    };\n    /**\n\t\t * parse JSO data to ESPS file using webworker\n\t\t * @param name\n\t\t * @param sampleRate\n\t\t * @returns promise\n\t\t */\n    sServObj.asyncParseJSO = function (name) {\n      defer = $q.defer();\n      worker.postMessage({\n        'cmd': 'parseJSO',\n        'level': LevelService.getLevelDetails(name).level,\n        'sampleRate': Soundhandlerservice.wavJSO.SampleRate\n      });\n      // Send data to our worker.\n      return defer.promise;\n    };\n    return sServObj;\n  }\n]);\n'use strict';\nangular.module('emuwebApp').controller('LoginCtrl', [\n  '$scope',\n  '$rootScope',\n  '$http',\n  'ConfigProviderService',\n  'Iohandlerservice',\n  'viewState',\n  'dialogService',\n  function ($scope, $rootScope, $http, ConfigProviderService, Iohandlerservice, viewState, dialogService) {\n    $scope.loginData = {\n      'username': '',\n      'password': '',\n      'errorMsg': ''\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.tryLogin = function () {\n      Iohandlerservice.logOnUser($scope.loginData.username, $scope.loginData.password).then(function (res) {\n        if (res === 'LOGGEDON') {\n          dialogService.close(true);\n        } else {\n          $scope.loginData.errorMsg = 'ERROR: ' + res;\n        }\n      });\n    };\n    // FOR DEVELOPMENT\n    // $scope.tryLogin(); // for autologin uncomment and set username + password\n    /**\n\t\t *\n\t\t */\n    $scope.cursorInTextField = function () {\n      viewState.focusInTextField = true;  // console.log(\"CURSOR\");\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.cursorOutOfTextField = function () {\n      viewState.focusInTextField = false;\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.cancel = function () {\n      dialogService.close(false);\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').service('Ssffdataservice', [\n  'viewState',\n  'Soundhandlerservice',\n  function Ssffdataservice(viewState, Soundhandlerservice) {\n    // shared service object\n    var sServObj = {};\n    sServObj.data = [];\n    /**\n\t\t *\n\t\t */\n    sServObj.getColumnOfTrack = function (trackName, columnName) {\n      var res;\n      sServObj.data.forEach(function (tr) {\n        if (tr.ssffTrackName === trackName) {\n          tr.Columns.forEach(function (col) {\n            if (col.name === columnName) {\n              res = col;\n            }\n          });\n        }\n      });\n      if (res !== undefined) {\n        return res;\n      } else {\n        alert('could not getColumnOfTrack of trackname: ' + trackName);\n      }\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.getSampleRateAndStartTimeOfTrack = function (trackName) {\n      var res = {};\n      sServObj.data.forEach(function (tr) {\n        if (tr.ssffTrackName === trackName) {\n          res.sampleRate = tr.sampleRate;\n          res.startTime = tr.startTime;\n        }\n      });\n      if (res !== undefined) {\n        return res;\n      } else {\n        alert('could not getSampleRateAndStartTimeOfTrack of trackname: ' + trackName);\n      }\n    };\n    /**\n\t\t * calculates the closest audio sample of\n\t\t * the passed in column sample nr\n\t\t */\n    sServObj.calculateSamplePosInVP = function (colSampleNr, sampleRate, startTime) {\n      var sampleTime = colSampleNr / sampleRate + startTime;\n      var audioSample = Math.round(sampleTime * Soundhandlerservice.wavJSO.SampleRate);\n      return audioSample;\n    };\n    return sServObj;\n  }\n]);\n'use strict';\nangular.module('emuwebApp').service('LevelService', [\n  '$q',\n  'ConfigProviderService',\n  'Soundhandlerservice',\n  'viewState',\n  'Ssffdataservice',\n  'ArrayHelperService',\n  function LevelService($q, ConfigProviderService, Soundhandlerservice, viewState, Ssffdataservice, ArrayHelperService) {\n    // shared service object\n    var sServObj = {};\n    sServObj.data = {};\n    // holding level data\n    sServObj.maxElementID = 0;\n    // max currently loaded level data Id\n    sServObj.lasteditArea = null;\n    // holding current edit area\n    sServObj.lasteditAreaElem = null;\n    // holding current edit area element\n    /**\n\t\t * search for the according label field in labels\n\t\t * and return its index\n\t\t *    @param attrDefName\n\t\t *    @param labels\n\t\t */\n    function getLabelIdx(attrDefName, labels) {\n      var labelIdx;\n      angular.forEach(labels, function (l, idx) {\n        if (l.name === attrDefName) {\n          labelIdx = idx;\n        }\n      });\n      return labelIdx;\n    }\n    ///////////////////////////////\n    // public api\n    sServObj.getData = function () {\n      return sServObj.data;\n    };\n    /**\n\t\t * sets annotation data and sets maxElementID by parsing id in elements\n\t\t */\n    sServObj.setData = function (data) {\n      angular.copy(data, sServObj.data);\n      angular.forEach(sServObj.data.levels, function (level) {\n        level.items.forEach(function (item) {\n          if (item.id > sServObj.maxElementID) {\n            sServObj.maxElementID = item.id;\n          }\n        });\n      });  //console.log(JSON.stringify(sServObj.data));\n    };\n    /**\n\t\t * called externally by handlekeystrokes\n\t\t */\n    sServObj.getNewId = function () {\n      sServObj.maxElementID += 1;\n      return sServObj.maxElementID;\n    };\n    /**\n\t\t * called internally by functions\n\t\t */\n    sServObj.raiseId = function (amount) {\n      sServObj.maxElementID += amount;\n    };\n    /**\n\t\t * called internally by functions\n\t\t */\n    sServObj.lowerId = function (amount) {\n      sServObj.maxElementID -= amount;\n    };\n    /**\n\t\t * returns level details (level object and sorting id) by passing in level Name\n\t\t */\n    sServObj.getLevelDetails = function (name) {\n      var curLevel = null;\n      var id = null;\n      angular.forEach(sServObj.data.levels, function (level, num) {\n        if (level.name === name) {\n          curLevel = level;\n          id = num;\n        }\n      });\n      return {\n        level: curLevel,\n        id: id\n      };\n    };\n    /**\n\t\t * gets element order by passing in elemtent id\n\t\t */\n    sServObj.getOrderById = function (name, eid) {\n      var ret = undefined;\n      angular.forEach(sServObj.data.levels, function (level) {\n        if (level.name === name) {\n          level.items.forEach(function (e, num) {\n            if (e.id === eid) {\n              ret = num;\n            }\n          });\n        }\n      });\n      return ret;\n    };\n    /**\n\t\t * gets element id by passing in element order\n\t\t */\n    sServObj.getIdByOrder = function (name, order) {\n      var ret = null;\n      angular.forEach(sServObj.data.levels, function (level) {\n        if (level.name === name) {\n          level.items.forEach(function (element, num) {\n            if (num == order) {\n              ret = element.id;\n            }\n          });\n        }\n      });\n      return ret;\n    };\n    /**\n\t\t * gets element details by passing in levelName and element order\n\t\t */\n    sServObj.getElementDetails = function (name, order) {\n      var details = null;\n      angular.forEach(sServObj.data.levels, function (level) {\n        if (level.name === name) {\n          level.items.forEach(function (element, num) {\n            if (num == order) {\n              details = element;\n            }\n          });\n        }\n      });\n      return details;\n    };\n    /**\n\t\t * gets element details by passing in levelName and elemtent order\n\t\t */\n    sServObj.getLastElement = function (name) {\n      var details = null;\n      angular.forEach(sServObj.data.levels, function (level) {\n        if (level.name === name) {\n          details = level.items[level.items.length - 1];\n        }\n      });\n      return details;\n    };\n    /**\n\t\t * get next Element in order\n\t\t */\n    sServObj.getNextElement = function (name, id) {\n      var details = null;\n      angular.forEach(sServObj.data.levels, function (level) {\n        if (level.name === name) {\n          level.items.forEach(function (element, num) {\n            if (element.id == id) {\n              details = level.items[num + 1];\n            }\n          });\n        }\n      });\n      return details;\n    };\n    /**\n\t\t * gets element details by passing in levelName and elemtent id\n\t\t *   @return Element Details as Object\n\t\t */\n    sServObj.getElementDetailsById = function (levelName, id) {\n      var details = null;\n      angular.forEach(sServObj.data.levels, function (level) {\n        if (level.name === levelName) {\n          level.items.forEach(function (element) {\n            if (element.id == id) {\n              details = element;\n            }\n          });\n        }\n      });\n      return details;\n    };\n    /**\n\t\t * Getter for last edit Area Element\n\t\t *   @return lasteditAreaElem last edit Area Element\n\t\t */\n    sServObj.getlasteditAreaElem = function () {\n      return sServObj.lasteditAreaElem;\n    };\n    /**\n\t\t * Setter for last edit Area Element\n\t\t *   @param lasteditAreaElem last edit Area Element\n\t\t */\n    sServObj.setlasteditAreaElem = function (e) {\n      sServObj.lasteditAreaElem = e;\n    };\n    /**\n\t\t * Setter for last edit Area\n\t\t *   @param lasteditAreaElem last edit Area\n\t\t */\n    sServObj.setlasteditArea = function (name) {\n      sServObj.lasteditArea = name;\n    };\n    /**\n\t\t * Getter for last edit Area\n\t\t *   @return lasteditAreaElem last edit Area\n\t\t */\n    sServObj.getlasteditArea = function () {\n      return sServObj.lasteditArea;\n    };\n    /**\n\t\t * Getter for id of last edited Element\n\t\t *   @return lasteditAreaElem last edit Area\n\t\t */\n    sServObj.getlastID = function () {\n      return sServObj.lasteditArea.substr(1);\n    };\n    /**\n\t\t * Remove currently open html textarea (if there is a textarea open)\n\t\t * and set viewState.editing to false.\n\t\t */\n    sServObj.deleteEditArea = function () {\n      if (null !== sServObj.getlasteditArea()) {\n        $('.' + sServObj.getlasteditArea()).remove();\n      }\n      viewState.editing = false;\n    };\n    /**\n\t\t * Calculate values (x,y,width,height) for textarea to open\n\t\t * depending on the current Level type, the current canvas\n\t\t * and the current clicked Element\n\t\t *   @param lastEventClick the current clicked Level Element\n\t\t *   @param element the current html Element to get canvas from\n\t\t *   @param type the current Level type\n\t\t */\n    sServObj.openEditArea = function (lastEventClick, element, type) {\n      var levelName = viewState.getcurClickLevelName();\n      var attrDefName = viewState.getCurAttrDef(levelName);\n      // find labelIdx\n      var labelIdx = getLabelIdx(attrDefName, lastEventClick.labels);\n      var elem = element.find('canvas').context.getContext('2d');\n      var clientWidth = elem.canvas.clientWidth;\n      var clientOffset = elem.canvas.offsetLeft;\n      var top = elem.canvas.offsetTop;\n      var height = elem.canvas.clientHeight;\n      if (type === 'SEGMENT') {\n        var start = viewState.getPos(clientWidth, lastEventClick.sampleStart) + clientOffset;\n        var end = viewState.getPos(clientWidth, lastEventClick.sampleStart + lastEventClick.sampleDur) + clientOffset;\n        var width = end - start;\n        if (width < 20) {\n          viewState.zoomViewPort(true);\n          sServObj.openEditArea(lastEventClick, element, type);\n          return;\n        }\n        sServObj.createEditArea(element, start, top, end - start, height, lastEventClick.labels[labelIdx].value, lastEventClick.id);\n      } else {\n        var len = lastEventClick.labels[labelIdx].value.length * 10;\n        var start = viewState.getPos(clientWidth, lastEventClick.samplePoint) + clientOffset - len / 2;\n        var end = viewState.getPos(clientWidth, lastEventClick.samplePoint) + clientOffset + len / 2;\n        var width = end - start;\n        if (width < 20) {\n          width = 20;\n        }\n        sServObj.createEditArea(element, start + (end - start) / 3, top, width, height, lastEventClick.labels[labelIdx].value, lastEventClick.id);\n      }\n      sServObj.createSelection(element.find('textarea')[0], 0, lastEventClick.labels[labelIdx].value.length);\n    };\n    /**\n\t\t * Create a Text Selection in a html Textarea\n\t\t *   @param field the textarea element\n\t\t *   @param start the starting character position as int\n\t\t *   @param end the ending character position as int\n\t\t */\n    sServObj.createSelection = function (field, start, end) {\n      if (field.createTextRange) {\n        var selRange = field.createTextRange();\n        selRange.collapse(true);\n        selRange.moveStart('character', start);\n        selRange.moveEnd('character', end);\n        selRange.select();\n      } else if (field.setSelectionRange) {\n        field.setSelectionRange(start, end);\n      } else if (field.selectionStart) {\n        field.selectionStart = start;\n        field.selectionEnd = end;\n      }\n      field.focus();\n    };\n    /**\n\t\t * create a html textarea element at given\n\t\t *   @param x the x Position\n\t\t *   @param y the y Position\n\t\t *   @param width the Width\n\t\t *   @param height the Height\n\t\t *   @param label the Text Content of the Textarea\n\t\t *   @param labelid the id of the element\n\t\t */\n    sServObj.createEditArea = function (element, x, y, width, height, label, labelid) {\n      var textid = '_' + labelid;\n      element.prepend($('<textarea>').attr({\n        id: textid,\n        'class': textid + ' emuwebapp-labelEdit',\n        'ng-model': 'message',\n        'autofocus': 'true'\n      }).css({\n        'left': Math.round(x + 2) + 'px',\n        'top': Math.round(y) + 'px',\n        'width': Math.round(width) - 4 + 'px',\n        'height': Math.round(height) - 1 + 'px',\n        'padding-top': Math.round(height / 3 + 1) + 'px'\n      }).text(label));\n    };\n    /**\n\t\t * insert a new Segment at position\n\t\t */\n    sServObj.insertElementDetails = function (id, levelname, position, labelname, start, duration) {\n      var attrdefs = ConfigProviderService.getLevelDefinition(levelname).attributeDefinitions;\n      var curAttrDef = viewState.getCurAttrDef(levelname);\n      var newElement;\n      angular.forEach(sServObj.data.levels, function (level) {\n        if (level.name === levelname) {\n          if (level.type == 'SEGMENT') {\n            newElement = {\n              id: id,\n              sampleStart: start,\n              sampleDur: duration,\n              labels: []\n            };\n            for (var i = 0; i < attrdefs.length; i++) {\n              if (attrdefs[i].name === curAttrDef) {\n                newElement.labels.push({\n                  name: levelname,\n                  value: labelname\n                });\n              } else {\n                newElement.labels.push({\n                  name: attrdefs[i].name,\n                  value: ''\n                });\n              }\n            }\n          } else if (level.type == 'EVENT') {\n            newElement = {\n              id: id,\n              samplePoint: start,\n              labels: []\n            };\n            for (var i = 0; i < attrdefs.length; i++) {\n              if (attrdefs[i].name === curAttrDef) {\n                newElement.labels.push({\n                  name: levelname,\n                  value: labelname\n                });\n              } else {\n                newElement.labels.push({\n                  name: attrdefs[i].name,\n                  value: ''\n                });\n              }\n            }\n          }\n          level.items.splice(position, 0, newElement);\n        }\n      });\n    };\n    /**\n\t\t * gets element details by passing in levelName and elemtent id\n\t\t */\n    sServObj.setElementDetails = function (levelname, id, labelname, labelIdx, start, duration) {\n      angular.forEach(sServObj.data.levels, function (level) {\n        if (level.name === levelname) {\n          level.items.forEach(function (element) {\n            if (element.id == id) {\n              if (start !== undefined) {\n                element.sampleStart = start;\n              }\n              if (duration !== undefined) {\n                element.sampleDur = duration;\n              }\n              if (labelname !== undefined) {\n                element.labels[labelIdx].value = labelname;\n              }\n            }\n          });\n        }\n      });\n    };\n    /**\n\t\t * gets element details by passing in levelName and elemtent id\n\t\t */\n    sServObj.setPointDetails = function (levelname, id, labelname, start) {\n      angular.forEach(sServObj.data.levels, function (level) {\n        if (level.name === levelname) {\n          level.items.forEach(function (element) {\n            if (element.id == id) {\n              element.samplePoint = start;\n              element.labels[0].value = labelname;\n            }\n          });\n        }\n      });\n    };\n    /**\n\t\t * gets element details by passing in levelName and element id's\n\t\t */\n    sServObj.getElementNeighbourDetails = function (name, firstid, lastid) {\n      var left = undefined;\n      var right = undefined;\n      angular.forEach(sServObj.data.levels, function (level) {\n        if (level.name === name) {\n          level.items.forEach(function (element, num) {\n            if (element.id == firstid) {\n              left = level.items[num - 1];\n            }\n            if (element.id == lastid) {\n              right = level.items[num + 1];\n            }\n          });\n        }\n      });\n      return {\n        left: left,\n        right: right\n      };\n    };\n    /**\n\t\t * gets element details by passing in level, pcm position and maximum pcm\n\t\t */\n    sServObj.getEvent = function (pcm, levelname, maximum) {\n      var level = sServObj.getLevelDetails(levelname).level;\n      var event = level.items[0];\n      var nearest = false;\n      if (level.items.length == 0) {\n        return {\n          evtr: undefined,\n          nearest: undefined\n        };\n      }\n      if (level.type === 'SEGMENT') {\n        angular.forEach(level.items, function (evt, index) {\n          if (pcm >= evt.sampleStart) {\n            if (pcm <= evt.sampleStart + evt.sampleDur) {\n              if (pcm - evt.sampleStart >= evt.sampleDur / 2) {\n                if (level.items[index + 1] !== undefined) {\n                  nearest = level.items[index + 1];\n                } else {\n                  nearest = true;\n                  event = level.items[level.items.length - 1];\n                }\n              } else {\n                nearest = level.items[index];\n              }\n            }\n          }\n          if (pcm >= evt.sampleStart) {\n            if (pcm <= evt.sampleStart + evt.sampleDur) {\n              event = evt;\n            } else {\n              nearest = true;\n              event = level.items[level.items.length - 1];\n            }\n          }\n        });\n      } else {\n        var spaceLower = 0;\n        var spaceHigher = 0;\n        angular.forEach(level.items, function (evt, index) {\n          if (index < level.items.length - 1) {\n            spaceHigher = evt.samplePoint + (level.items[index + 1].samplePoint - level.items[index].samplePoint) / 2;\n          } else {\n            spaceHigher = maximum;\n          }\n          if (index > 0) {\n            spaceLower = evt.samplePoint - (level.items[index].samplePoint - level.items[index - 1].samplePoint) / 2;\n          } else {\n            spaceLower = 0;\n          }\n          if (pcm <= spaceHigher && pcm >= spaceLower) {\n            event = evt;\n            nearest = evt;\n          }\n        });\n      }\n      return {\n        evtr: event,\n        nearest: nearest\n      };\n    };\n    /**\n\t\t * deletes a level by its name\n\t\t */\n    sServObj.deleteLevel = function (levelIndex, curPerspectiveIdx) {\n      var lvl = sServObj.data.levels[levelIndex];\n      sServObj.data.levels.splice(levelIndex, 1);\n      ConfigProviderService.vals.perspectives[curPerspectiveIdx].levelCanvases.order.splice(levelIndex, 1);\n      return lvl;\n    };\n    /**\n\t\t * adds a level by its name\n\t\t */\n    sServObj.addLevel = function (originalLevel, levelIndex, curPerspectiveIdx) {\n      if (sServObj.data.levels !== undefined) {\n        sServObj.data.levels.splice(levelIndex, 0, originalLevel);\n        ConfigProviderService.vals.perspectives[curPerspectiveIdx].levelCanvases.order.splice(levelIndex, 0, originalLevel.name);\n      } else {\n        sServObj.data.levels = [];\n        sServObj.data.levels.splice(levelIndex, 0, originalLevel);\n        ConfigProviderService.vals.perspectives[curPerspectiveIdx].levelCanvases.order.splice(levelIndex, 0, originalLevel.name);\n      }\n    };\n    /**\n\t\t * rename the label of an element by passing in level name and id\n\t\t */\n    sServObj.renameLabel = function (levelName, id, newLabelName) {\n      var attrDefName = viewState.getCurAttrDef(levelName);\n      var item = sServObj.getElementDetailsById(levelName, id);\n      var labelIdx = getLabelIdx(attrDefName, item.labels);\n      sServObj.setElementDetails(levelName, id, newLabelName, labelIdx);\n    };\n    /**\n\t\t * rename the label of a level by passing in level name and id\n\t\t */\n    sServObj.renameLevel = function (oldname, newname, curPerspectiveIdx) {\n      //rename level name\n      angular.forEach(sServObj.data.levels, function (level) {\n        if (level.name === oldname) {\n          level.name = newname;\n          // rename all first label names to match new \n          angular.forEach(level.items, function (item) {\n            item.labels[0].name = newname;\n          });\n        }\n      });\n      // update order name as well\n      ConfigProviderService.vals.perspectives[curPerspectiveIdx].levelCanvases.order[ConfigProviderService.vals.perspectives[curPerspectiveIdx].levelCanvases.order.indexOf(oldname)] = newname;\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.deleteSegmentsInvers = function (name, id, length, deletedSegment) {\n      var attrDefName = viewState.getCurAttrDef(name);\n      var labelIdx;\n      var x, insertPoint;\n      insertPoint = 0;\n      angular.forEach(sServObj.data.levels, function (level) {\n        if (level.name === name) {\n          insertPoint = deletedSegment.order;\n          for (x in deletedSegment.segments) {\n            level.items.splice(insertPoint++, 0, deletedSegment.segments[x]);\n          }\n        }\n      });\n      var lastNeighbours = sServObj.getElementNeighbourDetails(name, deletedSegment.segments[0].id, deletedSegment.segments[deletedSegment.segments.length - 1].id);\n      if (lastNeighbours.left !== undefined && lastNeighbours.right === undefined) {\n        labelIdx = getLabelIdx(attrDefName, lastNeighbours.left.labels);\n        sServObj.setElementDetails(name, lastNeighbours.left.id, lastNeighbours.left.labels[labelIdx].value, labelIdx, lastNeighbours.left.sampleStart, lastNeighbours.left.sampleDur - deletedSegment.timeRight);\n      } else if (lastNeighbours.left === undefined && lastNeighbours.right !== undefined) {\n        labelIdx = getLabelIdx(attrDefName, lastNeighbours.right.labels);\n        sServObj.setElementDetails(name, lastNeighbours.right.id, lastNeighbours.right.labels[labelIdx].value, labelIdx, lastNeighbours.right.sampleStart + deletedSegment.timeLeft, lastNeighbours.right.sampleDur - deletedSegment.timeLeft);\n      } else if (lastNeighbours.left === undefined && lastNeighbours.right === undefined) {\n      } else {\n        labelIdx = getLabelIdx(attrDefName, lastNeighbours.left.labels);\n        sServObj.setElementDetails(name, lastNeighbours.left.id, lastNeighbours.left.labels[labelIdx].value, labelIdx, lastNeighbours.left.sampleStart, lastNeighbours.left.sampleDur - deletedSegment.timeLeft);\n        sServObj.setElementDetails(name, lastNeighbours.right.id, lastNeighbours.right.labels[labelIdx].value, labelIdx, lastNeighbours.right.sampleStart + deletedSegment.timeRight, lastNeighbours.right.sampleDur - deletedSegment.timeRight);\n      }\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.deleteSegments = function (name, id, length) {\n      var firstSegment = sServObj.getElementDetailsById(name, id);\n      var firstOrder = sServObj.getOrderById(name, id);\n      var lastSegment = sServObj.getElementDetails(name, firstOrder + length - 1);\n      var lastNeighbours = sServObj.getElementNeighbourDetails(name, firstSegment.id, lastSegment.id);\n      var timeLeft = 0;\n      var timeRight = 0;\n      var deleteOrder = null;\n      var deletedSegment = null;\n      var clickSeg = null;\n      var attrDefName = viewState.getCurAttrDef(name);\n      var labelIdx = getLabelIdx(attrDefName, firstSegment.labels);\n      for (var i = firstOrder; i < firstOrder + length; i++) {\n        timeLeft += sServObj.getElementDetails(name, i).sampleDur;\n      }\n      if (timeLeft % 2 == 0) {\n        timeLeft = timeLeft / 2;\n        timeRight = timeLeft;\n      } else {\n        timeLeft = Math.ceil(timeLeft / 2);\n        timeRight = timeLeft - 1;\n      }\n      angular.forEach(sServObj.data.levels, function (level) {\n        if (level.name === name) {\n          angular.forEach(level.items, function (evt, order) {\n            if (evt.id == id) {\n              deleteOrder = order;\n              deletedSegment = level.items.splice(deleteOrder, length);\n            }\n          });\n        }\n      });\n      if (lastNeighbours.left !== undefined && lastNeighbours.right === undefined) {\n        sServObj.setElementDetails(name, lastNeighbours.left.id, undefined, labelIdx, lastNeighbours.left.sampleStart, lastNeighbours.left.sampleDur + timeRight);\n        clickSeg = lastNeighbours.left;\n      } else if (lastNeighbours.left === undefined && lastNeighbours.right !== undefined) {\n        sServObj.setElementDetails(name, lastNeighbours.right.id, undefined, labelIdx, lastNeighbours.right.sampleStart - timeLeft, lastNeighbours.right.sampleDur + timeLeft);\n        clickSeg = lastNeighbours.right;\n      } else if (lastNeighbours.left === undefined && lastNeighbours.right === undefined) {\n        // nothing left to do level empty now\n        viewState.setcurMouseSegment(undefined, undefined, undefined);\n      } else {\n        sServObj.setElementDetails(name, lastNeighbours.left.id, undefined, labelIdx, lastNeighbours.left.sampleStart, lastNeighbours.left.sampleDur + timeLeft);\n        sServObj.setElementDetails(name, lastNeighbours.right.id, undefined, labelIdx, lastNeighbours.right.sampleStart - timeRight, lastNeighbours.right.sampleDur + timeRight);\n        clickSeg = lastNeighbours.left;\n      }\n      return {\n        order: deleteOrder,\n        segments: deletedSegment,\n        timeLeft: timeLeft,\n        timeRight: timeRight,\n        clickSeg: clickSeg\n      };\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.insertSegmentInvers = function (name, start, end, newLabel) {\n      var ret = true;\n      var diff, diff2;\n      angular.forEach(sServObj.data.levels, function (t) {\n        if (t.name === name) {\n          if (start == end) {\n            var startID = -1;\n            angular.forEach(t.items, function (evt, id) {\n              if (start == evt.sampleStart) {\n                startID = id;\n                ret = true;\n              }\n            });\n            if (ret) {\n              var diff = 0;\n              if (t.items[startID] !== undefined) {\n                diff = t.items[startID].sampleDur;\n              }\n              if (t.items[startID - 1] !== undefined) {\n                // if leftmost item\n                t.items[startID - 1].sampleDur += diff;\n              }\n              t.items.splice(startID, 1);  //sServObj.lowerId(1);\n            }\n          } else {\n            var startID = -1;\n            angular.forEach(t.items, function (evt, id) {\n              if (start == evt.sampleStart) {\n                startID = id;\n                ret = true;\n              }\n            });\n            if (ret) {\n              if (t.items[startID + 1] === undefined) {\n                t.items.splice(startID - 1, 2);  //sServObj.lowerId(2);\t    \t\t\t\t\t\t    \n              } else if (t.items[startID - 1] === undefined) {\n                t.items.splice(startID, 2);  //sServObj.lowerId(2);\t\t    \t\t\t\t\t\t    \n              } else {\n                diff = t.items[startID].sampleDur;\n                diff2 = t.items[startID + 1].sampleDur;\n                t.items[startID - 1].sampleDur += diff + diff2;\n                t.items.splice(startID, 2);  //sServObj.lowerId(2);\t    \n              }\n            }\n          }\n        }\n      });\n      return ret;\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.insertSegment = function (name, start, end, newLabel, ids) {\n      var ret = true;\n      angular.forEach(sServObj.data.levels, function (level) {\n        if (level.name === name) {\n          if (start == end) {\n            if (level.items.length == 0) {\n              // if on an empty level\n              return {\n                ret: false,\n                ids: ids\n              };\n            } else {\n              // if not on an empty level\n              if (ids === undefined) {\n                ids = [];\n                ids[0] = sServObj.getNewId();\n              }\n              var startID = -1;\n              if (start < level.items[0].sampleStart) {\n                // before first segment\n                var diff = level.items[0].sampleStart - start;\n                sServObj.insertElementDetails(ids[0], name, 0, newLabel, start, diff);\n              } else if (start > level.items[level.items.length - 1].sampleStart + level.items[level.items.length - 1].sampleDur) {\n                // after last segment\n                var newStart = level.items[level.items.length - 1].sampleStart + level.items[level.items.length - 1].sampleDur;\n                sServObj.insertElementDetails(ids[0], name, level.items.length, newLabel, newStart, start - newStart);\n              } else {\n                angular.forEach(level.items, function (evt, id) {\n                  if (start >= evt.sampleStart && start <= evt.sampleStart + evt.sampleDur) {\n                    startID = id;\n                  }\n                  if (evt.sampleStart == start) {\n                    ret = false;\n                  }\n                  if (evt.sampleStart + evt.sampleDur == start) {\n                    ret = false;\n                  }\n                });\n                if (ret) {\n                  var diff = start - level.items[startID].sampleStart;\n                  sServObj.insertElementDetails(ids[0], name, startID + 1, newLabel, start, level.items[startID].sampleDur - diff);\n                  level.items[startID].sampleDur = diff;\n                }\n              }\n            }\n          } else {\n            if (ids === undefined) {\n              ids = [];\n              ids[0] = sServObj.getNewId();\n              ids[1] = sServObj.getNewId();\n            }\n            if (level.items.length == 0) {\n              // if on an empty level\n              sServObj.insertElementDetails(ids[0], name, 0, newLabel, start, end - start);\n            } else {\n              // if not on an empty level\t\t\t\t\n              if (end < level.items[0].sampleStart) {\n                // before first segment\n                var diff = level.items[0].sampleStart - end;\n                var diff2 = end - start;\n                sServObj.insertElementDetails(ids[0], name, 0, newLabel, end, diff);\n                sServObj.insertElementDetails(ids[1], name, 0, newLabel, start, diff2);\n              } else if (start > level.items[level.items.length - 1].sampleStart + level.items[level.items.length - 1].sampleDur) {\n                // after last segment\n                var diff = start - (level.items[level.items.length - 1].sampleStart + level.items[level.items.length - 1].sampleDur);\n                var diff2 = end - start;\n                var len = level.items.length;\n                sServObj.insertElementDetails(ids[0], name, len, newLabel, level.items[level.items.length - 1].sampleStart + level.items[level.items.length - 1].sampleDur, diff);\n                sServObj.insertElementDetails(ids[1], name, len + 1, newLabel, start, diff2);\n              } else {\n                // in the middle\t\t\t\n                var startID = -1;\n                var endID = -1;\n                angular.forEach(level.items, function (evt, id) {\n                  if (start >= evt.sampleStart && start <= evt.sampleStart + evt.sampleDur) {\n                    startID = id;\n                  }\n                  if (end >= evt.sampleStart && end <= evt.sampleStart + evt.sampleDur) {\n                    endID = id;\n                  }\n                });\n                ret = startID === endID;\n                if (startID === endID && startID !== -1) {\n                  var diff = start - level.items[startID].sampleStart;\n                  var diff2 = end - start;\n                  sServObj.insertElementDetails(ids[0], name, startID + 1, newLabel, start, diff2);\n                  sServObj.insertElementDetails(ids[1], name, startID + 2, newLabel, end, level.items[startID].sampleDur - diff - diff2);\n                  level.items[startID].sampleDur = diff;\n                }\n              }\n            }\n          }\n        }\n      });\n      return {\n        ret: ret,\n        ids: ids\n      };\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.insertPoint = function (name, start, pointName, id) {\n      var ret = false;\n      var found = false;\n      var pos = undefined;\n      angular.forEach(sServObj.data.levels, function (level) {\n        if (level.name === name && level.type === 'EVENT') {\n          var last = level.items[0].samplePoint;\n          angular.forEach(level.items, function (evt, order) {\n            if (Math.floor(start) === Math.floor(evt.samplePoint)) {\n              found = true;\n            }\n            if (start > evt.samplePoint) {\n              pos = order + 1;\n            }\n          });\n          if (!found) {\n            if (id === undefined) {\n              id = sServObj.getNewId();\n            }\n            sServObj.insertElementDetails(id, name, pos, pointName, start);\n          }\n        }\n      });\n      return {\n        ret: !found,\n        id: id\n      };\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.deletePoint = function (name, id) {\n      var ret = false;\n      angular.forEach(sServObj.data.levels, function (t) {\n        if (t.name === name && t.type == 'EVENT') {\n          var last = 0;\n          angular.forEach(t.items, function (evt, order) {\n            if (!ret) {\n              if (id == evt.id) {\n                ret = evt;\n                t.items.splice(order, 1);\n              }\n            }\n          });\n        }\n      });\n      return ret;\n    };\n    /**\n\t\t *   delete a single boundary between items\n\t\t *   @param toDelete\n\t\t *   @param name\n\t\t *   @param levelType\n\t\t */\n    sServObj.deleteBoundary = function (name, id) {\n      var last = null;\n      var retOrder = null;\n      var retEvt = null;\n      var clickSeg = null;\n      var toDelete = sServObj.getElementDetailsById(name, id);\n      angular.forEach(sServObj.data.levels, function (level) {\n        if (level.name === name) {\n          angular.forEach(level.items, function (evt, order) {\n            if (level.type === 'SEGMENT') {\n              if (toDelete.sampleStart == evt.sampleStart && toDelete.sampleDur == evt.sampleDur) {\n                last.labels[0].value += evt.labels[0].value;\n                last.sampleDur += evt.sampleDur;\n                level.items.splice(order, 1);\n                retOrder = order;\n                retEvt = evt;\n                clickSeg = last;\n              }\n            }\n            last = evt;\n          });\n          if (clickSeg == null) {\n            clickSeg = level.items[0];\n          }\n        }\n      });\n      return {\n        order: retOrder,\n        event: retEvt,\n        clickSeg: clickSeg\n      };\n    };\n    /**\n\t\t *   restore a single boundary between items\n\t\t *   @param toDelete\n\t\t *   @param name\n\t\t *   @param levelType\n\t\t */\n    sServObj.deleteBoundaryInvers = function (name, id, deletedSegment) {\n      angular.forEach(sServObj.data.levels, function (level) {\n        if (level.name === name) {\n          level.items.splice(deletedSegment.order, 0, deletedSegment.event);\n          var oldName = level.items[deletedSegment.order - 1].labels[0].value.slice(0, level.items[deletedSegment.order - 1].labels[0].value.length - deletedSegment.event.labels[0].value.length);\n          //level.items[order-1].labels[0].value = level.items[order-1].labels[0].value.slice(0, -(toRestore.labels[0].value.length));\n          level.items[deletedSegment.order - 1].labels[0].value = oldName;\n          level.items[deletedSegment.order - 1].sampleDur -= deletedSegment.event.sampleDur;\n        }\n      });\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.snapBoundary = function (toTop, levelName, segment, neighbor, type) {\n      var neighTd;\n      var neighTdIdx;\n      var absMinDist = Infinity;\n      var absDist;\n      var minDist = undefined;\n      var sample;\n      var sampleTarget;\n      if (type == 'SEGMENT') {\n        sample = segment.sampleStart;\n      } else if (type == 'EVENT') {\n        sample = segment.samplePoint;\n      }\n      angular.forEach(sServObj.data.levels, function (thisTd, tIdx) {\n        if (thisTd.name === levelName) {\n          if (toTop) {\n            if (tIdx >= 1) {\n              neighTd = sServObj.data.levels[tIdx - 1];\n            } else {\n              return false;\n            }\n          } else {\n            if (tIdx < sServObj.data.levels.length - 1) {\n              neighTd = sServObj.data.levels[tIdx + 1];\n            } else {\n              return false;\n            }\n          }\n          neighTd.items.forEach(function (itm, order) {\n            if (neighTd.type == 'SEGMENT') {\n              sampleTarget = itm.sampleStart;\n            } else if (neighTd.type == 'EVENT') {\n              sampleTarget = itm.samplePoint;\n            }\n            absDist = Math.abs(sample - sampleTarget);\n            if (absDist < absMinDist) {\n              absMinDist = absDist;\n              minDist = sampleTarget - sample;\n            }\n          });\n        }\n      });\n      if (minDist !== undefined) {\n        if (type == 'SEGMENT') {\n          this.moveBoundary(levelName, segment.id, minDist, 0);\n        } else if (type == 'EVENT') {\n          this.movePoint(levelName, segment.id, minDist);\n        }\n        return minDist;\n      } else {\n        return false;\n      }\n    };\n    /**\n\t\t *  moves a boundary of a given segment\n\t\t *\n\t\t *  @param {string} name The name of the level on which the segment lies.\n\t\t *  @param {number} id The id of the segment.\n\t\t *  @param {number} changeTime The time to add or substract.\n\t\t *  @param {position} The position of the mouse while moving the Boundary\n\t\t *                    (i.e. -1 = before first element, 1 = after last element, 0 = in the middle of elements).\n\t\t *\n\t\t */\n    sServObj.moveBoundary = function (levelName, id, changeTime, position) {\n      var orig = sServObj.getElementDetailsById(levelName, id);\n      var attrDefName = viewState.getCurAttrDef(levelName);\n      var labelIdx = getLabelIdx(attrDefName, orig.labels);\n      var ln = sServObj.getElementNeighbourDetails(levelName, id, id);\n      if (position === -1) {\n        // before first element\n        var origRight = ln.right;\n        if (origRight !== undefined) {\n          if (orig.sampleStart + changeTime > 0 && orig.sampleStart + changeTime < origRight.sampleStart) {\n            sServObj.setElementDetails(levelName, orig.id, undefined, labelIdx, orig.sampleStart + changeTime, orig.sampleDur - changeTime);\n          }\n        } else {\n          if (orig.sampleStart + changeTime > 0 && orig.sampleDur - changeTime >= 0 && orig.sampleStart + orig.sampleDur + changeTime <= Soundhandlerservice.wavJSO.Data.length) {\n            sServObj.setElementDetails(levelName, orig.id, undefined, labelIdx, orig.sampleStart + changeTime, orig.sampleDur - changeTime);\n          }\n        }\n      } else if (position === 1) {\n        // after last element\n        if (orig.sampleDur + changeTime >= 1 && orig.sampleDur + orig.sampleStart + changeTime <= Soundhandlerservice.wavJSO.Data.length) {\n          sServObj.setElementDetails(levelName, orig.id, undefined, labelIdx, orig.sampleStart, orig.sampleDur + changeTime);\n        }\n      } else {\n        if (ln.left === undefined) {\n          var origRight = ln.right;\n          if (origRight !== undefined) {\n            if (orig.sampleStart + changeTime > 0 && orig.sampleStart + changeTime < origRight.sampleStart) {\n              sServObj.setElementDetails(levelName, orig.id, undefined, labelIdx, orig.sampleStart + changeTime, orig.sampleDur - changeTime);\n            }\n          } else {\n            if (orig.sampleStart + changeTime > 0 && orig.sampleStart + orig.sampleDur + changeTime <= Soundhandlerservice.wavJSO.Data.length) {\n              sServObj.setElementDetails(levelName, orig.id, undefined, labelIdx, orig.sampleStart + changeTime, orig.sampleDur - changeTime);\n            }\n          }\n        } else {\n          var origLeft = ln.left;\n          if (origLeft.sampleDur + changeTime >= 0 && orig.sampleStart + changeTime > 0 && orig.sampleDur - changeTime > 0) {\n            sServObj.setElementDetails(levelName, ln.left.id, undefined, labelIdx, origLeft.sampleStart, origLeft.sampleDur + changeTime);\n            sServObj.setElementDetails(levelName, orig.id, undefined, labelIdx, orig.sampleStart + changeTime, orig.sampleDur - changeTime);\n          }\n        }\n      }\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.movePoint = function (name, id, changeTime) {\n      var orig = sServObj.getElementDetailsById(name, id);\n      if (orig.samplePoint + changeTime > 0 && orig.samplePoint + changeTime <= Soundhandlerservice.wavJSO.Data.length) {\n        sServObj.setPointDetails(name, orig.id, orig.labels[0].value, orig.samplePoint + changeTime);\n      }\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.moveSegment = function (name, id, length, changeTime) {\n      var firstOrder = sServObj.getOrderById(name, id);\n      var firstSegment = sServObj.getElementDetails(name, firstOrder);\n      var lastSegment = sServObj.getElementDetails(name, firstOrder + length - 1);\n      var lastNeighbours = sServObj.getElementNeighbourDetails(name, firstSegment.id, lastSegment.id);\n      var attrDefName = viewState.getCurAttrDef(name);\n      var labelIdx = getLabelIdx(attrDefName, firstSegment.labels);\n      if (lastNeighbours.left === undefined && lastNeighbours.right !== undefined) {\n        var right = sServObj.getElementDetailsById(name, lastNeighbours.right.id);\n        if (firstSegment.sampleStart + changeTime >= 1 && lastNeighbours.right.sampleDur - changeTime >= 1) {\n          sServObj.setElementDetails(name, right.id, undefined, labelIdx, right.sampleStart + changeTime, right.sampleDur - changeTime);\n          for (var i = firstOrder; i < firstOrder + length; i++) {\n            var orig = sServObj.getElementDetails(name, i);\n            sServObj.setElementDetails(name, orig.id, undefined, labelIdx, orig.sampleStart + changeTime, orig.sampleDur);\n          }\n        }\n      } else if (lastNeighbours.right === undefined && lastNeighbours.left !== undefined) {\n        var left = sServObj.getElementDetailsById(name, lastNeighbours.left.id);\n        if (lastNeighbours.left.sampleDur + changeTime >= 1) {\n          if (lastSegment.sampleStart + lastSegment.sampleDur + changeTime < Soundhandlerservice.wavJSO.Data.length) {\n            sServObj.setElementDetails(name, left.id, undefined, labelIdx, left.sampleStart, left.sampleDur + changeTime);\n            for (var i = firstOrder; i < firstOrder + length; i++) {\n              var orig = sServObj.getElementDetails(name, i);\n              sServObj.setElementDetails(name, orig.id, undefined, labelIdx, orig.sampleStart + changeTime, orig.sampleDur);\n            }\n          }\n        }\n      } else if (lastNeighbours.right !== undefined && lastNeighbours.left !== undefined) {\n        var origLeft = sServObj.getElementDetailsById(name, lastNeighbours.left.id);\n        var origRight = sServObj.getElementDetailsById(name, lastNeighbours.right.id);\n        if (origLeft.sampleDur + changeTime > 0 && origRight.sampleDur - changeTime > 0) {\n          sServObj.setElementDetails(name, origLeft.id, undefined, labelIdx, origLeft.sampleStart, origLeft.sampleDur + changeTime);\n          sServObj.setElementDetails(name, origRight.id, undefined, labelIdx, origRight.sampleStart + changeTime, origRight.sampleDur - changeTime);\n          for (var i = firstOrder; i < firstOrder + length; i++) {\n            var orig = sServObj.getElementDetails(name, i);\n            sServObj.setElementDetails(name, orig.id, undefined, labelIdx, orig.sampleStart + changeTime, orig.sampleDur);\n          }\n        }\n      } else if (lastNeighbours.right === undefined && lastNeighbours.left === undefined) {\n        var first = sServObj.getElementDetails(name, firstOrder);\n        var last = sServObj.getElementDetails(name, firstOrder + length - 1);\n        if (first.sampleStart + changeTime > 0 && last.sampleDur + last.sampleStart + changeTime < Soundhandlerservice.wavJSO.Data.length) {\n          for (var i = firstOrder; i < firstOrder + length; i++) {\n            var orig = sServObj.getElementDetails(name, i);\n            sServObj.setElementDetails(name, orig.id, undefined, labelIdx, orig.sampleStart + changeTime, orig.sampleDur);\n          }\n        }\n      }\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.expandSegment = function (rightSide, segments, name, changeTime) {\n      var startTime = 0;\n      var neighbours = sServObj.getElementNeighbourDetails(name, segments[0].id, segments[segments.length - 1].id);\n      var segTime = changeTime * segments.length;\n      var attrDefName = viewState.getCurAttrDef(name);\n      var labelIdx = getLabelIdx(attrDefName, segments[0].labels);\n      if (rightSide) {\n        // if expand or shrink on RIGHT side\n        if (neighbours.right === undefined) {\n          // last element\n          var lastLength = segments[segments.length - 1].sampleStart + segments[segments.length - 1].sampleDur + changeTime * segments.length;\n          if (lastLength < Soundhandlerservice.wavJSO.Data.length) {\n            angular.forEach(segments, function (seg) {\n              sServObj.setElementDetails(name, seg.id, undefined, labelIdx, seg.sampleStart + startTime, seg.sampleDur + changeTime);\n              startTime += changeTime;\n            });\n          }\n        } else {\n          angular.forEach(segments, function (seg) {\n            segTime += seg.sampleDur;\n          });\n          if (segTime > 0 && neighbours.right.sampleDur - changeTime * segments.length > 0) {\n            angular.forEach(segments, function (seg) {\n              sServObj.setElementDetails(name, seg.id, undefined, labelIdx, seg.sampleStart + startTime, seg.sampleDur + changeTime);\n              startTime += changeTime;\n            });\n            sServObj.setElementDetails(name, neighbours.right.id, undefined, labelIdx, neighbours.right.sampleStart + startTime, neighbours.right.sampleDur - startTime);\n          }\n        }\n      } else {\n        // if expand or shrink on LEFT side\n        if (neighbours.left === undefined) {\n          // first element\n          var first = sServObj.getElementDetails(name, 0);\n          if (first.sampleStart + changeTime * (segments.length + 1) > 0) {\n            angular.forEach(segments, function (seg) {\n              sServObj.setElementDetails(name, seg.id, undefined, seg.sampleStart - changeTime, labelIdx, seg.sampleDur + changeTime);\n            });\n          }\n        } else {\n          angular.forEach(segments, function (seg) {\n            segTime += seg.sampleDur;\n          });\n          if (segTime > 0 && neighbours.left.sampleDur - changeTime * segments.length > 0) {\n            startTime = 0;\n            angular.forEach(segments, function (seg, i) {\n              startTime = -(segments.length - i) * changeTime;\n              sServObj.setElementDetails(name, seg.id, undefined, labelIdx, seg.sampleStart + startTime, seg.sampleDur + changeTime);\n            });\n            sServObj.setElementDetails(name, neighbours.left.id, undefined, labelIdx, neighbours.left.sampleStart, neighbours.left.sampleDur - segments.length * changeTime);\n          }\n        }\n      }\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.calcDistanceToNearestZeroCrossing = function (sample) {\n      // walk right\n      var distRight;\n      for (var i = sample; i < Soundhandlerservice.wavJSO.Data.length - 1; i++) {\n        if (Soundhandlerservice.wavJSO.Data[i] >= 0 && Soundhandlerservice.wavJSO.Data[i + 1] < 0 || Soundhandlerservice.wavJSO.Data[i] < 0 && Soundhandlerservice.wavJSO.Data[i + 1] >= 0) {\n          distRight = i - sample;\n          break;\n        }\n      }\n      // walk left\n      var distLeft;\n      for (var i = sample; i > 1; i--) {\n        if (Soundhandlerservice.wavJSO.Data[i] >= 0 && Soundhandlerservice.wavJSO.Data[i - 1] < 0 || Soundhandlerservice.wavJSO.Data[i] < 0 && Soundhandlerservice.wavJSO.Data[i - 1] >= 0) {\n          distLeft = i - sample;\n          break;\n        }\n      }\n      var res;\n      if (Math.abs(distLeft) < Math.abs(distRight)) {\n        res = distLeft;\n      } else {\n        res = distRight + 1;\n      }\n      return res;\n    };\n    /**\n\t\t * get all labels (curAttr def applies) of a level and\n\t\t * return them as a flat array\n\t\t * @param levelName\n\t\t * @return array containing all labels (form==['x','y','z'])\n\t\t */\n    sServObj.getAllLabelsOfLevel = function (levelDetails) {\n      // console.log(levelDetails);\n      var curAttrDef = viewState.getCurAttrDef(levelDetails.level.name);\n      var labels = [];\n      for (var i = 0; i < levelDetails.level.items.length; i++) {\n        for (var j = 0; j < levelDetails.level.items[i].labels.length; j++) {\n          if (levelDetails.level.items[i].labels[j].name === curAttrDef) {\n            labels.push(levelDetails.level.items[i].labels[j].value);\n          }\n        }\n      }\n      return labels;\n    };\n    /////////////////////// handle hierarchy links (probably better in other service)/////////////////////\n    /**\n\t\t * adds links to sServObj.data.links \n\t\t * by pairing all childIds with the parent \n\t\t * id (form=={'fromID':parentID, 'toID':childId})\n\t\t */\n    sServObj.addLinkToParent = function (parentId, childIds) {\n      angular.forEach(childIds, function (chId) {\n        sServObj.data.links.push({\n          'fromID': parentId,\n          'toID': chId\n        });\n      });\n    };\n    /**\n\t\t * removes links from sServObj.data.links \n\t\t * that match the form {'fromID':parentID, 'toID':childId}\n\t\t */\n    sServObj.inverseAddLinkToParent = function (parentId, childIds) {\n      angular.forEach(sServObj.data.links, function (link, linkIdx) {\n        if (link.fromID === parentId && childIds.indexOf(link.toID) !== -1) {\n          sServObj.data.links.splice(linkIdx);\n        }\n        ;\n      });  // console.log(sServObj.data.links);\n    };\n    return sServObj;\n  }\n]);\n'use strict';\nangular.module('emuwebApp').service('Websockethandler', [\n  '$q',\n  '$rootScope',\n  '$location',\n  '$timeout',\n  'HistoryService',\n  'Ssffparserservice',\n  'ConfigProviderService',\n  'viewState',\n  'Wavparserservice',\n  'Soundhandlerservice',\n  'Espsparserservice',\n  'uuid',\n  'Binarydatamaniphelper',\n  'Ssffdataservice',\n  'dialogService',\n  function Websockethandler($q, $rootScope, $location, $timeout, HistoryService, Ssffparserservice, ConfigProviderService, viewState, Wavparserservice, Soundhandlerservice, Espsparserservice, uuid, Binarydatamaniphelper, Ssffdataservice, dialogService) {\n    // shared service object\n    var sServObj = {};\n    // Keep all pending requests here until they get responses\n    var callbacks = {};\n    // Create our websocket object with the address to the websocket\n    var ws = {};\n    // empty promise object to be resolved when connection is up\n    var conPromise = {};\n    var connected = false;\n    ////////////////////////////\n    // ws function\n    // broadcast on open\n    function wsonopen(message) {\n      connected = true;\n      $rootScope.$apply(conPromise.resolve(message));\n    }\n    function wsonmessage(message) {\n      listener(angular.fromJson(message.data));\n    }\n    function wsonerror(message) {\n      // console.log(message);\n      console.error('WEBSOCKET ERROR!!!!!');\n      $rootScope.$apply(conPromise.resolve(message));\n    }\n    function wsonclose(message) {\n      console.log(message);\n      if (!message.wasClean && connected) {\n        // show no clean disconnect error\n        dialogService.open('views/error.html', 'ModalCtrl', 'A non clean diconnect to the server occurred! This probably means that the server is down. Please check the server and reconnect!').then(function (argument) {\n          console.log('pushed cancel');\n          $rootScope.$broadcast('connectionDisrupted');\n        });\n      }\n      connected = false;\n      console.log('WEBSOCKET closed!!!!!');\n    }\n    function sendRequest(request) {\n      var defer = $q.defer();\n      var callbackId = getCallbackId();\n      callbacks[callbackId] = {\n        time: new Date(),\n        cb: defer\n      };\n      request.callbackID = callbackId;\n      ws.send(angular.toJson(request));\n      // timeout request if not answered\n      $timeout(function () {\n        var tOutResp = {\n            'callbackID': callbackId,\n            'status': {\n              'type': 'ERROR:TIMEOUT',\n              'message': 'Sent request of type: ' + request.type + ' timed out after ' + ConfigProviderService.vals.main.serverTimeoutInterval + 'ms!  Please check the server...'\n            }\n          };\n        listener(tOutResp);\n      }, ConfigProviderService.vals.main.serverTimeoutInterval);\n      return defer.promise;\n    }\n    function listener(data) {\n      var messageObj = data;\n      // console.log(\"Received data from websocket: \", messageObj);\n      // If an object exists with callbackID in our callbacks object, resolve it\n      if (callbacks.hasOwnProperty(messageObj.callbackID)) {\n        // console.log(callbacks[messageObj.callbackID]);\n        // console.log('resolving callback: ' + messageObj.type + ' Nr.: ' + messageObj.callbackID);\n        switch (messageObj.type) {\n        case 'getESPSfile':\n          handleReceivedESPS(messageObj.fileName, messageObj.data);\n          break;\n        case 'getSSFFfile':\n          alert('esps');\n          handleReceivedSSFF(messageObj.fileName, messageObj.data);\n          break;\n        }\n        // resolve promise with data only\n        if (messageObj.status.type === 'SUCCESS') {\n          $rootScope.$apply(callbacks[messageObj.callbackID].cb.resolve(messageObj.data));\n        } else {\n          // show protocol error and disconnect from server\n          dialogService.open('views/error.html', 'ModalCtrl', 'Communication error with server! Error message is: ' + messageObj.status.message);\n        }\n        delete callbacks[messageObj.callbackID];\n      } else {\n        if (messageObj.status.type === 'ERROR:TIMEOUT') {\n        } else {\n          dialogService.open('views/error.html', 'ModalCtrl', 'What just happened? You should not be here...');\n        }\n      }\n    }\n    // This creates a new callback ID for a request\n    function getCallbackId() {\n      var newUUID = uuid.new();\n      return newUUID;\n    }\n    ///////////////////////////////////////////\n    // public api\n    sServObj.initConnect = function (url) {\n      var defer = $q.defer();\n      ws = new WebSocket(url);\n      ws.onopen = wsonopen;\n      ws.onmessage = wsonmessage;\n      ws.onerror = wsonerror;\n      ws.onclose = wsonclose;\n      conPromise = defer;\n      return defer.promise;\n    };\n    //\n    sServObj.isConnected = function () {\n      return connected;\n    };\n    // close connection with ws\n    sServObj.closeConnect = function () {\n      ws.onclose = function () {\n      };\n      ws.close();\n    };\n    ////////////////////////////\n    // EMU-webApp protocol begins here\n    //\n    // ws getProtocol\n    sServObj.getProtocol = function () {\n      var request = { type: 'GETPROTOCOL' };\n      // Storing in a variable for clarity on what sendRequest returns\n      var promise = sendRequest(request);\n      return promise;\n    };\n    // ws getProtocol\n    sServObj.getDoUserManagement = function () {\n      var request = { type: 'GETDOUSERMANAGEMENT' };\n      // Storing in a variable for clarity on what sendRequest returns\n      var promise = sendRequest(request);\n      return promise;\n    };\n    // ws logOnUser\n    sServObj.logOnUser = function (name, pwd) {\n      var request = {\n          type: 'LOGONUSER',\n          userName: name,\n          pwd: pwd\n        };\n      // Storing in a variable for clarity on what sendRequest returns\n      var promise = sendRequest(request);\n      return promise;\n    };\n    // ws getConfigFile\n    sServObj.getDBconfigFile = function () {\n      var request = { type: 'GETGLOBALDBCONFIG' };\n      // Storing in a variable for clarity on what sendRequest returns\n      var promise = sendRequest(request);\n      return promise;\n    };\n    // ws getBundleList\n    sServObj.getBundleList = function () {\n      var request = { type: 'GETBUNDLELIST' };\n      // Storing in a variable for clarity on what sendRequest returns\n      var promise = sendRequest(request);\n      return promise;\n    };\n    // ws  getBundle\n    sServObj.getBundle = function (name) {\n      var request = {\n          type: 'GETBUNDLE',\n          name: name\n        };\n      // Storing in a variable for clarity on what sendRequest returns\n      var promise = sendRequest(request);\n      return promise;\n    };\n    // ws  saveBundle\n    sServObj.saveBundle = function (bundleData) {\n      var request = {\n          type: 'SAVEBUNDLE',\n          data: bundleData\n        };\n      // Storing in a variable for clarity on what sendRequest returns\n      var promise = sendRequest(request);\n      return promise;\n    };\n    // ws  disconnecting\n    sServObj.disconnectWarning = function () {\n      var request = { type: 'DISCONNECTWARNING' };\n      // Storing in a variable for clarity on what sendRequest returns\n      var promise = sendRequest(request);\n      return promise;\n    };\n    //\n    // EMU-webApp protocol ends here\n    ////////////////////////////\n    return sServObj;\n  }\n]);\n'use strict';\nangular.module('emuwebApp').controller('WsconnectionCtrl', [\n  '$scope',\n  'ConfigProviderService',\n  'Iohandlerservice',\n  'viewState',\n  'dialogService',\n  function ($scope, ConfigProviderService, Iohandlerservice, viewState, dialogService) {\n    $scope.serverInfos = {};\n    $scope.serverInfos.Url = ConfigProviderService.vals.main.serverUrl;\n    $scope.connectionError = '';\n    viewState.focusInTextField = true;\n    $scope.tryConnection = function () {\n      dialogService.close($scope.serverInfos.Url);\n    };\n    $scope.cancel = function () {\n      dialogService.close(false);\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').service('Binarydatamaniphelper', function Binarydatamaniphelper() {\n  // shared service object\n  var sServObj = {};\n  /**\n\t\t *\n\t\t */\n  sServObj.base64ToArrayBuffer = function (stringBase64) {\n    var binaryString = window.atob(stringBase64);\n    var len = binaryString.length;\n    var bytes = new Uint8Array(len);\n    for (var i = 0; i < len; i++) {\n      var ascii = binaryString.charCodeAt(i);\n      bytes[i] = ascii;\n    }\n    return bytes.buffer;\n  };\n  /**\n\t\t *\n\t\t */\n  sServObj.arrayBufferToBase64 = function (buffer) {\n    var binary = '';\n    var bytes = new Uint8Array(buffer);\n    var len = bytes.byteLength;\n    for (var i = 0; i < len; i++) {\n      binary += String.fromCharCode(bytes[i]);\n    }\n    return window.btoa(binary);\n  };\n  /**\n\t\t *\n\t\tsServObj.stringToArrayBuffer = function (str) {\n\t\t\tvar ab = new ArrayBuffer(str.length);\n\t\t\tvar view = new Uint8Array(ab);\n\t\t\tfor (var i = 0; i < str.length; ++i) {\n\t\t\t\tview[i] = str.charCodeAt(i);\n\t\t\t}\n\t\t\treturn ab;\n\t\t};\n\t\t */\n  return sServObj;\n});\n'use strict';\nangular.module('emuwebApp').service('dialogService', [\n  '$modal',\n  'viewState',\n  function dialogService($modal, viewState) {\n    // shared service object\n    var sServObj = {};\n    var modalInstance = {};\n    /**\n\t\t *\n\t\t */\n    sServObj.open = function (templatefile, argCtrl, passedIn) {\n      viewState.setState('modalShowing');\n      modalInstance = $modal.open({\n        backdrop: 'static',\n        keyboard: false,\n        templateUrl: templatefile,\n        controller: argCtrl,\n        resolve: {\n          passedInTxt: function () {\n            return passedIn;\n          },\n          passedInOpts: function () {\n            return passedIn;\n          }\n        }\n      });\n      return modalInstance.result;\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.openExport = function (templatefile, argCtrl, data, txt) {\n      viewState.setState('modalShowing');\n      modalInstance = $modal.open({\n        backdrop: 'static',\n        keyboard: false,\n        templateUrl: templatefile,\n        controller: argCtrl,\n        resolve: {\n          exportData: function () {\n            return data;\n          },\n          exportName: function () {\n            return txt;\n          }\n        }\n      });\n      return modalInstance.result;\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.close = function (res) {\n      viewState.focusInTextField = false;\n      viewState.setState(viewState.prevState);\n      modalInstance.close(res);\n    };\n    return sServObj;\n  }\n]);\n'use strict';\nangular.module('emuwebApp').controller('WaitCtrl', [\n  '$scope',\n  'viewState',\n  function ($scope, viewState) {\n    $scope.vs = viewState;\n  }\n]);\n'use strict';\nangular.module('emuwebApp').service('Appcachehandler', [\n  '$http',\n  'dialogService',\n  function Appcachehandler($http, dialogService) {\n    // shared service object\n    var sServObj = {};\n    var appCache = window.applicationCache;\n    // var cacheProperties = {\n    // \tfilesDownloaded: 0,\n    // \ttotalFiles: 0\n    // };\n    // function getTotalFiles() {\n    // \t// First, reset the total file count and download count.\n    // \tcacheProperties.filesDownloaded = 0;\n    // \tcacheProperties.totalFiles = 0;\n    // \t$http.get('manifest.appcache').success(function (content) {\n    // \t\t// console.log(content);\n    // \t\tcontent = content.replace(\n    // \t\t\tnew RegExp(\n    // \t\t\t\t'(NETWORK|FALLBACK):' +\n    // \t\t\t\t'((?!(NETWORK|FALLBACK|CACHE):)[\\\\w\\\\W]*)',\n    // \t\t\t\t'gi'\n    // \t\t\t),\n    // \t\t\t''\n    // \t\t);\n    // \t\t// Strip out all comments.\n    // \t\tcontent = content.replace(\n    // \t\t\tnew RegExp('#[^\\\\r\\\\n]*(\\\\r\\\\n?|\\\\n)', 'g'),\n    // \t\t\t''\n    // \t\t);\n    // \t\t// Strip out the cache manifest header and\n    // \t\t// trailing slashes.\n    // \t\tcontent = content.replace(\n    // \t\t\tnew RegExp('CACHE MANIFEST\\\\s*|\\\\s*$', 'g'),\n    // \t\t\t''\n    // \t\t);\n    // \t\t// Strip out extra line breaks and replace with\n    // \t\t// a hash sign that we can break on.\n    // \t\tcontent = content.replace(\n    // \t\t\tnew RegExp('[\\\\r\\\\n]+', 'g'),\n    // \t\t\t'#'\n    // \t\t);\n    // \t\t// Get the total number of files.\n    // \t\tvar totalFiles = content.split('#').length;\n    // \t\t// Store the total number of files. Here, we are\n    // \t\t// adding one for *THIS* file, which is cached\n    // \t\t// implicitly as it points to the manifest.\n    // \t\tcacheProperties.totalFiles = (totalFiles + 1);\n    // \t\t// console.log('##########################');\n    // \t\t// alert('INFO: appcache update of: ' + cacheProperties.totalFiles + ' files');\n    // \t});\n    // }\n    // function handleCheckingEvent(e) {\n    // \tconsole.log('###### handleCheckingEvent ##########');\n    // \tconsole.log(e);\n    // }\n    // function handleNoupdateEvent(e) {\n    // \tconsole.log('###### handleNoupdateEvent ##########');\n    // \tconsole.log(e);\n    // }\n    // function handleDownloadingEvent(e) {\n    // \tconsole.log('######## handleDownloadingEvent ##########');\n    // \tconsole.log(e);\n    // \tgetTotalFiles();\n    // }\n    // function handleProgressEvent(e) {\n    // \tconsole.log('###### handleProgressEvent ##########');\n    // \tconsole.log(e);\n    // }\n    /**\n\t\t *\n\t\t */\n    // function handleCachedEvent(e) {\n    // \tconsole.log('###### handleCachedEvent ##########');\n    // \tconsole.log(e);\n    // }\n    /**\n\t\t *\n\t\t */\n    function handleUpdatereadyEvent(e) {\n      console.log('###### handleUpdatereadyEvent ##########');\n      dialogService.open('views/confirmModal.html', 'ConfirmmodalCtrl', 'A new version of the EMU-WebApp is available and has already been downloaded and cached in your browser. Would you like to use it? CAUTION: A reload will delete all current changes... TIP: the next time you use the EMU-webApp you will automatically use the updated version)').then(function (res) {\n        if (res) {\n          appCache.swapCache();\n          window.location.reload();\n        }\n      });\n    }\n    // function handleObsoleteEvent(e) {\n    // \tconsole.log('###### handleObsoleteEvent ##########');\n    // \tconsole.log(e);\n    // }\n    // function handleErrorEvent(e) {\n    // \tconsole.log('###### handleErrorEvent ##########');\n    // \tconsole.log(e);\n    // }\n    // // bind evts\n    // // appCache.addEventListener('progress', handleProgressEvent, false);\n    // appCache.addEventListener('checking', handleCheckingEvent, false);\n    // appCache.addEventListener('noupdate', handleNoupdateEvent, false);\n    // appCache.addEventListener('downloading', handleDownloadingEvent, false);\n    // appCache.addEventListener('progress', handleProgressEvent, false);\n    // appCache.addEventListener('cached', handleCachedEvent, false);\n    appCache.addEventListener('updateready', handleUpdatereadyEvent, false);\n    // appCache.addEventListener('obsolete', handleObsoleteEvent, false);\n    // appCache.addEventListener('error', handleErrorEvent, false);\n    // /////////////////////////////////////////////////\n    // // public api\n    sServObj.checkForNewVersion = function () {\n      // console.log('check for new version');\n      if (appCache.status !== 0 && appCache.status !== 3) {\n        // uncached == 0 & downloading == 3\n        console.log('INFO: appCache.status: ' + appCache.status);\n        appCache.update();\n      }\n    };\n    return sServObj;\n  }\n]);\n'use strict';\nangular.module('emuwebApp').controller('AboutCtrl', [\n  '$scope',\n  'ConfigProviderService',\n  'dialogService',\n  function ($scope, ConfigProviderService, dialogService) {\n    $scope.cps = ConfigProviderService;\n    $scope.getStrRep = function (code) {\n      var str;\n      switch (code) {\n      case 8:\n        str = 'BACKSPACE';\n        break;\n      case 9:\n        str = 'TAB';\n        break;\n      case 13:\n        str = 'ENTER';\n        break;\n      case 16:\n        str = 'SHIFT';\n        break;\n      case 18:\n        str = 'ALT';\n        break;\n      case 32:\n        str = 'SPACE';\n        break;\n      case 37:\n        str = '\\u2190';\n        break;\n      case 39:\n        str = '\\u2192';\n        break;\n      case 38:\n        str = '\\u2191';\n        break;\n      case 40:\n        str = '\\u2193';\n        break;\n      case 42:\n        str = '+';\n        break;\n      case 43:\n        str = '+';\n        break;\n      case 45:\n        str = '-';\n        break;\n      case 95:\n        str = '-';\n        break;\n      default:\n        str = String.fromCharCode(code);\n      }\n      return str;\n    };\n    $scope.cancel = function () {\n      dialogService.close();\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').controller('spectSettingsCtrl', [\n  '$scope',\n  'dialogService',\n  'viewState',\n  'LevelService',\n  function ($scope, dialogService, viewState, LevelService) {\n    $scope.vs = viewState;\n    $scope.options = Object.keys($scope.vs.getWindowFunctions());\n    $scope.selWindowInfo = {};\n    $scope.selWindowInfo.name = Object.keys($scope.vs.getWindowFunctions())[$scope.vs.spectroSettings.window - 1];\n    // console.log(Object.keys($scope.vs.getWindowFunctions())[$scope.vs.spectroSettings.window - 1]);\n    $scope.windowLengths = [\n      32,\n      64,\n      128,\n      256,\n      512,\n      1024,\n      2048\n    ];\n    $scope.modalVals = {\n      'rangeFrom': $scope.vs.spectroSettings.rangeFrom,\n      'rangeTo': $scope.vs.spectroSettings.rangeTo,\n      'dynamicRange': $scope.vs.spectroSettings.dynamicRange,\n      'windowLength': $scope.vs.spectroSettings.windowLength,\n      'window': $scope.vs.spectroSettings.window,\n      'drawHeatMapColors': $scope.vs.spectroSettings.drawHeatMapColors,\n      'preEmphasisFilterFactor': $scope.vs.spectroSettings.preEmphasisFilterFactor,\n      'heatMapColorAnchors': viewState.spectroSettings.heatMapColorAnchors\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.cursorInTextField = function () {\n      viewState.focusInTextField = true;\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.cursorOutOfTextField = function () {\n      viewState.focusInTextField = false;\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.getColorOfAnchor = function (anchorNr) {\n      var curStyle = {\n          'background-color': 'rgb(' + $scope.modalVals.heatMapColorAnchors[anchorNr][0] + ',' + $scope.modalVals.heatMapColorAnchors[anchorNr][1] + ',' + $scope.modalVals.heatMapColorAnchors[anchorNr][2] + ')',\n          'width': '10px',\n          'height': '10px'\n        };\n      return curStyle;\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.saveSpectroSettings = function () {\n      if ($scope.modalVals.dynamicRange % 1 === 0) {\n        if ($scope.modalVals.rangeFrom % 1 === 0) {\n          if ($scope.modalVals.rangeTo % 1 === 0) {\n            if ($scope.modalVals.rangeFrom >= 0) {\n              if ($scope.modalVals.rangeTo <= LevelService.data.sampleRate / 2) {\n                viewState.setspectroSettings($scope.modalVals.windowLength, $scope.modalVals.rangeFrom, $scope.modalVals.rangeTo, $scope.modalVals.dynamicRange, $scope.selWindowInfo.name, $scope.modalVals.drawHeatMapColors, $scope.modalVals.preEmphasisFilterFactor, $scope.modalVals.heatMapColorAnchors);\n                $scope.cancel();\n              } else {\n                $scope.error('View Range (Hz) upper boundary is a value bigger than ' + LevelService.data.sampleRate / 2);\n              }\n            } else {\n              $scope.error('View Range (Hz) lower boundary is a value below zero');\n            }\n          } else {\n            $scope.error('View Range (Hz) upper boundary has to be an Integer value.');\n          }\n        } else {\n          $scope.error('View Range (Hz) lower boundary has to be an Integer value.');\n        }\n      } else {\n        $scope.error('Dynamic Range has to be an Integer value.');\n      }\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.error = function (errorMsg) {\n      dialogService.close();\n      dialogService.open('views/error.html', 'ModalCtrl', 'Sorry: ' + errorMsg);\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.cancel = function () {\n      dialogService.close();\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').controller('ConfirmmodalCtrl', [\n  '$scope',\n  'dialogService',\n  'passedInTxt',\n  function ($scope, dialogService, passedInTxt) {\n    $scope.passedInTxt = passedInTxt;\n    $scope.confirm = function () {\n      dialogService.close(true);\n    };\n    $scope.cancel = function () {\n      dialogService.close(false);\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').controller('SelectThresholdModalCtrl', [\n  '$scope',\n  'dialogService',\n  'passedInOpts',\n  'ArrayHelperService',\n  function ($scope, dialogService, passedInOpts, ArrayHelperService) {\n    $scope.passedInOpts = passedInOpts;\n    $scope.myData = ArrayHelperService.convertArrayToXYjsoArray(passedInOpts.y);\n    $scope.select = function (idx) {\n      dialogService.close(idx);\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').controller('SelectLabelModalCtrl', [\n  '$scope',\n  'dialogService',\n  'passedInOpts',\n  'ArrayHelperService',\n  function ($scope, dialogService, passedInOpts, ArrayHelperService) {\n    $scope.passedInOpts = passedInOpts;\n    $scope.select = function (idx) {\n      dialogService.close(idx);\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').filter('regex', function () {\n  return function (input, regex) {\n    var patt = new RegExp(regex.toLowerCase());\n    var out = [];\n    for (var i = 0; i < input.length; i++) {\n      if (patt.test(input[i].name.toLowerCase())) {\n        out.push(input[i]);\n      }\n    }\n    return out;\n  };\n});\n'use strict';\nangular.module('emuwebApp').filter('levelsFilter', [\n  'ConfigProviderService',\n  'viewState',\n  function (ConfigProviderService, viewState) {\n    return function (input) {\n      if (input) {\n        var patt1 = new RegExp('SEGMENT');\n        var patt2 = new RegExp('EVENT');\n        var out = [];\n        var idx;\n        for (var i = 0; i < input.length; i++) {\n          if (patt1.test(input[i].type) || patt2.test(input[i].type)) {\n            if (ConfigProviderService.vals.perspectives[viewState.curPerspectiveIdx].levelCanvases !== undefined) {\n              idx = ConfigProviderService.vals.perspectives[viewState.curPerspectiveIdx].levelCanvases.order.indexOf(input[i].name);\n              if (idx !== -1) {\n                out[idx] = input[i];\n              }\n            }\n          }\n        }\n        // console.log(out)\n        return out;\n      }\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').controller('ModalCtrl', [\n  '$scope',\n  'dialogService',\n  'passedInTxt',\n  'viewState',\n  'LevelService',\n  'HistoryService',\n  function ($scope, dialogService, passedInTxt, viewState, LevelService, HistoryService) {\n    $scope.passedInTxt = passedInTxt;\n    $scope.passedOutTxt = { 'var': null };\n    $scope.cancel = function () {\n      dialogService.close();\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.cursorInTextField = function () {\n      viewState.focusInTextField = true;\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.cursorOutOfTextField = function () {\n      viewState.focusInTextField = false;\n    };\n    /**\n\t\t *  Save changes made on SSFF\n\t\t */\n    $scope.saveChanges = function (name) {\n      dialogService.close('saveChanges');\n    };\n    /**\n\t\t *  Save changes made on SSFF\n\t\t */\n    $scope.discardChanges = function (name) {\n      dialogService.close('discardChanges');\n    };\n    /**\n\t\t *  Rename a level\n\t\t */\n    $scope.renameLevel = function () {\n      LevelService.renameLevel($scope.passedInTxt, $scope.passedOutTxt.var, viewState.curPerspectiveIdx);\n      HistoryService.addObjToUndoStack({\n        'type': 'ESPS',\n        'action': 'renameLevel',\n        'newname': $scope.passedOutTxt.var,\n        'name': $scope.passedInTxt,\n        'curPerspectiveIdx': viewState.curPerspectiveIdx\n      });\n      dialogService.close();\n    };\n    /**\n\t\t *  Delete a complete level from LevelService\n\t\t */\n    $scope.deleteLevel = function () {\n      var lvl = LevelService.getLevelDetails(viewState.getcurClickLevelName());\n      LevelService.deleteLevel(viewState.getcurClickLevelIndex(), viewState.curPerspectiveIdx);\n      HistoryService.addObjToUndoStack({\n        'type': 'ESPS',\n        'action': 'deleteLevel',\n        'level': lvl.level,\n        'id': viewState.getcurClickLevelIndex(),\n        'curPerspectiveIdx': viewState.curPerspectiveIdx\n      });\n      dialogService.close();\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').directive('showMenu', [\n  '$animate',\n  function ($animate) {\n    return {\n      restrict: 'A',\n      link: function postLink(scope, element, attrs) {\n        scope.$watch(attrs.showMenu, function (newVal) {\n          if (newVal) {\n            $animate.addClass(element, 'emuwebapp-expandWidthTo200px');\n          } else {\n            $animate.removeClass(element, 'emuwebapp-expandWidthTo200px');\n            $animate.addClass(element, 'emuwebapp-shrinkWidthTo0px');\n          }\n        });\n      }\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').directive('showTwod', [\n  '$animate',\n  function ($animate) {\n    return {\n      restrict: 'A',\n      link: function postLink(scope, element, attrs) {\n        scope.$watch(attrs.showTwod, function (newVal) {\n          if (newVal) {\n            $animate.addClass(element, '.slideIn2dCanvases');\n          } else {\n            $animate.removeClass(element, '.slideIn2dCanvases');\n          }\n        });\n      }\n    };\n  }\n]);\n// simple animation to add slideLeft class\nangular.module('emuwebApp').animation('.slideIn2dCanvases', function () {\n  return {\n    addClass: function (element, className) {\n      element.addClass('slide2dCanvases');\n    },\n    removeClass: function (element, className) {\n      element.removeClass('slide2dCanvases');\n    }\n  };\n});\nangular.module('emuwebApp').directive('bgSplitter', [\n  '$rootScope',\n  'viewState',\n  function ($rootScope, viewState) {\n    return {\n      restrict: 'E',\n      replace: true,\n      transclude: true,\n      scope: { showTwoDimCans: '@' },\n      template: '<div class=\"emuwebapp-split-panes vertical\" ng-transclude></div>',\n      controller: [\n        '$scope',\n        function ($scope) {\n          $scope.panes = [];\n          $scope.bottomRightResizePane;\n          this.addPane = function (pane) {\n            if ($scope.panes.length > 1)\n              throw 'splitters can only have two panes';\n            $scope.panes.push(pane);\n            return $scope.panes.length;\n          };\n          this.setBottomRightResizePane = function (pane) {\n            $scope.bottomRightResizePane = pane;\n          };\n        }\n      ],\n      link: function (scope, element, attrs) {\n        var dragBottomRightResizePaneTopResizer = false;\n        var dragBottomRightResizePaneLeftResizer = false;\n        var dragBottomRightResizePaneCornerResizer = false;\n        // create split pane view\n        var handler = angular.element('<div class=\"emuwebapp-split-handler\"><span></span></div>');\n        var pane1 = scope.panes[0];\n        var pane2 = scope.panes[1];\n        var pane3 = scope.bottomRightResizePane;\n        var bottomRightResizePaneTopResizer = angular.element('<div class=\"emuwebapp-bottomRightResizePaneTopResizer\"></div>');\n        var bottomRightResizePaneLeftResizer = angular.element('<div class=\"emuwebapp-bottomRightResizePaneLeftResizer\"></div>');\n        var bottomRightResizePaneCornerResizer = angular.element('<div class=\"emuwebapp-bottomRightResizePaneCornerResizer\"></div>');\n        pane3.elem.prepend(bottomRightResizePaneLeftResizer);\n        pane3.elem.prepend(bottomRightResizePaneTopResizer);\n        pane3.elem.prepend(bottomRightResizePaneCornerResizer);\n        var pane1Min = pane1.minSize || 0;\n        var pane2Min = pane2.minSize || 0;\n        var dragSplitPaneResizer = false;\n        var drag = false;\n        pane1.elem.after(handler);\n        attrs.$observe('showTwoDimCans', function (val) {\n          if (val === 'false') {\n            scope.bottomRightResizePane.elem.hide();\n          } else {\n            scope.bottomRightResizePane.elem.show();\n          }\n        });\n        ////////////////////\n        // bindings\n        element.bind('mousemove', function (ev) {\n          if (!drag)\n            return;\n          var bounds = element[0].getBoundingClientRect();\n          var pos = 0;\n          if (dragSplitPaneResizer) {\n            var height = bounds.bottom - bounds.top;\n            pos = ev.clientY - bounds.top;\n            // perc = pos/height * 100;\n            // console.log(perc);\n            if (pos < pane1Min)\n              return;\n            if (height - pos < pane2Min)\n              return;\n            handler.css('top', pos + 'px');\n            pane1.elem.css('height', pos + 'px');\n            pane2.elem.css('top', pos + 'px');\n            viewState.setdragBarHeight(pos);\n          }\n          if (dragBottomRightResizePaneTopResizer) {\n            var height = bounds.bottom - bounds.top;\n            pos = ev.clientY - bounds.top;\n            if (pos <= 10 || height - pos <= 10) {\n              return;\n            }\n            pane3.elem.css('top', pos + 'px');\n            var tmp = height - pos;\n            pane3.elem.css('height', tmp + 'px');\n          }\n          if (dragBottomRightResizePaneLeftResizer) {\n            var width = bounds.right - bounds.left;\n            pos = ev.clientX - bounds.left;\n            if (pos <= 10 || width - pos <= 10) {\n              return;\n            }\n            pane3.elem.css('left', pos + 'px');\n            var tmp = width - pos;\n            pane3.elem.css('width', tmp + 'px');\n          }\n          if (dragBottomRightResizePaneCornerResizer) {\n            // do height and top\n            var height = bounds.bottom - bounds.top;\n            pos = ev.clientY - bounds.top;\n            if (pos <= 10 || height - pos <= 10) {\n              return;\n            }\n            pane3.elem.css('top', pos + 'px');\n            var tmp = height - pos;\n            pane3.elem.css('height', tmp + 'px');\n            // do width and left\n            var width = bounds.right - bounds.left;\n            pos = ev.clientX - bounds.left;\n            if (pos <= 10 || width - pos <= 10) {\n              return;\n            }\n            pane3.elem.css('left', pos + 'px');\n            var tmp = width - pos;\n            pane3.elem.css('width', tmp + 'px');\n          }\n        });\n        handler.bind('mousedown', function (ev) {\n          ev.preventDefault();\n          drag = true;\n          dragSplitPaneResizer = true;\n          viewState.setdragBarActive(true);\n          $rootScope.$digest();\n        });\n        bottomRightResizePaneTopResizer.bind('mousedown', function (ev) {\n          ev.preventDefault();\n          drag = true;\n          dragBottomRightResizePaneTopResizer = true;\n          viewState.setdragBarActive(true);\n          $rootScope.$digest();\n        });\n        bottomRightResizePaneLeftResizer.bind('mousedown', function (ev) {\n          ev.preventDefault();\n          drag = true;\n          dragBottomRightResizePaneLeftResizer = true;\n          viewState.setdragBarActive(true);\n          $rootScope.$digest();\n        });\n        bottomRightResizePaneCornerResizer.bind('mousedown', function (ev) {\n          ev.preventDefault();\n          drag = true;\n          dragBottomRightResizePaneCornerResizer = true;\n          viewState.setdragBarActive(true);\n          $rootScope.$digest();\n        });\n        angular.element(document).bind('mouseup', function (ev) {\n          drag = false;\n          dragSplitPaneResizer = false;\n          dragBottomRightResizePaneTopResizer = false;\n          dragBottomRightResizePaneLeftResizer = false;\n          dragBottomRightResizePaneCornerResizer = false;\n          viewState.setdragBarActive(false);\n          $rootScope.$digest();\n        });\n      }\n    };\n  }\n]).directive('bgPane', function () {\n  return {\n    restrict: 'E',\n    require: '^bgSplitter',\n    replace: true,\n    transclude: true,\n    scope: {\n      minSize: '=',\n      type: '@',\n      showTwoDimCans: '@'\n    },\n    template: '<div class=\"{{typeclass}}\" ng-transclude></div>',\n    link: function (scope, element, attrs, bgSplitterCtrl) {\n      var newElement;\n      if (scope.type !== 'emuwebapp-bottomRightResizePane') {\n        scope.elem = element;\n        scope.index = bgSplitterCtrl.addPane(scope);\n        scope.typeclass = 'split-pane' + scope.index;\n      } else {\n        // element.toggleClass('alert-box alert')\n        // var twoDimCans = angular.element('<div class=\"bottomRightResizePane\"></div>');\n        // var bottomRightResizePaneTopResizer = angular.element('<div class=\"bottomRightResizePaneTopResizer\"></div>');\n        // var bottomRightResizePaneLeftResizer = angular.element('<div class=\"bottomRightResizePaneLeftResizer\"></div>');\n        // var bottomRightResizePaneCornerResizer = angular.element('<div class=\"bottomRightResizePaneCornerResizer\"></div>');\n        // element.prepend(bottomRightResizePaneLeftResizer);\n        // element.prepend(bottomRightResizePaneTopResizer);\n        // element.prepend(bottomRightResizePaneCornerResizer);\n        // element.append(twoDimCans);\n        scope.elem = element;\n        scope.index = 3;\n        scope.typeclass = 'emuwebapp-bottomRightResizePane';\n        bgSplitterCtrl.setBottomRightResizePane(scope);\n      }\n    }\n  };\n});\n'use strict';\nangular.module('emuwebApp').directive('ssffTrack', [\n  '$timeout',\n  'viewState',\n  'ConfigProviderService',\n  function ($timeout, viewState, ConfigProviderService) {\n    return {\n      templateUrl: 'views/ssffTrack.html',\n      restrict: 'E',\n      link: function postLink(scope, element, attrs) {\n        // select the needed DOM elements from the template\n        var canvasLength = element.find('canvas').length;\n        var ssffCanvas = element.find('canvas')[1];\n        var markupCanvas = element.find('canvas')[canvasLength - 1];\n        // var context = canvas0.getContext('2d');\n        var markupCtx = markupCanvas.getContext('2d');\n        var trackName;\n        attrs.$observe('trackName', function (val) {\n          if (val) {\n            trackName = val;\n          }\n        });\n        scope.order = attrs.order;\n        /////////////////////\n        // watches\n        // on broadcast msg from main ctrl openSubmenu refresh timeline\n        scope.$on('refreshTimeline', function () {\n          if (!$.isEmptyObject(scope.shs)) {\n            if (!$.isEmptyObject(scope.shs.wavJSO)) {\n              drawSsffTrackMarkup();\n            }\n          }\n        });\n        //\n        scope.$watch('vs.timelineSize', function () {\n          $timeout(scope.redraw, 10);\n        });\n        scope.$watch('vs.curViewPort', function () {\n          if (!$.isEmptyObject(scope.shs)) {\n            if (!$.isEmptyObject(scope.shs.wavJSO)) {\n              drawSsffTrackMarkup();\n            }\n          }\n        }, true);\n        scope.$watch('ssffds.data.length', function () {\n          if (!$.isEmptyObject(scope.shs)) {\n            if (!$.isEmptyObject(scope.shs.wavJSO)) {\n              drawSsffTrackMarkup();\n            }\n          }\n        }, true);\n        scope.$watch('vs.movingBoundary', function () {\n          if (!$.isEmptyObject(scope.shs)) {\n            if (!$.isEmptyObject(scope.shs.wavJSO)) {\n              drawSsffTrackMarkup();\n            }\n          }\n        }, true);\n        scope.$watch('vs.movingBoundarySample', function () {\n          if (!$.isEmptyObject(scope.shs)) {\n            if (!$.isEmptyObject(scope.shs.wavJSO)) {\n              drawSsffTrackMarkup();\n            }\n          }\n        }, true);\n        //\n        /////////////////////\n        scope.redraw = function () {\n          drawSsffTrackMarkup();\n        };\n        /**\n         *\n         */\n        function drawSsffTrackMarkup() {\n          if (!$.isEmptyObject(scope.ssffds.data)) {\n            if (scope.ssffds.data.length !== 0) {\n              markupCtx.clearRect(0, 0, markupCtx.canvas.width, markupCtx.canvas.height);\n              // draw moving boundary line if moving\n              scope.dhs.drawMovingBoundaryLine(markupCtx);\n              // draw current viewport selected\n              scope.dhs.drawCurViewPortSelected(markupCtx, false);\n              // draw min max an name of track\n              var tr = scope.cps.getSsffTrackConfig(trackName);\n              var col = scope.ssffds.getColumnOfTrack(tr.name, tr.columnName);\n              scope.dhs.drawMinMaxAndName(markupCtx, trackName, col._minVal, col._maxVal, 2);\n            }\n          }\n        }\n      }\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').directive('progressThing', [\n  '$animate',\n  function ($animate) {\n    return {\n      template: '<div class=\"emuwebapp-progressThing\">{{vs.somethingInProgressTxt}}</div>',\n      restrict: 'E',\n      replace: true,\n      link: function postLink(scope, element, attrs) {\n        // element.text('this is the progressThing directive');\n        attrs.$observe('showThing', function (newVal) {\n          if (newVal === 'true') {\n            // $animate.removeClass(element, 'hideProgressThing');\n            $animate.removeClass(element, 'emuwebapp-shrinkHeightTo0px');\n            $animate.addClass(element, 'emuwebapp-expandHeightTo20px');\n          } else {\n            // $animate.addClass(element, 'hideProgressThing');\n            $animate.removeClass(element, 'emuwebapp-expandHeightTo20px');\n            $animate.addClass(element, 'emuwebapp-shrinkHeightTo0px');\n          }\n        });\n      }\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').directive('epg', [\n  'viewState',\n  function (viewState) {\n    return {\n      template: '<div class=\"emuwebapp-twoDimCanvasContainer\"><canvas width=\"512\" height=\"512\"></canvas></div>',\n      restrict: 'E',\n      replace: true,\n      link: function postLink(scope, element, attrs) {\n        // element.text('this is the epg directive');\n        var canvas = element.find('canvas')[0];\n        var tr, col, sRaSt;\n        ////////////////////\n        // watches\n        scope.$watch('vs.curViewPort', function (newValue, oldValue) {\n          if (!$.isEmptyObject(scope.cps.vals)) {\n            if (!$.isEmptyObject(scope.ssffds.data)) {\n              if (scope.ssffds.data.length !== 0) {\n                if (oldValue.sS !== newValue.sS || oldValue.eS !== newValue.eS) {\n                  drawEpgGrid(scope);\n                }\n              }\n            }\n          }\n        }, true);\n        scope.$watch('vs.curMousePosSample', function (newValue, oldValue) {\n          if (!$.isEmptyObject(scope.cps.vals)) {\n            if (!$.isEmptyObject(scope.ssffds.data)) {\n              if (scope.ssffds.data.length !== 0) {\n                drawEpgGrid(scope);\n              }\n            }\n          }\n        }, true);\n        //\n        ////////////////////\n        /**\n\t\t\t\t * drawing method to drawEpgGrid\n\t\t\t\t */\n        function drawEpgGrid(scope) {\n          tr = scope.cps.getSsffTrackConfig('EPG');\n          // SIC SIC SIC hardcoded for now although it might stay that way because it only is allowed to draw epg data anyway\n          col = scope.ssffds.getColumnOfTrack(tr.name, tr.columnName);\n          sRaSt = scope.ssffds.getSampleRateAndStartTimeOfTrack(tr.name);\n          var ctx = canvas.getContext('2d');\n          ctx.clearRect(0, 0, canvas.width, canvas.height);\n          ctx.fillStyle = 'green';\n          ctx.strokeStyle = scope.cps.vals.colors.osciColor;\n          ctx.font = scope.cps.vals.font.fontPxSize + 'px' + ' ' + scope.cps.vals.font.fontType;\n          var gridWidth = canvas.width / 8;\n          var gridHeight = canvas.height / 8;\n          var sInterv = 1 / sRaSt.sampleRate - sRaSt.startTime;\n          var curFrame = Math.round(scope.vs.curMousePosSample / scope.shs.wavJSO.SampleRate / sInterv);\n          var binValStrArr;\n          angular.forEach(col.values[curFrame], function (el, elIdx) {\n            binValStrArr = el.toString(2).split('').reverse();\n            while (binValStrArr.length < 8) {\n              binValStrArr.push('0');\n            }\n            binValStrArr.forEach(function (binStr, binStrIdx) {\n              if (binStr === '1') {\n                ctx.fillStyle = 'grey';\n                ctx.fillRect(binStrIdx * gridWidth + 5, gridHeight * elIdx + 5, gridWidth - 10, gridHeight - 10);\n              } else {\n                ctx.fillStyle = 'white';\n                ctx.fillRect(binStrIdx * gridWidth + 5, gridHeight * elIdx + 5, gridWidth - 10, gridHeight - 10);\n              }\n            });\n          });\n          // draw labels\n          var horizontalText = scope.fontImage.getTextImageTwoLines(ctx, 'EPG', 'Frame:' + curFrame, scope.cps.vals.font.fontPxSize, scope.cps.vals.font.fontType, scope.cps.vals.colors.labelColor, true);\n          ctx.drawImage(horizontalText, 0, 0, horizontalText.width, horizontalText.height, 5, 0, horizontalText.width, horizontalText.height);\n        }\n      }\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').directive('dots', [\n  'viewState',\n  function (viewState) {\n    return {\n      template: '<div class=\"emuwebapp-twoDimCanvasContainer\"><canvas width=\"512\" height=\"512\"></canvas></div>',\n      restrict: 'E',\n      replace: true,\n      link: function postLink(scope, element, attrs) {\n        //element.text('this is the dots directive');\n        var canvas = element.find('canvas')[0];\n        var globalMinX = Infinity;\n        var globalMaxX = -Infinity;\n        var globalMinY = Infinity;\n        var globalMaxY = -Infinity;\n        var tr, col, sRaSt;\n        ////////////////////\n        // watches\n        //\n        scope.$watch('ssffds.data.length', function () {\n          if (!$.isEmptyObject(scope.cps.vals)) {\n            if (!$.isEmptyObject(scope.ssffds.data)) {\n              if (scope.ssffds.data.length !== 0) {\n                drawDots(scope);\n              }\n            }\n          }\n        }, true);\n        //\n        scope.$watch('vs.curViewPort', function (newValue, oldValue) {\n          if (!$.isEmptyObject(scope.cps.vals)) {\n            if (!$.isEmptyObject(scope.ssffds.data)) {\n              if (scope.ssffds.data.length !== 0) {\n                if (oldValue.sS !== newValue.sS || oldValue.eS !== newValue.eS) {\n                  drawDots(scope);\n                }\n              }\n            }\n          }\n        }, true);\n        //\n        scope.$watch('vs.curMousePosSample', function () {\n          if (!$.isEmptyObject(scope.cps.vals)) {\n            if (!$.isEmptyObject(scope.ssffds.data)) {\n              if (scope.ssffds.data.length !== 0) {\n                drawDots(scope);\n              }\n            }\n          }\n        }, true);\n        //\n        scope.$watch('vs.curPerspectiveIdx', function () {\n          globalMinX = Infinity;\n          globalMaxX = -Infinity;\n          globalMinY = Infinity;\n          globalMaxY = -Infinity;\n        }, true);\n        //\n        //////////////////\n        function setGlobalMinMaxVals() {\n          // body...\n          var dD = scope.cps.vals.perspectives[scope.vs.curPerspectiveIdx].twoDimCanvases.twoDimDrawingDefinitions[0];\n          // SIC SIC SIC hardcoded\n          for (var i = 0; i < dD.dots.length; i++) {\n            // get xCol\n            var trConf = scope.cps.getSsffTrackConfig(dD.dots[i].xSsffTrack);\n            var xCol = scope.ssffds.getColumnOfTrack(trConf.name, trConf.columnName);\n            if (xCol._minVal < globalMinX) {\n              globalMinX = xCol._minVal;\n            }\n            if (xCol._maxVal > globalMaxX) {\n              globalMaxX = xCol._maxVal;\n            }\n            // get yCol\n            trConf = scope.cps.getSsffTrackConfig(dD.dots[i].ySsffTrack);\n            var yCol = scope.ssffds.getColumnOfTrack(trConf.name, trConf.columnName);\n            if (yCol._minVal < globalMinY) {\n              globalMinY = yCol._minVal;\n            }\n            if (yCol._maxVal > globalMaxY) {\n              globalMaxY = yCol._maxVal;\n            }\n          }\n        }\n        function getScale(ctx, str, scale) {\n          return ctx.measureText(str).width * scale;\n        }\n        function getScaleWidth(ctx, str1, str2, scaleX) {\n          if (str1.toString().length > str2.toString().length) {\n            return getScale(ctx, str1, scaleX);\n          } else {\n            return getScale(ctx, str2, scaleX);\n          }\n        }\n        /**\n\t\t\t\t * drawing method to drawDots\n\t\t\t\t */\n        function drawDots() {\n          if (globalMinX === Infinity) {\n            setGlobalMinMaxVals();\n          }\n          var ctx = canvas.getContext('2d');\n          ctx.clearRect(0, 0, canvas.width, canvas.height);\n          //////////////////////////////\n          // markup to improve visualization \n          var scaleX = ctx.canvas.width / ctx.canvas.offsetWidth;\n          var scaleY = ctx.canvas.height / ctx.canvas.offsetHeight;\n          // draw corner pointers\n          ctx.beginPath();\n          ctx.moveTo(0, 0);\n          ctx.lineTo(5, 5);\n          ctx.moveTo(0, canvas.height);\n          ctx.lineTo(5, canvas.height - 5);\n          ctx.moveTo(canvas.width, canvas.height);\n          ctx.lineTo(canvas.width - 5, canvas.height - 5);\n          ctx.stroke();\n          ctx.closePath();\n          var smallFontSize = scope.cps.vals.font.fontPxSize * 3 / 4;\n          // ymax\n          var labelTxtImg = scope.fontImage.getTextImage(ctx, 'yMax: ' + scope.vs.round(globalMaxY, 2), smallFontSize, scope.cps.vals.font.fontType, scope.cps.vals.colors.endBoundaryColor);\n          ctx.drawImage(labelTxtImg, 5, 5, labelTxtImg.width, labelTxtImg.height);\n          // xmin + y min\n          labelTxtImg = scope.fontImage.getTextImageTwoLines(ctx, 'yMin: ' + scope.vs.round(globalMinY, 2), 'xMin: ' + scope.vs.round(globalMinX, 2), smallFontSize, scope.cps.vals.font.fontType, scope.cps.vals.colors.endBoundaryColor, true);\n          ctx.drawImage(labelTxtImg, 5, canvas.height - smallFontSize * scaleY * 2 - 5, labelTxtImg.width, labelTxtImg.height);\n          // xmax\n          var tw = ctx.measureText('xMax: ' + scope.vs.round(globalMaxX, 5)).width * scaleX;\n          // SIC why 5???\n          labelTxtImg = scope.fontImage.getTextImage(ctx, 'xMax: ' + scope.vs.round(globalMaxX, 2), smallFontSize, scope.cps.vals.font.fontType, scope.cps.vals.colors.endBoundaryColor);\n          ctx.drawImage(labelTxtImg, canvas.width - tw - 5, canvas.height - smallFontSize * scaleY - 5, labelTxtImg.width, labelTxtImg.height);\n          var dD = scope.cps.vals.perspectives[scope.vs.curPerspectiveIdx].twoDimCanvases.twoDimDrawingDefinitions[0];\n          // SIC SIC SIC hardcoded\n          // frame nr\n          var xsRaSt = scope.ssffds.getSampleRateAndStartTimeOfTrack(dD.dots[0].xSsffTrack);\n          // use first track for sample numbers\n          var ysRaSt = scope.ssffds.getSampleRateAndStartTimeOfTrack(dD.dots[0].ySsffTrack);\n          var sInterv = 1 / xsRaSt.sampleRate;\n          var curMousePosTime = scope.vs.curMousePosSample / scope.shs.wavJSO.SampleRate;\n          var curFrame;\n          if (xsRaSt.startTime === 1 / xsRaSt.sampleRate / 2) {\n            curFrame = Math.round(curMousePosTime * xsRaSt.sampleRate);\n          } else {\n            curFrame = Math.round(curMousePosTime * xsRaSt.sampleRate + (xsRaSt.startTime - 1 / xsRaSt.sampleRate / 2) * xsRaSt.sampleRate);\n          }\n          // check if due to math.round curFrame > col.length\n          var trConf = scope.cps.getSsffTrackConfig(dD.dots[0].xSsffTrack);\n          var xCol = scope.ssffds.getColumnOfTrack(trConf.name, trConf.columnName);\n          if (curFrame > xCol.values.length - 1) {\n            curFrame = xCol.values.length - 1;\n          }\n          tw = ctx.measureText('frame: ' + curFrame).width * scaleX;\n          labelTxtImg = scope.fontImage.getTextImage(ctx, 'frame: ' + curFrame, scope.cps.vals.font.fontPxSize - 4, scope.cps.vals.font.fontType, scope.cps.vals.colors.endBoundaryColor);\n          var degrees = 90;\n          ctx.save();\n          ctx.rotate(degrees * Math.PI / 180);\n          ctx.drawImage(labelTxtImg, canvas.width / 2 - tw / 2, -canvas.height);\n          ctx.restore();\n          //////////////////////////////\n          // draw dots\n          var allDots = [];\n          for (var i = 0; i < dD.dots.length; i++) {\n            // get xCol\n            var trConf = scope.cps.getSsffTrackConfig(dD.dots[i].xSsffTrack);\n            var xCol = scope.ssffds.getColumnOfTrack(trConf.name, trConf.columnName);\n            // get yCol\n            trConf = scope.cps.getSsffTrackConfig(dD.dots[i].ySsffTrack);\n            var yCol = scope.ssffds.getColumnOfTrack(trConf.name, trConf.columnName);\n            // check if x and why have the same amount of cols\n            if (xCol.values.length !== yCol.values.length) {\n              alert('columns do not have same length or length of one not 1');\n              return;\n            }\n            var xsRaSt = scope.ssffds.getSampleRateAndStartTimeOfTrack(dD.dots[i].xSsffTrack);\n            var ysRaSt = scope.ssffds.getSampleRateAndStartTimeOfTrack(dD.dots[i].ySsffTrack);\n            // check if sampleRate and startTime is the same\n            if (xsRaSt.sampleRate !== ysRaSt.sampleRate || xsRaSt.startSample !== ysRaSt.startSample) {\n              alert('xsRaSt.sampleRate !== ysRaSt.sampleRate || xsRaSt.startSample !== ysRaSt.startSample');\n              return;\n            }\n            var x = (xCol.values[curFrame][dD.dots[i].xContourNr] - globalMinX) / (globalMaxX - globalMinX) * canvas.width;\n            var y = canvas.height - (yCol.values[curFrame][dD.dots[i].yContourNr] - globalMinY) / (globalMaxY - globalMinY) * canvas.height;\n            var startPoint = Math.PI / 180 * 0;\n            var endPoint = Math.PI / 180 * 360;\n            ctx.strokeStyle = dD.dots[i].color;\n            ctx.beginPath();\n            ctx.arc(x, y, 20, startPoint, endPoint, true);\n            ctx.stroke();\n            ctx.closePath();\n            ctx.beginPath();\n            ctx.arc(x, y, 2, startPoint, endPoint, true);\n            ctx.fill();\n            ctx.closePath();\n            // draw labels\n            var labelTxtImg = scope.fontImage.getTextImage(ctx, dD.dots[i].name, scope.cps.vals.font.fontPxSize - 4, scope.cps.vals.font.fontType, scope.cps.vals.colors.labelColor);\n            ctx.drawImage(labelTxtImg, x, y - 5, labelTxtImg.width, labelTxtImg.height);\n            // append to all dots\n            allDots.push({\n              'name': dD.dots[i].name,\n              'x': x,\n              'y': y\n            });\n          }\n          var f, t;\n          dD.connectLines.forEach(function (c) {\n            allDots.forEach(function (d) {\n              if (d.name === c.fromDot) {\n                f = d;\n              }\n              if (d.name === c.toDot) {\n                t = d;\n              }\n            });\n            // draw line\n            ctx.strokeStyle = c.color;\n            ctx.beginPath();\n            ctx.moveTo(f.x, f.y);\n            ctx.lineTo(t.x, t.y);\n            ctx.stroke();\n            ctx.closePath();\n          });\n        }\n      }\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').directive('myDropZone', [\n  '$animate',\n  function ($animate) {\n    return {\n      templateUrl: 'views/myDropZone.html',\n      restrict: 'E',\n      link: function postLink(scope, element, attr) {\n        scope.dropDefault = 'Drop your files here or click here to open a file';\n        scope.dropErrorFileType = 'Error: Could not parse file. The following file types are supported: .WAV .TEXTGRID';\n        scope.dropErrorAPI = 'Sorry ! The File APIs are not fully supported in your browser.';\n        scope.dropNotAllowed = 'File is not allowed';\n        scope.dropAllowed = 'Drop files to start loading';\n        scope.dropParsingStarted = 'Parsing started';\n        scope.dropText = scope.dropDefault;\n        scope.dropClass = '';\n        function dragEnterLeave(evt) {\n          evt.preventDefault();\n          scope.$apply(function () {\n            scope.dropText = scope.dropDefault;\n            scope.dropClass = '';\n          });\n        }\n        function handleDragOver(evt) {\n          evt.preventDefault();\n          scope.$apply(function () {\n            scope.dropText = scope.dropAllowed;\n            scope.dropClass = 'over';\n          });\n        }\n        function dropFiles(evt) {\n          evt.stopPropagation();\n          evt.preventDefault();\n          scope.$apply(function () {\n            scope.dropText = scope.dropParsingStarted;\n            scope.dropClass = '';\n            if (window.File && window.FileReader && window.FileList && window.Blob) {\n              scope.dropText = scope.dropParsingStarted;\n              scope.dropClass = 'over';\n              if (evt.originalEvent !== undefined) {\n                if (scope.firefox) {\n                  var dt = evt.originalEvent.dataTransfer;\n                  var files = dt.files;\n                  var count = files.length;\n                  for (var i = 0; i < files.length; i++) {\n                    scope.traverseFileTreeFirefox(files[i]);\n                  }\n                } else {\n                  var items = evt.originalEvent.dataTransfer.items;\n                  for (var i = 0; i < items.length; i++) {\n                    var item = items[i].webkitGetAsEntry();\n                    if (item) {\n                      scope.traverseFileTreeChrome(item);\n                    }\n                  }\n                }\n              } else {\n                scope.dropText = scope.dropErrorFileType;\n                scope.dropClass = '';\n              }\n            } else {\n              scope.$parent.dials.open('views/error.html', 'ModalCtrl', scope.dropErrorAPI);\n              scope.dropText = $scope.dropDefault;\n            }\n          });\n        }\n        element.bind('drop', function (event) {\n          dropFiles(event);\n        });\n        element.bind('dragover', function (event) {\n          handleDragOver(event);\n        });\n        element.bind('dragenter', function (event) {\n          dragEnterLeave(event);\n        });\n        element.bind('dragleave', function (event) {\n          dragEnterLeave(event);\n        });\n        element.bind('click', function (event) {\n          element.context.children[0].children[1].click();\n        });\n      }\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').directive('myDropZoneInput', [\n  '$animate',\n  function ($animate) {\n    return {\n      templateUrl: 'views/myDropZoneInput.html',\n      restrict: 'E',\n      link: function postLink(scope, element, attr) {\n        scope.handler = false;\n        function handleFilesonChange() {\n          scope.handler = true;\n          var loadedFiles = element.context.children.fileDialog;\n          if (scope.firefox) {\n            for (var i = 0; i < loadedFiles.files.length; i++) {\n              var file = loadedFiles.files[i];\n              var extension = file.name.substr(file.name.lastIndexOf('.') + 1).toUpperCase();\n              if (extension === 'WAV' && file.type.match('audio/x-wav')) {\n                scope.wav = file;\n                scope.handleLocalFiles();\n              } else if (extension === 'TEXTGRID') {\n                scope.grid = file;\n              } else {\n                scope.other = file;\n              }\n            }\n          } else {\n            for (var i = 0; i < loadedFiles.files.length; i++) {\n              var file = loadedFiles.files[i];\n              var extension = file.name.substr(file.name.lastIndexOf('.') + 1).toUpperCase();\n              if (extension === 'WAV' && file.type.match('audio/wav')) {\n                scope.wav = file;\n                scope.handleLocalFiles();\n              } else if (extension === 'TEXTGRID') {\n                scope.grid = file;\n              } else {\n                scope.other = file;\n              }\n            }\n          }\n        }\n        element.bind('change', function (event) {\n          handleFilesonChange(event);\n        });\n        element.bind('click', function (event) {\n          var elem = angular.element('input');\n          if (elem[1] !== undefined) {\n            elem[1].click();\n          }\n        });\n      }\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').directive('emuwebapp', [\n  'viewState',\n  'Iohandlerservice',\n  'ConfigProviderService',\n  function (viewState, Iohandlerservice, ConfigProviderService) {\n    return {\n      templateUrl: 'views/emuwebapp.html',\n      restrict: 'E',\n      scope: {\n        audioGetUrl: '@',\n        labelGetUrl: '@',\n        labelType: '@'\n      },\n      link: function postLink(scope, element, attrs) {\n        ////////////////////////\n        // Bindings\n        element.bind('mouseenter', function (event) {\n          viewState.mouseInEmuWebApp = true;\n        });\n        element.bind('mouseleave', function (event) {\n          viewState.mouseInEmuWebApp = false;\n        });\n        ///////////////////////\n        // observe attrs\n        attrs.$observe('audioGetUrl', function (val) {\n          if (val !== undefined && val !== '') {\n            ConfigProviderService.embeddedVals.audioGetUrl = val;\n          }\n        });\n        attrs.$observe('labelGetUrl', function (val) {\n          if (val !== undefined && val !== '') {\n            ConfigProviderService.embeddedVals.labelGetUrl = val;\n          }\n        });\n        attrs.$observe('labelType', function (val) {\n          if (val !== undefined && val !== '') {\n            ConfigProviderService.embeddedVals.labelType = val;\n          }\n        });\n      }\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').service('Validationservice', [\n  '$http',\n  '$q',\n  function Validationservice($http, $q) {\n    //shared service object to be returned\n    var sServObj = {};\n    var schemasJsos = [];\n    var names = [\n        'annotationFileSchema',\n        'emuwebappConfigSchema',\n        'DBconfigFileSchema',\n        'bundleListSchema'\n      ];\n    /**\n\t\t *\n\t\t */\n    sServObj.loadSchemas = function () {\n      var proms = [];\n      angular.forEach(names, function (n) {\n        proms.push($http.get('schemaFiles/' + n + '.json'));\n      });\n      return $q.all(proms);\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.setSchemas = function (schemaArr) {\n      angular.forEach(schemaArr, function (s) {\n        schemasJsos.push({\n          name: s.config.url,\n          data: s.data\n        });\n      });\n    };\n    //.then(function (resp) {\n    // schemasJsos.push({\n    // \tname: n,\n    // \tdata: resp.data\n    // }, function (err) {\n    // \tconsole.error('Unable to load schemas!');\n    // \tconsole.error(err);\n    // });\n    /**\n\t\t *\n\t\t */\n    sServObj.validateJSO = function (schemaName, jso) {\n      var schema;\n      angular.forEach(schemasJsos, function (s) {\n        if (s.name === 'schemaFiles/' + schemaName + '.json') {\n          schema = s;\n        }\n      });\n      if (schema !== undefined && tv4.validate(jso, schema.data)) {\n        return true;\n      } else {\n        if (schema === undefined) {\n          return 'Schema: ' + schemaName + ' is currently undefined! This is probably due to a misnamed schema file on the server...';\n        } else {\n          return tv4.error;\n        }\n      }\n    };\n    return sServObj;\n  }\n]);\n'use strict';\nangular.module('emuwebApp').service('ArrayHelperService', [\n  '$q',\n  'dialogService',\n  function ArrayHelperService($q, dialogService) {\n    // shared service object\n    var sServObj = {};\n    var defer;\n    // defer promise obj\n    /**\n\t\t * convert values of array to max values\n\t\t *\n\t\t * @param arr array to convert\n\t\t * @returns array containing Math.abs() values\n\t\t */\n    sServObj.convertToAbsValues = function (arr) {\n      for (var i = 0; i < arr.length; i++) {\n        arr[i] = Math.abs(arr[i]);\n      }\n      return arr;\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.multiplyEachElement = function (arr, val) {\n      for (var i = 0; i < arr.length; i++) {\n        arr[i] = arr[i] * val;\n      }\n      return arr;\n    };\n    /**\n\t\t * find value between two points\n\t\t * by linearly interpolating them\n\t\t */\n    sServObj.interp2points = function (x0, y0, x1, y1, x) {\n      return y0 + (y1 - y0) * ((x - x0) / (x1 - x0));\n    };\n    /**\n\t\t * find min or maximum value in array\n\t\t *\n\t\t * @param arr array to search in\n\t\t * @param minOrMax string value either 'min' or 'max'\n\t\t * @returns object with attributes val and idx\n\t\t */\n    sServObj.findMinMax = function (arr, minOrMax) {\n      var val, idx;\n      if (minOrMax === 'min') {\n        val = Infinity;\n        for (var i = 0; i < arr.length; i++) {\n          if (arr[i] < val) {\n            val = arr[i];\n            idx = i;\n          }\n        }\n      } else if (minOrMax === 'max') {\n        val = -Infinity;\n        for (var i = 0; i < arr.length; i++) {\n          if (arr[i] > val) {\n            val = arr[i];\n            idx = i;\n          }\n        }\n      }\n      return {\n        'val': val,\n        'idx': idx\n      };\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.flattenArrayOfArray = function (arrOfArrs) {\n      var merged = [];\n      merged = merged.concat.apply(merged, arrOfArrs);\n      return merged;\n    };\n    /**\n\t\t * convert array to an array that contains\n\t\t * objects of the form {x: i, y:y[i]}\n\t\t */\n    sServObj.convertArrayToXYjsoArray = function (y) {\n      var xyArray = [];\n      for (var i = 0; i < y.length; i++) {\n        xyArray.push({\n          x: i,\n          y: y[i]\n        });\n      }\n      return xyArray;\n    };\n    return sServObj;\n  }\n]);\n'use strict';\nangular.module('emuwebApp').service('AnagestService', [\n  '$q',\n  '$log',\n  'viewState',\n  'LevelService',\n  'ConfigProviderService',\n  'Ssffdataservice',\n  'ArrayHelperService',\n  'dialogService',\n  'HistoryService',\n  function AnagestService($q, $log, viewState, LevelService, ConfigProviderService, Ssffdataservice, ArrayHelperService, dialogService, HistoryService) {\n    // shared service object\n    var sServObj = {};\n    // defer object \n    var defer;\n    /**\n\t\t *\n\t\t */\n    sServObj.insertAnagestEvents = function () {\n      var defer = $q.defer();\n      // precheck if there are items in selection\n      var itemInSel = viewState.getItemsInSelection(LevelService.data.levels);\n      if (itemInSel.length !== 0) {\n        dialogService.open('views/error.html', 'ModalCtrl', 'There are already events in the selected area! This is not permitted...').then(function () {\n          defer.reject();\n        });\n        return defer;\n      }\n      // vertical position signal\n      var trackName = ConfigProviderService.getLevelDefinition(viewState.getcurClickLevelName()).anagestConfig.verticalPosSsffTrackName;\n      var tr = ConfigProviderService.getSsffTrackConfig(trackName);\n      var col = Ssffdataservice.getColumnOfTrack(tr.name, tr.columnName);\n      var sRaSt = Ssffdataservice.getSampleRateAndStartTimeOfTrack(tr.name);\n      // velocity signal\n      var vTrackName = ConfigProviderService.getLevelDefinition(viewState.getcurClickLevelName()).anagestConfig.velocitySsffTrackName;\n      var vTr = ConfigProviderService.getSsffTrackConfig(vTrackName);\n      var vCol = Ssffdataservice.getColumnOfTrack(vTr.name, vTr.columnName);\n      var vSRaSt = Ssffdataservice.getSampleRateAndStartTimeOfTrack(vTr.name);\n      if (col.length !== 1 || vCol.length !== 1) {\n        dialogService.open('views/error.html', 'ModalCtrl', 'UPS... the column length of of one of the tracks is != 1 this means something is badly configured in the DB!!!').then(function () {\n          defer.reject();\n        });\n        return defer;\n      }\n      // flatten columns\n      var flatColVals = ArrayHelperService.flattenArrayOfArray(col.values);\n      var flatVcolVals = ArrayHelperService.flattenArrayOfArray(vCol.values);\n      /////////////////////////////////////////\n      var gdat = [\n          NaN,\n          NaN\n        ];\n      var vdat = [\n          NaN,\n          NaN\n        ];\n      var ndat = [\n          NaN,\n          NaN\n        ];\n      var cdat = [\n          NaN,\n          NaN\n        ];\n      // easiest way to handle non-tangential signals (and has no effect on tangential signals)\n      flatVcolVals = ArrayHelperService.convertToAbsValues(flatVcolVals);\n      // selected column samples\n      var startTimeSel = viewState.getSelectedStartTime();\n      var endTimeSel = viewState.getSelectedEndTime();\n      var colStartSampleNr = Math.round(startTimeSel * sRaSt.sampleRate + sRaSt.startTime);\n      var colEndSampleNr = Math.round(endTimeSel * sRaSt.sampleRate + sRaSt.startTime);\n      var nrOfSamples = colEndSampleNr - colStartSampleNr;\n      var selCol = flatColVals.slice(colStartSampleNr, colStartSampleNr + nrOfSamples);\n      var selVCol = flatVcolVals.slice(colStartSampleNr, colStartSampleNr + nrOfSamples);\n      ;\n      // maxConstr\n      var maxVerticalPos = ArrayHelperService.findMinMax(selCol, 'max');\n      cdat[0] = maxVerticalPos.idx;\n      // max vel before max constriction\n      var maxVelBeforeMaxConstr = ArrayHelperService.findMinMax(selVCol.slice(0, cdat[0] + 1), 'max');\n      vdat[0] = maxVelBeforeMaxConstr.idx;\n      // min vel before max vel\n      var minVelBeforeMaxVel = ArrayHelperService.findMinMax(selVCol.slice(0, vdat[0] + 1), 'min');\n      // gesture onset\n      $log.info('Looking for gesture onset');\n      sServObj.interactiveFindThresholds(selVCol.slice(0, vdat[0] + 1), minVelBeforeMaxVel.val, maxVelBeforeMaxConstr.val, ConfigProviderService.getLevelDefinition(viewState.getcurClickLevelName()).anagestConfig.threshold, 1, 'Looking for gesture onset').then(function (resp) {\n        // keyboard;\n        var on20 = resp;\n        gdat[0] = on20;\n        // min vel between max vel 1 and max constriction\n        var minVelBetwMaxVel1maxConstr = ArrayHelperService.findMinMax(selVCol.slice(vdat[0], cdat[0] + 1), 'min');\n        var minp = minVelBetwMaxVel1maxConstr.idx + vdat[0];\n        // nucleus onset\n        $log.info('Looking for nucleus onset');\n        sServObj.interactiveFindThresholds(selVCol.slice(vdat[0], minp + 1), minVelBetwMaxVel1maxConstr.val, maxVelBeforeMaxConstr.val, ConfigProviderService.getLevelDefinition(viewState.getcurClickLevelName()).anagestConfig.threshold, -1, 'Looking for nucleus onset').then(function (resp) {\n          var off20 = resp;\n          ndat[0] = off20 + vdat[0];\n          // max vel after max constriction\n          var maxVelAfterMaxConstr = ArrayHelperService.findMinMax(selVCol.slice(cdat[0]), 'max');\n          // max vel before max constriction\n          vdat[1] = maxVelAfterMaxConstr.idx + cdat[0];\n          // minimum between max constriction and max vel after constriction\n          var minBetwMaxConstrMaxVelConstr = ArrayHelperService.findMinMax(selVCol.slice(cdat[0], vdat[1] + 1), 'min');\n          minp = minBetwMaxConstrMaxVelConstr.idx + cdat[0];\n          // nucleus offset\n          $log.info('Looking for nucleus offset');\n          sServObj.interactiveFindThresholds(selVCol.slice(minp, vdat[1] + 1), minBetwMaxConstrMaxVelConstr.val, maxVelAfterMaxConstr.val, ConfigProviderService.getLevelDefinition(viewState.getcurClickLevelName()).anagestConfig.threshold, 1, 'Looking for nucleus offset').then(function (resp) {\n            var on20 = resp;\n            ndat[1] = on20 + minp;\n            // minimum velocity after max vel after constriction\n            var minVelAfterMaxVelAfterConstr = ArrayHelperService.findMinMax(selVCol.slice(vdat[1]), 'min');\n            minp = minVelAfterMaxVelAfterConstr.idx + vdat[1];\n            // gesture offset\n            $log.info('Looking for gesture offset');\n            sServObj.interactiveFindThresholds(selVCol.slice(vdat[1], minp + 1), minVelAfterMaxVelAfterConstr.val, maxVelAfterMaxConstr.val, ConfigProviderService.getLevelDefinition(viewState.getcurClickLevelName()).anagestConfig.threshold, -1, 'Looking for gesture offset').then(function (resp) {\n              var off20 = resp;\n              gdat[1] = off20 + vdat[1];\n              // insert points\n              // var insPoint;\n              var curLabel;\n              // console.log(gdat)\n              gdat[0] = Ssffdataservice.calculateSamplePosInVP(colStartSampleNr + gdat[0], sRaSt.sampleRate, sRaSt.startTime);\n              gdat[1] = Ssffdataservice.calculateSamplePosInVP(colStartSampleNr + gdat[1], sRaSt.sampleRate, sRaSt.startTime);\n              curLabel = ConfigProviderService.getLevelDefinition(viewState.getcurClickLevelName()).anagestConfig.gestureOnOffsetLabels[0];\n              var gdat0insPoint = LevelService.insertPoint(viewState.getcurClickLevelName(), gdat[0], curLabel);\n              HistoryService.updateCurChangeObj({\n                'type': 'ESPS',\n                'action': 'insertPoint',\n                'name': viewState.getcurClickLevelName(),\n                'start': gdat[0],\n                'id': gdat0insPoint.id,\n                'pointName': curLabel\n              });\n              curLabel = ConfigProviderService.getLevelDefinition(viewState.getcurClickLevelName()).anagestConfig.gestureOnOffsetLabels[1];\n              var gdat1insPoint = LevelService.insertPoint(viewState.getcurClickLevelName(), gdat[1], curLabel);\n              HistoryService.updateCurChangeObj({\n                'type': 'ESPS',\n                'action': 'insertPoint',\n                'name': viewState.getcurClickLevelName(),\n                'start': gdat[1],\n                'id': gdat1insPoint.id,\n                'pointName': curLabel\n              });\n              // console.log(vdat);\n              vdat[0] = Ssffdataservice.calculateSamplePosInVP(colStartSampleNr + vdat[0], sRaSt.sampleRate, sRaSt.startTime);\n              vdat[1] = Ssffdataservice.calculateSamplePosInVP(colStartSampleNr + vdat[1], sRaSt.sampleRate, sRaSt.startTime);\n              curLabel = ConfigProviderService.getLevelDefinition(viewState.getcurClickLevelName()).anagestConfig.maxVelocityOnOffsetLabels[0];\n              var vdat0insPoint = LevelService.insertPoint(viewState.getcurClickLevelName(), vdat[0], curLabel);\n              HistoryService.updateCurChangeObj({\n                'type': 'ESPS',\n                'action': 'insertPoint',\n                'name': viewState.getcurClickLevelName(),\n                'start': vdat[0],\n                'id': vdat0insPoint.id,\n                'pointName': curLabel\n              });\n              curLabel = ConfigProviderService.getLevelDefinition(viewState.getcurClickLevelName()).anagestConfig.maxVelocityOnOffsetLabels[1];\n              var vdat1insPoint = LevelService.insertPoint(viewState.getcurClickLevelName(), vdat[1], curLabel);\n              HistoryService.updateCurChangeObj({\n                'type': 'ESPS',\n                'action': 'insertPoint',\n                'name': viewState.getcurClickLevelName(),\n                'start': vdat[1],\n                'id': vdat1insPoint.id,\n                'pointName': curLabel\n              });\n              // console.log(ndat);\n              ndat[0] = Ssffdataservice.calculateSamplePosInVP(colStartSampleNr + ndat[0], sRaSt.sampleRate, sRaSt.startTime);\n              ndat[1] = Ssffdataservice.calculateSamplePosInVP(colStartSampleNr + ndat[1], sRaSt.sampleRate, sRaSt.startTime);\n              curLabel = ConfigProviderService.getLevelDefinition(viewState.getcurClickLevelName()).anagestConfig.constrictionPlateauBeginEndLabels[0];\n              var ndat0insPoint = LevelService.insertPoint(viewState.getcurClickLevelName(), ndat[0], curLabel);\n              HistoryService.updateCurChangeObj({\n                'type': 'ESPS',\n                'action': 'insertPoint',\n                'name': viewState.getcurClickLevelName(),\n                'start': ndat[0],\n                'id': ndat0insPoint.id,\n                'pointName': curLabel\n              });\n              curLabel = ConfigProviderService.getLevelDefinition(viewState.getcurClickLevelName()).anagestConfig.constrictionPlateauBeginEndLabels[1];\n              var ndat1insPoint = LevelService.insertPoint(viewState.getcurClickLevelName(), ndat[1], curLabel);\n              HistoryService.updateCurChangeObj({\n                'type': 'ESPS',\n                'action': 'insertPoint',\n                'name': viewState.getcurClickLevelName(),\n                'start': ndat[1],\n                'id': ndat1insPoint.id,\n                'pointName': curLabel\n              });\n              // console.log(cdat);\n              cdat[0] = Ssffdataservice.calculateSamplePosInVP(colStartSampleNr + cdat[0], sRaSt.sampleRate, sRaSt.startTime);\n              curLabel = ConfigProviderService.getLevelDefinition(viewState.getcurClickLevelName()).anagestConfig.maxConstrictionLabel;\n              var cdat0insPoint = LevelService.insertPoint(viewState.getcurClickLevelName(), cdat[0], curLabel);\n              HistoryService.updateCurChangeObj({\n                'type': 'ESPS',\n                'action': 'insertPoint',\n                'name': viewState.getcurClickLevelName(),\n                'start': cdat[0],\n                'id': cdat0insPoint.id,\n                'pointName': curLabel\n              });\n              var linkLevelName = ConfigProviderService.getLevelDefinition(viewState.getcurClickLevelName()).anagestConfig.autoLinkLevelName;\n              var linkLevelDetails = LevelService.getLevelDetails(linkLevelName);\n              var linkLevelLabels = LevelService.getAllLabelsOfLevel(linkLevelDetails);\n              console.log(linkLevelLabels);\n              dialogService.open('views/SelectLabelModal.html', 'SelectLabelModalCtrl', linkLevelLabels).then(function (itemIdx) {\n                var childIDs = [\n                    gdat0insPoint.id,\n                    gdat1insPoint.id,\n                    vdat0insPoint.id,\n                    vdat1insPoint.id,\n                    ndat0insPoint.id,\n                    ndat1insPoint.id,\n                    cdat0insPoint.id\n                  ];\n                LevelService.addLinkToParent(linkLevelDetails.level.items[itemIdx].id, childIDs);\n                HistoryService.updateCurChangeObj({\n                  'type': 'ESPS',\n                  'action': 'LINKTOPARENT',\n                  'parentID': linkLevelDetails.level.items[itemIdx].id,\n                  'childIDs': childIDs\n                });\n                HistoryService.addCurChangeObjToUndoStack();\n              });\n              defer.resolve();\n            });\n          });\n        });\n      }, function () {\n        console.error('rejected duuuude!!!!');\n      });\n      return defer.promise;\n    };\n    /**\n\t\t * find threshold in array (an adapted reimplementation of findth.m by\n\t\t * Phil Hoole Version 17.6.2006)\n\t\t *\n\t\t * @param x\n\t\t * @param minVal\n\t\t * @param maxVal\n\t\t * @param threshold\n\t\t * @param direction\n\t\t * @param descriptions describes the task\n\t\t * @returns promise that resolves to threshold value\n\t\t */\n    sServObj.interactiveFindThresholds = function (x, minVal, maxVal, threshold, direction, description) {\n      // console.log('interactiveFindThresholds');\n      var thdat = minVal + (maxVal - minVal) * threshold;\n      var thdir = direction;\n      thdat = thdat * thdir;\n      var xx = ArrayHelperService.multiplyEachElement(x, thdir);\n      // handle positive/neg.\n      var lx = xx.length;\n      var xsh = xx.slice(1, lx);\n      var loguk = 0;\n      var higuk = lx - 1;\n      // console.log(lx);\n      // console.log(xx);\n      // console.log(xsh);\n      // console.log(loguk);\n      // console.log(higuk);\n      // vz=find((xsh>=thdat)&(xx(1:(lx-1))<thdat));\n      var vz = [];\n      for (var i = 0; i < xx.length; i++) {\n        if (xsh[i] >= thdat && xx[i] < thdat) {\n          vz.push(i);\n        }\n      }\n      // anavv=find(vz>=loguk & vz<=higuk);\n      var anavv = [];\n      for (var i = 0; i < vz.length; i++) {\n        if (vz[i] >= loguk && vz[i] <= higuk) {\n          anavv.push(i);\n        }\n      }\n      if (anavv.length > 1) {\n        defer = $q.defer();\n        var infos = {};\n        infos.description = description;\n        infos.options = [];\n        infos.y = xx;\n        infos.minVal = minVal;\n        infos.maxVal = maxVal;\n        infos.threshold = threshold;\n        for (var i = 0; i < vz.length; i++) {\n          infos.options.push({\n            'thresholdIdx': vz[i],\n            'thresholdValue': xx[i]\n          });\n        }\n        dialogService.open('views/SelectThresholdModal.html', 'SelectThresholdModalCtrl', infos).then(function (resp) {\n          var ap = vz[anavv[resp]];\n          // console.log('-----')\n          // console.log(xx[ap])\n          // console.log(xx[ap + 1])\n          // console.log(ap);\n          // console.log(ap + 1);\n          ap = ArrayHelperService.interp2points(xx[ap], ap, xx[ap + 1], ap + 1, thdat);\n          defer.resolve(ap);\n        });\n        return defer.promise;\n      } else if (anavv.length === 0) {\n        defer = $q.defer();\n        dialogService.open('views/error.html', 'ModalCtrl', 'Could not find any values that step over the threshold!!').then(function () {\n          defer.reject('Could not find any values that step over the threshold!!');\n        });\n        return defer.promise;\n      } else {\n        defer = $q.defer();\n        var ap = vz[anavv[0]];\n        ap = ArrayHelperService.interp2points(xx[ap], ap, xx[ap + 1], ap + 1, thdat);\n        defer.resolve(ap);\n        return defer.promise;\n      }\n    };\n    return sServObj;\n  }\n]);\n'use strict';\n/**\n * @ngdoc directive\n * @name emuWebAppApp.directive:lineChart\n * @description\n * # lineChart\n */\nangular.module('emuwebApp').directive('lineChart', function () {\n  return {\n    restrict: 'E',\n    scope: {\n      data: '=',\n      threshold: '='\n    },\n    link: function postLink(scope, element, attrs) {\n      //////////////////////\n      // watches \n      scope.$watch('data', function () {\n        scope.render(scope.data);\n      }, true);\n      //////////////////////\n      //Set margins, width, and height\n      var margin = {\n          top: 20,\n          right: 20,\n          bottom: 20,\n          left: 40\n        }, width = 400 - margin.left - margin.right, height = 200 - margin.top - margin.bottom;\n      //Create the d3 element and position it based on margins\n      var svg = d3.select(element[0]).append('svg').attr('width', width + margin.left + margin.right).attr('height', height + margin.top + margin.bottom).append('g').attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n      //Create the scales we need for the graph\n      var x = d3.scale.linear().range([\n          0,\n          width\n        ]);\n      var y = d3.scale.linear().range([\n          height,\n          0\n        ]);\n      //Create the axes we need for the graph\n      var xAxis = d3.svg.axis().scale(x).tickSize(5).tickSubdivide(true);\n      var yAxis = d3.svg.axis().scale(y).orient('left');\n      // line drawing function\n      var lineFunc = d3.svg.line().x(function (d) {\n          return x(d.x);\n        }).y(function (d) {\n          return y(d.y);\n        }).interpolate('linear');\n      /**\n\t\t\t\t *\n\t\t\t\t */\n      scope.render = function (data) {\n        //Set our scale's domains\n        // x.domain(data.map(function (d) {\n        // \treturn d.name;\n        // }));\n        // y.domain([0, d3.max(data, function (d) {\n        // \treturn d.count;\n        // })]);\n        x.domain([\n          d3.min(data, function (d) {\n            return d.x;\n          }),\n          d3.max(data, function (d) {\n            return d.x;\n          })\n        ]);\n        y.domain([\n          d3.min(data, function (d) {\n            return d.y;\n          }),\n          d3.max(data, function (d) {\n            return d.y;\n          })\n        ]);\n        //Remove the axes so we can draw updated ones\n        svg.selectAll('g.axis').remove();\n        //Render X axis\n        svg.append('g').attr('class', 'x axis').attr('transform', 'translate(0,' + height + ')').call(xAxis);\n        //Render Y axis\n        svg.append('g').attr('class', 'y axis').call(yAxis);\n        // Render path\n        var lines = svg.append('svg:path').attr('d', lineFunc(data)).attr('stroke', 'red').attr('stroke-width', 1).attr('fill', 'none');\n        // draw threshold SIC SIC SIC... not working yet!\n        svg.append('svg:line').attr('x1', 5).attr('y1', 5).attr('x2', 200).attr('y2', 200).attr('class', 'label-line');\n        var verticalLine = svg.append('line').attr({\n            'x1': x(scope.threshold),\n            'y1': 0,\n            'x2': x(scope.threshold),\n            'y2': height\n          }).attr('stroke', 'steelblue').attr('class', 'verticalLine');  //Create or update the bar data\n                                                                         // var bars = svg.selectAll('.bar').data(data);\n                                                                         // bars.enter()\n                                                                         // \t.append('rect')\n                                                                         // \t.attr('class', 'bar')\n                                                                         // \t.attr('x', function (d) {\n                                                                         // \t\treturn x(d.name);\n                                                                         // \t})\n                                                                         // \t.attr('width', x.rangeBand());\n                                                                         //Animate bars\n                                                                         // bars\n                                                                         // \t.transition()\n                                                                         // \t.duration(1000)\n                                                                         // \t.attr('height', function (d) {\n                                                                         // \t\treturn height - y(d.count);\n                                                                         // \t})\n                                                                         // \t.attr('y', function (d) {\n                                                                         // \t\treturn y(d.count);\n                                                                         // \t})\n      };\n    }\n  };\n});"]}