{"version":3,"file":"emuwebApp.min.js","sources":["emuwebApp.min.js"],"names":["ArrayBuffer","prototype","subarray","offset","length","sub","subView","Int8Array","thisView","this","i","angular","module","config","$locationProvider","html5Mode","service","viewState","sServObj","vals","curDbConfig","embeddedVals","audioGetUrl","labelGetUrl","labelType","fromUrlParams","setVals","data","$","isEmptyObject","forEach","Object","keys","key1","isArray","itm","push","key2","undefined","console","error","getSsffTrackConfig","name","res","ssffTrackDefinitions","tr","getLimsOfTrack","trackName","perspectives","curPerspectiveIdx","signalCanvases","contourLims","cL","ssffTrackName","getContourColorsOfTrack","contourColors","cC","getAssignment","signalName","assign","a","signalCanvasName","getLevelDefinition","levelName","levelDefinitions","ld","controller","$scope","$rootScope","$modal","$log","$compile","$timeout","$q","$window","$document","$location","HistoryService","Iohandlerservice","Soundhandlerservice","ConfigProviderService","fontScaleService","Ssffdataservice","LevelService","dialogService","Textgridparserservice","Espsparserservice","Binarydatamaniphelper","Wavparserservice","Ssffparserservice","Drawhelperservice","Validationservice","Appcachehandler","cps","hists","fontImage","levServ","vs","dials","ssffds","shs","dhs","wps","io","ach","connectBtnLabel","tmp","dbLoaded","is2dCancasesHidden","lastkeycode","bundleList","curUserName","curBndl","lastclickedutt","filterText","windowWidth","outerWidth","demoDbName","firefox","navigator","userAgent","match","checkForNewVersion","element","bind","deleteEditArea","setWindowWidth","$digest","e","keyCode","keyMappings","shift","alt","addCurChangeObjToUndoStack","window","onbeforeunload","main","autoConnect","$on","resetToInitState","searchObject","search","loadFilesForEmbeddedApp","httpGetPath","then","showDropZone","substr","lastIndexOf","getsubmenuOpen","openSubmenu","somethingInProgressTxt","resp","EMUwebAppConfig","validRes","validateJSO","catchMouseForKeyBinding","somethingInProgress","parseWavArrBuf","messWavParser","wavJSO","curViewPort","sS","eS","Data","resetSelect","data2","parseLabelFile","parseMess","annot","setData","lNames","levelDefs","levels","l","type","attributeDefinitions","setCurLevelAttrDefs","levelCanvases","order","setState","errMess","open","status","message","JSON","stringify","loadDefaultConfig","loadSchemas","replies","setSchemas","httpGetDefaultConfig","success","handleDefaultConfigLoaded","header","wsH","initConnect","serverUrl","defaultServerUrl","handleConnectedToWSserver","setspectroSettings","spectrogramSettings","N","rangeFrom","rangeTo","dynamicRange","drawHeatMapColors","preEmphasisFilterFactor","heatMapColorAnchors","setTransitionTime","colors","transitionTime","comMode","getProtocol","protocol","version","getDoUserManagement","doUsrData","innerHandleConnectedToWSserver","getDBconfigFile","getBundleList","bdata","menuBundleClick","bndl","movesAwayFromLastSave","messModal","menuBundleSaveBtnClick","getBundle","bundleData","arrBuff","base64ToArrayBuffer","mediaFile","selectS","selectE","curClickSegments","curClickLevelName","curClickLevelType","asyncParseSsffArr","ssffFiles","ssffJso","annotation","getPermission","defer","formants","el","getAnnotationAndSaveBndl","asyncJso2ssff","messParser","encoding","arrayBufferToBase64","reject","promise","info","getData","saveBundle","resolve","uttIsDisabled","getEnlarge","index","len","getenlarge","Math","floor","getBndlColor","curColor","background-color","color","cursorInTextField","focusInTextField","cursorOutOfTextField","setsubmenuOpen","refreshTimeline","$broadcast","addLevelSegBtnClick","newName","levelLength","level","items","id","getNewId","sampleStart","sampleDur","labels","value","labelCanvasConfig","newSegmentName","addLevel","addObjToUndoStack","action","log","addLevelPointBtnClick","samplePoint","newEventName","renameSelLevelBtnClick","getcurClickLevelName","downloadTextGridBtnClick","asyncToTextGrid","openExport","spectSettingsBtnClick","connectBtnClick","url","openDemoDBbtnClick","nameOfDB","err","aboutBtnClick","clearBtnClick","modalText","isConnected","disconnectWarning","closeConnect","cmdZoomAll","setViewPort","cmdZoomIn","zoomViewPort","cmdZoomOut","cmdZoomLeft","shiftViewPort","cmdZoomRight","cmdZoomSel","cmdPlayView","playFromTo","animatePlayHead","cmdPlaySel","cmdPlayAll","setlastkeycode","c","toggleRightSideMenuHidden","setRightsubmenuOpen","getRightsubmenuOpen","changePerspective","persp","newIdx","getPerspectiveColor","cl","newfiles","wav","grid","dropText","dropDefault","handleLocalFiles","$parent","reader","FileReader","readAsArrayBuffer","onloadend","evt","target","readyState","DONE","result","currentTarget","readAsText","extension","asyncParseTextGrid","traverseFileTreeChrome","item","path","isFile","file","toUpperCase","other","isDirectory","dirReader","createReader","readEntries","entries","traverseFileTreeFirefox","size","directive","$animate","templateUrl","restrict","scope","idx","link","attr","drawLevelDetails","levelDetails","fontSize","font","fontPxSize","curAttrDef","getCurAttrDef","ctx","canvas","getContext","clearRect","width","height","sDist","posS","posE","horizontalText","getSampleDist","scaleY","offsetHeight","getTextImageTwoLines","fontType","labelColor","drawImage","curID","getcurMouseSegment","getcurClickSegments","mTxtImgWidth","getTextImage","getLastImageWidth","zeroTxtImgWidth","endBoundaryColor","fillStyle","startBoundaryColor","curEvt","curLabVal","lab","getPos","fillRect","tW","tX","labelCenter","hlY","strokeStyle","beginPath","moveTo","lineTo","stroke","toString","horizontalSubText1","horizontalSubText2","hst2","perc","round","drawLevelMarkup","selectedLevelColor","drawMovingBoundaryLine","drawCurViewPortSelected","xOffset","segMId","isFirst","getcurMouseisFirst","isLast","getcurMouseisLast","clickedSegs","levelId","cs","selectedSegmentColor","getcurMouseLevelName","selectedBoundaryColor","getcurMouseLevelType","find","levelCanvasContainer","levelDef","backgroundCanvas","background","levelColor","$watch","newValue","oldValue","changeCurAttrDef","attrDefName","setCurAttrDef","hasClass","addClass","finishedAnim","removeClass","getAttrDefBtnColor","updateView","setcurMouseSegment","replace","changeAttrDef","alert","attrs","drawPlayHead","markupCanvas","playHeadAnimationInfos","posCur","curS","selectedAreaColor","drawVpOsciMarkup","reset","drawViewPortTimes","canvasLength","redraw","allPeakVals","calculatePeaks","osciPeaks","freshRedrawDrawOsciOnCanvas","currentBundleName","drawPreview","initialized","selectedBorderColor","closePath","border","newVal","oldVal","submenuOpen","pcmpp","pcmperpixel","canvas0","drawSpectMarkup","markupCtx","canvas1","drawMinMaxAndName","spectroSettings","killSpectroRenderingThread","context","primeWorker","terminate","setupEvent","imageData","createImageData","addEventListener","event","myStep","Uint8ClampedArray","img","set","putImageData","drawSpectro","buffer","startSpectroRenderingThread","Worker","spectroWorker","parseData","Float32Array","windowLength","postMessage","cmd","alpha","freq","freqLow","start","end","dynRangeInDB","pixelRatio","devicePixelRatio","sampleRate","SampleRate","streamChannels","NumChannels","transparency","stream","URL","webkitURL","exportData","exportName","cancel","close","getBlob","Blob","export","SaveToDisk","createObjectURL","updateHistoryService","fileURL","fileName","save","document","createElement","setAttribute","href","innerHTML","style","display","body","appendChild","click","download","createEvent","initEvent","dispatchEvent","revokeObjectURL","factory","myWindow","BARTLETT","BARTLETTHANN","BLACKMAN","COSINE","GAUSS","HAMMING","HANN","LANCZOS","RECTANGULAR","TRIANGULAR","curLevelAttrDefs","initialize","dragBarActive","dragBarHeight","endFreezeSample","timelineSize","editing","rightSubmenuOpen","curMousePosSample","curMouseLevelName","curMouseLevelType","curPreselColumnSample","curCorrectionToolNr","curClickLevelIndex","TransitionTime","movingBoundary","movingBoundarySample","curTaskPercCompl","mouseInEmuWebApp","states","noDBorFilesloaded","permittedActions","loadingSaving","labeling","modalShowing","prevState","curState","actionName","indexOf","b","nameOrObj","updatePlayHead","timestamp","player","isPlaying","requestAnimationFrame","samplesPassed","$apply","startS","endS","select","getViewPort","rfrom","rto","dyn","win","hm","preEmph","hmColorAnchors","parseInt","setWindowFunction","getSelect","selectDependent","selectLevel","next","Levelserv","curLev","now","getLevelDetails","setcurClickLevel","idxOfNow","selectBoundary","getWindowFunctions","getdragBarActive","setdragBarActive","getdragBarHeight","setdragBarHeight","w","s","setenlarge","getTransitionTime","levelID","levelType","levelIndex","setcurClickLevelName","setcurClickLevelType","getcurClickLevelType","getcurClickLevelIndex","getcurClickNeighbours","curClickNeighbours","setcurMouseLevelName","setcurMouseLevelType","segment","neighbour","x","curMouseSegment","curMouseX","curMouseNeighbours","curMouseisFirst","curMouseisLast","getcurMouseNeighbours","selectSegmentsInSelection","levelData","min","Infinity","max","itemInSel","getItemsInSelection","setcurClickSegmentMultiple","itemsInRange","rangeStart","rangeEnd","t","setcurClickSegment","left","right","entry","empty","front","back","sort","sortbyid","getselectedRange","getfirstClickSegment","getselected","isEditing","setEditing","n","countSelected","getCurrentSample","getCurrentPercent","sample","getSamplesPerPixelVal","parseFloat","originalEvent","pow","k","substring","getViewPortStartTime","getViewPortEndTime","getSelectedStartTime","getSelectedEndTime","sSample","eSample","oldStart","oldEnd","abs","zoomIn","newStartS","newEndS","curMouseMoveSegmentStart","seg","d","isLastSeg","getItemDetails","getLastItem","d1","d2","shiftRight","curAttrDefName","newAttrDefName","ad","curAttrDefIndex","getCurAttrIndex","getX","offsetX","layerX","clientWidth","getY","offsetY","layerY","clientHeight","setLastClick","curMouseSampleNrInView","lastEventClick","getClosestItem","current","nearest","setlasteditArea","setlasteditAreaElem","parent","$index","lastPCM","setLastRightClick","setLastDblClick","openEditArea","setLastMove","doChange","lastEventMove","lastNeighboursMove","getItemNeighboursFromLevel","preventDefault","restrictions","editItemName","moveLine","samplesPerPixel","moveBy","zoomEventMove","ceil","lastItem","getItemFromLevelById","mbutton","buttons","which","editItemSize","shiftKey","moveBoundary","updateCurChangeObj","movedBy","movePoint","altKey","moveSegment","AnagestService","applyKeyCode","code","createNewItemAtSelection","editingElement","getlastID","attrIndex","getlasteditArea","val","renameLabel","esc","stopPropagation","zoomAll","zoomOut","shiftViewPortLeft","shiftViewPortRight","zoomSel","playEntireFile","playback","playAllInView","playSelected","selectFirstContourCorrectionTool","correctionTool","selectSecondContourCorrectionTool","selectThirdContourCorrectionTool","selectFourthContourCorrectionTool","selectNoContourCorrectionTool","levelUp","levelDown","snapBoundaryToNearestTopBoundary","mouseSeg","neighbor","minDist","snapBoundary","position","snapBoundaryToNearestBottomBoundary","snapBoundaryToNearestZeroCrossing","dist","calcDistanceToNearestZeroCrossing","levelname","expandSelSegmentsRight","addTimeMode","changeTime","addTimeValue","expandSegment","rightSide","expandSelSegmentsLeft","shrinkSelSegmentsLeft","shrinkSelSegmentsRight","toggleSideBarLeft","activeButtons","openMenu","toggleSideBarRight","selPrevItem","idLeft","idRight","selNextItem","selNextPrevItem","addItem","getlasteditAreaElem","insSeg","insertSegment","ret","ids","segName","anagestConfig","insPoint","insertPoint","alreadyExists","pointName","insertAnagestEvents","undo","getCurrentStack","redo","deletePreselBoundary","deleteItem","deletedSegment","deleteSegments","clickSeg","deleteItemBoundary","deleteBoundary","deletedPoint","deletePoint","metaKey","ctrlKey","safeApply","fn","phase","$root","$$phase","off","delete","elem","elemHeight","deleteButton","children","saveButton","css","deleteSingleLevel","hide","saveSingleLevel","show","enlarge","asyncParseJSO","startPCM","$http","Websockethandler","prom","get","respType","responseType","getProm","logOnUser","pwd","string","annotates","fileType","asyncParseEsps","setPlayerSrc","buf","base64String","src","resetPlayerSrcFromTo","endSample","bytePerSample","BitsPerSample","origArrBuf","dv","DataView","setUint32","newData","Uint8Array","byteLength","pause","play","atts","handleUpdate","assTrackName","ass","col","getColumnOfTrack","columnName","sRaSt","getSampleRateAndStartTimeOfTrack","minMaxLims","drawValues","startTime","sR","sT","minVal","maxVal","_minVal","_maxVal","startTimeVP","endTimeVP","colStartSampleNr","colEndSampleNr","nrOfSamples","curSampleArrs","values","slice","y","curSampleInCol","curSampleInColTime","contourVal","contourNr","minContourIdx","maxContourIdx","contColors","selectedContourColor","leftBorder","leftVal","curArr","curArrIdx","arc","PI","rightBorder","rightVal","txt","crossHairsColor","Date","$observe","worker","ssffArray","ssffArr","jso","switchMarkupContext","leave","ssffTrackname","drawCrossHairs","setSelectDrag","curMouseSample","dragStartSample","dragEndSample","bundleName","mouseX","curMouseTime","curMouseSampleTime","fill","copy","updateObj","sampleBlockIdx","sampleIdx","key","getScale","str","scale","measureText","getScaleWidth","str1","str2","scaleX","drawFrame","prevPeak","h","prevH","prevX","prevY","osciColor","relData","samplePerPx","numberOfChannels","peaks","minPeak","maxPeak","apply","Array","call","curPxIdx","avrVal","sum","p","peak","hDbS","sNr","drawSampleNrs","strokeText","fillText","drawZeroLine","zeroLineColor","vendor","setLineDash","zeroLineY","drawTimeAndSamples","space","offsetWidth","mouseEvt","unit","trackname","mouseY","mouseFreq","s1","s2","verticalText","smallFontSize","th","trackNameImg","labelTxtImg","sTime","eTime","applyChange","changeObj","applyOldVal","cur","renameLevel","newname","deleteLevel","deleteBoundaryInvers","deleteSegmentsInvers","insertSegmentInvers","undoStack","redoStack","curChangeObj","dataObj","dataKey","String","obj","tmpObj","oldChangeObj","pop","getNrOfPossibleUndos","buffLength","textGrid","rand","random","new","newHash","lastTextWidth","spaceTop","ctxOriginal","text","restore","text2","alignLeft","esps","loginData","username","password","errorMsg","tryLogin","Columns","calculateSamplePosInVP","colSampleNr","sampleTime","audioSample","getLabelIdx","labelIdx","maxItemID","lasteditArea","lasteditAreaElem","raiseId","amount","lowerId","curLevel","num","getOrderById","eid","getIdByOrder","details","getNextItem","foundItm","remove","clientOffset","offsetLeft","top","offsetTop","editText","zoom","createEditArea","createSelection","field","createTextRange","selRange","collapse","moveStart","moveEnd","setSelectionRange","selectionStart","selectionEnd","focus","label","labelid","textid","prepend","class","ng-model","autofocus","padding-top","insertItemDetails","labelname","duration","newElement","attrdefs","splice","updateSegItemInLevel","setPointDetails","firstid","lastid","sampleNr","maximum","spaceLower","spaceHigher","lvl","originalLevel","newLabelName","oldname","segments","lastNeighbours","timeRight","timeLeft","firstSegment","firstOrder","lastSegment","neighbours","deleteOrder","diff2","startOrder","diff","newLabel","startID","newStart","endID","pos","toDelete","last","retOrder","retEvt","oldName","toTop","neighTd","absDist","sampleTarget","absMinDist","thisTd","tIdx","orig","ln","origRight","origLeft","orderPoints","first","tempItem","allow","lastLength","distRight","distLeft","getAllLabelsOfLevel","j","addLinkToParent","parentId","childIds","chId","links","fromID","toID","inverseAddLinkToParent","linkIdx","uuid","wsonopen","connected","conPromise","wsonmessage","listener","fromJson","wsonerror","wsonclose","wasClean","sendRequest","request","callbackId","getCallbackId","callbacks","time","cb","callbackID","ws","send","toJson","tOutResp","serverTimeoutInterval","messageObj","hasOwnProperty","handleReceivedESPS","handleReceivedSSFF","newUUID","WebSocket","onopen","onmessage","onerror","onclose","userName","serverInfos","Url","connectionError","tryConnection","stringBase64","binaryString","atob","bytes","ascii","charCodeAt","binary","fromCharCode","btoa","modalInstance","templatefile","argCtrl","passedIn","backdrop","keyboard","passedInTxt","passedInOpts","handleUpdatereadyEvent","appCache","swapCache","location","reload","applicationCache","update","getStrRep","options","selWindowInfo","windowLengths","modalVals","getColorOfAnchor","anchorNr","curStyle","saveSpectroSettings","confirm","ArrayHelperService","myData","convertArrayToXYjsoArray","filter","input","regex","patt","RegExp","toLowerCase","out","test","patt1","patt2","passedOutTxt","var","saveChanges","discardChanges","showMenu","showTwod","animation","transclude","showTwoDimCans","template","panes","bottomRightResizePane","addPane","pane","setBottomRightResizePane","dragBottomRightResizePaneTopResizer","dragBottomRightResizePaneLeftResizer","dragBottomRightResizePaneCornerResizer","handler","pane1","pane2","pane3","bottomRightResizePaneTopResizer","bottomRightResizePaneLeftResizer","bottomRightResizePaneCornerResizer","pane1Min","minSize","pane2Min","dragSplitPaneResizer","drag","after","ev","bounds","getBoundingClientRect","bottom","clientY","clientX","require","bgSplitterCtrl","typeclass","drawSsffTrackMarkup","drawEpgGrid","binValStrArr","gridWidth","gridHeight","sInterv","curFrame","elIdx","split","reverse","binStr","binStrIdx","setGlobalMinMaxVals","dD","twoDimCanvases","twoDimDrawingDefinitions","dots","trConf","xSsffTrack","xCol","globalMinX","globalMaxX","ySsffTrack","yCol","globalMinY","globalMaxY","drawDots","tw","xsRaSt","ysRaSt","curMousePosTime","degrees","rotate","allDots","startSample","xContourNr","yContourNr","startPoint","endPoint","f","connectLines","fromDot","toDot","dragEnterLeave","dropClass","handleDragOver","dropAllowed","dropFiles","dropParsingStarted","File","FileList","dt","dataTransfer","files","webkitGetAsEntry","dropErrorFileType","dropErrorAPI","dropNotAllowed","handleFilesonChange","loadedFiles","fileDialog","schemasJsos","names","proms","all","schemaArr","schemaName","schema","tv4","validate","convertToAbsValues","arr","multiplyEachElement","interp2points","x0","y0","x1","y1","findMinMax","minOrMax","flattenArrayOfArray","arrOfArrs","merged","concat","xyArray","verticalPosSsffTrackName","vTrackName","velocitySsffTrackName","vTr","vCol","flatColVals","flatVcolVals","gdat","NaN","vdat","ndat","cdat","startTimeSel","endTimeSel","selCol","selVCol","maxVerticalPos","maxVelBeforeMaxConstr","minVelBeforeMaxVel","interactiveFindThresholds","threshold","on20","minVelBetwMaxVel1maxConstr","minp","off20","maxVelAfterMaxConstr","minBetwMaxConstrMaxVelConstr","minVelAfterMaxVelAfterConstr","curLabel","gestureOnOffsetLabels","gdat0insPoint","gdat1insPoint","maxVelocityOnOffsetLabels","vdat0insPoint","vdat1insPoint","constrictionPlateauBeginEndLabels","ndat0insPoint","ndat1insPoint","maxConstrictionLabel","cdat0insPoint","linkLevelName","autoLinkLevelName","linkLevelDetails","linkLevelLabels","itemIdx","childIDs","parentID","direction","description","thdat","thdir","xx","lx","xsh","loguk","higuk","vz","anavv","infos","thresholdIdx","thresholdValue","ap","render","margin","svg","d3","append","linear","range","xAxis","axis","tickSize","tickSubdivide","yAxis","orient","lineFunc","line","interpolate","domain","selectAll","x2","y2"],"mappings":"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","sourcesContent":["'use strict';\n//expand ArrayBuffer with subarray function\nArrayBuffer.prototype.subarray = function (offset, length) {\n  var sub = new ArrayBuffer(length);\n  var subView = new Int8Array(sub);\n  var thisView = new Int8Array(this);\n  for (var i = 0; i < length; i++) {\n    subView[i] = thisView[offset + i];\n  }\n  return sub;\n};\n'use strict';\nangular.module('emuwebApp', [\n  'ui',\n  'ui.bootstrap',\n  'ngAnimate'\n]).config([\n  '$locationProvider',\n  function ($locationProvider) {\n    // $routeProvider\n    //   .when('/', {\n    //     templateUrl: 'views/main.html'\n    //   })\n    //   .otherwise({\n    //     redirectTo: '/'\n    //   });\n    $locationProvider.html5Mode(true);\n  }\n]);\n'use strict';\nangular.module('emuwebApp').service('ConfigProviderService', [\n  'viewState',\n  function (viewState) {\n    // shared service object\n    var sServObj = {};\n    sServObj.vals = {};\n    sServObj.curDbConfig = {};\n    // embedded values -> if these are set this overrides the normal config  \n    sServObj.embeddedVals = {\n      audioGetUrl: '',\n      labelGetUrl: '',\n      labelType: '',\n      fromUrlParams: false\n    };\n    /**\n\t\t * depth of 2 = max\n\t\t */\n    sServObj.setVals = function (data) {\n      if ($.isEmptyObject(sServObj.vals)) {\n        sServObj.vals = data;\n      } else {\n        angular.forEach(Object.keys(data), function (key1) {\n          // if array... overwrite entire thing!\n          if (angular.isArray(sServObj.vals[key1])) {\n            //empty array\n            sServObj.vals[key1] = [];\n            angular.forEach(data[key1], function (itm) {\n              sServObj.vals[key1].push(itm);\n            });\n          } else {\n            angular.forEach(Object.keys(data[key1]), function (key2) {\n              if (sServObj.vals[key1][key2] !== undefined) {\n                sServObj.vals[key1][key2] = data[key1][key2];\n              } else {\n                console.error('BAD ENTRY IN CONFIG! Key1: ' + key1 + ' key2: ' + key2);\n              }\n            });\n          }\n        });\n      }\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.getSsffTrackConfig = function (name) {\n      var res;\n      if (sServObj.curDbConfig.ssffTrackDefinitions !== undefined) {\n        angular.forEach(sServObj.curDbConfig.ssffTrackDefinitions, function (tr) {\n          if (tr.name === name) {\n            res = tr;\n          }\n        });\n      }\n      return res;\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.getLimsOfTrack = function (trackName) {\n      var res = {};\n      angular.forEach(sServObj.vals.perspectives[viewState.curPerspectiveIdx].signalCanvases.contourLims, function (cL) {\n        if (cL.ssffTrackName === trackName) {\n          res = cL;\n        }\n      });\n      return res;\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.getContourColorsOfTrack = function (trackName) {\n      var res;\n      angular.forEach(sServObj.vals.perspectives[viewState.curPerspectiveIdx].signalCanvases.contourColors, function (cC) {\n        if (cC.ssffTrackName === trackName) {\n          res = cC;\n        }\n      });\n      return res;\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.getAssignment = function (signalName) {\n      var res = {};\n      angular.forEach(sServObj.vals.perspectives[viewState.curPerspectiveIdx].signalCanvases.assign, function (a) {\n        if (a.signalCanvasName === signalName) {\n          res = a;\n        }\n      });\n      return res;\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.getLevelDefinition = function (levelName) {\n      var res = {};\n      angular.forEach(sServObj.curDbConfig.levelDefinitions, function (ld) {\n        if (ld.name === levelName) {\n          res = ld;\n        }\n      });\n      return res;\n    };\n    return sServObj;\n  }\n]);\n'use strict';\nangular.module('emuwebApp').controller('MainCtrl', [\n  '$scope',\n  '$rootScope',\n  '$modal',\n  '$log',\n  '$compile',\n  '$timeout',\n  '$q',\n  '$window',\n  '$document',\n  '$location',\n  'viewState',\n  'HistoryService',\n  'Iohandlerservice',\n  'Soundhandlerservice',\n  'ConfigProviderService',\n  'fontScaleService',\n  'Ssffdataservice',\n  'LevelService',\n  'dialogService',\n  'Textgridparserservice',\n  'Espsparserservice',\n  'Binarydatamaniphelper',\n  'Wavparserservice',\n  'Ssffparserservice',\n  'Drawhelperservice',\n  'Validationservice',\n  'Appcachehandler',\n  function ($scope, $rootScope, $modal, $log, $compile, $timeout, $q, $window, $document, $location, viewState, HistoryService, Iohandlerservice, Soundhandlerservice, ConfigProviderService, fontScaleService, Ssffdataservice, LevelService, dialogService, Textgridparserservice, Espsparserservice, Binarydatamaniphelper, Wavparserservice, Ssffparserservice, Drawhelperservice, Validationservice, Appcachehandler) {\n    // hook up services to use abbreviated forms\n    $scope.cps = ConfigProviderService;\n    $scope.hists = HistoryService;\n    $scope.fontImage = fontScaleService;\n    $scope.levServ = LevelService;\n    $scope.vs = viewState;\n    $scope.dials = dialogService;\n    $scope.ssffds = Ssffdataservice;\n    $scope.shs = Soundhandlerservice;\n    $scope.dhs = Drawhelperservice;\n    $scope.wps = Wavparserservice;\n    $scope.io = Iohandlerservice;\n    $scope.ach = Appcachehandler;\n    // init vars\n    $scope.connectBtnLabel = 'connect';\n    $scope.tmp = {};\n    $scope.dbLoaded = false;\n    $scope.is2dCancasesHidden = true;\n    $scope.lastkeycode = 'N/A';\n    $scope.bundleList = [];\n    $scope.curUserName = '';\n    $scope.curBndl = {};\n    $scope.lastclickedutt = null;\n    $scope.filterText = '';\n    $scope.windowWidth = $window.outerWidth;\n    $scope.demoDbName = '';\n    $scope.firefox = navigator.userAgent.match(/Firefox/i) ? true : false;\n    // check for new version\n    $scope.ach.checkForNewVersion();\n    //////////////\n    // bindings\n    // bind window resize event\n    angular.element($window).bind('resize', function () {\n      LevelService.deleteEditArea();\n      viewState.setWindowWidth($window.outerWidth);\n      $scope.$digest();\n    });\n    // bind shift/alt keyups for history\n    angular.element($window).bind('keyup', function (e) {\n      if (e.keyCode === ConfigProviderService.vals.keyMappings.shift || e.keyCode === ConfigProviderService.vals.keyMappings.alt) {\n        HistoryService.addCurChangeObjToUndoStack();\n        $scope.$digest();\n      }\n    });\n    // Take care of preventing navigation out of app (only if something is loaded, not in embedded mode and not developing (auto connecting))\n    window.onbeforeunload = function () {\n      if (ConfigProviderService.embeddedVals.audioGetUrl === '' && $scope.bundleList.length > 0 && !ConfigProviderService.vals.main.autoConnect) {\n        return 'Do you really wish to leave/reload the EMU-webApp? All unsaved changes will be lost...';\n      }\n    };\n    //////////////\n    // watches\n    // watch if embedded override (if attributes are set on emuwebapp tag)\n    // $scope.$watch('cps.embeddedVals.audioGetUrl', function (val) {\n    // \tif (val !== undefined && val !== '') {\n    // \t\t// check if both are set\n    // \t\t$scope.loadFilesForEmbeddedApp();\n    // \t}\n    // }, true);\n    //\n    //////////////\n    /////////////\n    // listens\n    // listen for connectionDisrupted event -> I don't like listens but in this case it might me the way to go...\n    $scope.$on('connectionDisrupted', function (event, args) {\n      $scope.resetToInitState();\n    });\n    //\n    ////////////\n    // check if URL parameters are set -> if so set embedded flags!\n    var searchObject = $location.search();\n    if (searchObject['audioGetUrl'] && searchObject['labelGetUrl'] && searchObject['labelType']) {\n      ConfigProviderService.embeddedVals.audioGetUrl = searchObject.audioGetUrl;\n      ConfigProviderService.embeddedVals.labelGetUrl = searchObject.labelGetUrl;\n      ConfigProviderService.embeddedVals.labelType = searchObject.labelType;\n      ConfigProviderService.embeddedVals.fromUrlParams = true;\n    }\n    ;\n    /**\n\t\t *\n\t\t */\n    $scope.loadFilesForEmbeddedApp = function () {\n      if (ConfigProviderService.embeddedVals.audioGetUrl) {\n        Iohandlerservice.httpGetPath(ConfigProviderService.embeddedVals.audioGetUrl, 'arraybuffer').then(function (data) {\n          viewState.showDropZone = false;\n          // set bundle name\n          var tmp = ConfigProviderService.embeddedVals.audioGetUrl;\n          $scope.curBndl.name = tmp.substr(0, tmp.lastIndexOf('.')).substr(tmp.lastIndexOf('/') + 1, tmp.length);\n          //hide menu\n          if (viewState.getsubmenuOpen()) {\n            $scope.openSubmenu();\n          }\n          viewState.somethingInProgressTxt = 'Loading DB config...';\n          // then get the DBconfigFile\n          Iohandlerservice.httpGetPath('configFiles/embedded_emuwebappConfig.json').then(function (resp) {\n            // first element of perspectives is default perspective\n            viewState.curPerspectiveIdx = 0;\n            ConfigProviderService.setVals(resp.data.EMUwebAppConfig);\n            // validate emuwebappConfigSchema\n            delete resp.data.EMUwebAppConfig;\n            // delete to avoid duplicate\n            var validRes = Validationservice.validateJSO('emuwebappConfigSchema', ConfigProviderService.vals);\n            if (validRes === true) {\n              // turn of keybinding only on mouseover\n              if (ConfigProviderService.embeddedVals.fromUrlParams) {\n                ConfigProviderService.vals.main.catchMouseForKeyBinding = false;\n              }\n              ConfigProviderService.curDbConfig = resp.data;\n              // validate DBconfigFileSchema!\n              validRes = Validationservice.validateJSO('DBconfigFileSchema', ConfigProviderService.curDbConfig);\n              if (validRes === true) {\n                // set wav file\n                viewState.somethingInProgress = true;\n                viewState.somethingInProgressTxt = 'Parsing WAV file...';\n                Wavparserservice.parseWavArrBuf(data.data).then(function (messWavParser) {\n                  var wavJSO = messWavParser;\n                  viewState.curViewPort.sS = 0;\n                  viewState.curViewPort.eS = wavJSO.Data.length;\n                  viewState.resetSelect();\n                  Soundhandlerservice.wavJSO = wavJSO;\n                  // get + parse file\n                  Iohandlerservice.httpGetPath(ConfigProviderService.embeddedVals.labelGetUrl, 'utf-8').then(function (data2) {\n                    viewState.somethingInProgressTxt = 'Parsing ' + ConfigProviderService.embeddedVals.labelType + ' file...';\n                    Iohandlerservice.parseLabelFile(data2.data, ConfigProviderService.embeddedVals.labelGetUrl, 'embeddedTextGrid', ConfigProviderService.embeddedVals.labelType).then(function (parseMess) {\n                      var annot = parseMess.data;\n                      LevelService.setData(annot);\n                      var lNames = [];\n                      var levelDefs = [];\n                      annot.levels.forEach(function (l) {\n                        lNames.push(l.name);\n                        levelDefs.push({\n                          'name': l.name,\n                          'type': l.type,\n                          'attributeDefinitions': {\n                            'name': l.name,\n                            'type': 'string'\n                          }\n                        });\n                      });\n                      // set level defs\n                      ConfigProviderService.curDbConfig.levelDefinitions = levelDefs;\n                      viewState.setCurLevelAttrDefs(ConfigProviderService.curDbConfig.levelDefinitions);\n                      ConfigProviderService.vals.perspectives[viewState.curPerspectiveIdx].levelCanvases.order = lNames;\n                      viewState.somethingInProgressTxt = 'Done!';\n                      viewState.somethingInProgress = false;\n                      viewState.setState('labeling');  // close submenu... \n                                                       // $scope.openSubmenu();\n                    }, function (errMess) {\n                      dialogService.open('views/error.html', 'ModalCtrl', 'Error parsing wav file: ' + errMess.status.message);\n                    });\n                  }, function (errMess) {\n                    dialogService.open('views/error.html', 'ModalCtrl', 'Could not get label file: ' + ConfigProviderService.embeddedVals.labelGetUrl + ' ERROR ' + JSON.stringify(errMess, null, 4));\n                  });\n                }, function (errMess) {\n                  dialogService.open('views/error.html', 'ModalCtrl', 'Error parsing wav file: ' + errMess.status.message);\n                });\n              } else {\n                dialogService.open('views/error.html', 'ModalCtrl', 'Error validating DBconfig: ' + JSON.stringify(validRes, null, 4));\n              }\n            } else {\n              dialogService.open('views/error.html', 'ModalCtrl', 'Error validating ConfigProviderService.vals (emuwebappConfig data) after applying changes of newly loaded config (most likely due to wrong entry...): ' + JSON.stringify(validRes, null, 4));\n            }\n          }, function (errMess) {\n            dialogService.open('views/error.html', 'ModalCtrl', 'Could not get embedded_config.json: ' + errMess);\n          });\n        }, function (errMess) {\n          dialogService.open('views/error.html', 'ModalCtrl', 'Could not get audio file:' + ConfigProviderService.embeddedVals.audioGetUrl + ' ERROR: ' + JSON.stringify(errMess, null, 4));\n        });\n      }\n    };\n    /**\n\t\t * init load of config files\n\t\t */\n    $scope.loadDefaultConfig = function () {\n      viewState.somethingInProgress = true;\n      viewState.somethingInProgressTxt = 'Loading schema files';\n      // load schemas first\n      Validationservice.loadSchemas().then(function (replies) {\n        Validationservice.setSchemas(replies);\n        Iohandlerservice.httpGetDefaultConfig().success(function (data) {\n          viewState.somethingInProgressTxt = 'Validating emuwebappConfig';\n          var validRes = Validationservice.validateJSO('emuwebappConfigSchema', data);\n          if (validRes === true) {\n            ConfigProviderService.setVals(data);\n            $scope.handleDefaultConfigLoaded();\n            // loadFilesForEmbeddedApp if these are set \n            $scope.loadFilesForEmbeddedApp();\n            viewState.somethingInProgress = false;\n          } else {\n            dialogService.open('views/error.html', 'ModalCtrl', 'Error validating emuwebappConfigSchema: ' + JSON.stringify(validRes, null, 4)).then(function () {\n              $scope.resetToInitState();\n            });\n          }\n        }).error(function (data, status, header, config) {\n          dialogService.open('views/error.html', 'ModalCtrl', 'Could not get defaultConfig for EMU-webApp: ' + ' status: ' + status + ' header: ' + header + ' config ' + config).then(function () {\n            $scope.resetToInitState();\n          });\n        });\n      }, function (errMess) {\n        dialogService.open('views/error.html', 'ModalCtrl', 'Error loading schema file: ' + JSON.stringify(errMess, null, 4)).then(function () {\n          $scope.resetToInitState();\n        });\n      });\n    };\n    // call function on init\n    $scope.loadDefaultConfig();\n    /**\n\t\t * function called after default config was loaded\n\t\t */\n    $scope.handleDefaultConfigLoaded = function () {\n      if (!viewState.getsubmenuOpen()) {\n        $scope.openSubmenu();\n      }\n      if (ConfigProviderService.vals.main.autoConnect) {\n        Iohandlerservice.wsH.initConnect(ConfigProviderService.vals.main.serverUrl).then(function (message) {\n          if (message.type === 'error') {\n            dialogService.open('views/error.html', 'ModalCtrl', 'Could not connect to websocket server: ' + ConfigProviderService.vals.main.defaultServerUrl);\n          } else {\n            $scope.handleConnectedToWSserver();\n          }\n        });\n      }\n      // init loading of files for testing\n      viewState.setspectroSettings(ConfigProviderService.vals.spectrogramSettings.N, ConfigProviderService.vals.spectrogramSettings.rangeFrom, ConfigProviderService.vals.spectrogramSettings.rangeTo, ConfigProviderService.vals.spectrogramSettings.dynamicRange, ConfigProviderService.vals.spectrogramSettings.window, ConfigProviderService.vals.spectrogramSettings.drawHeatMapColors, ConfigProviderService.vals.spectrogramSettings.preEmphasisFilterFactor, ConfigProviderService.vals.spectrogramSettings.heatMapColorAnchors);\n      // setting transition values\n      viewState.setTransitionTime(ConfigProviderService.vals.colors.transitionTime / 1000);\n    };\n    /**\n\t\t * function is called after websocket connection\n\t\t * has been established. It executes the protocol\n\t\t * and loads the first bundle in the bundle list (= default behavior).\n\t\t */\n    $scope.handleConnectedToWSserver = function () {\n      // hide drop zone \n      viewState.showDropZone = false;\n      ConfigProviderService.vals.main.comMode = 'WS';\n      viewState.somethingInProgress = true;\n      viewState.somethingInProgressTxt = 'Checking protocol...';\n      // Check if server speaks the same protocol\n      Iohandlerservice.getProtocol().then(function (res) {\n        if (res.protocol === 'EMU-webApp-websocket-protocol' && res.version === '0.0.1') {\n          viewState.somethingInProgressTxt = 'Checking user management...';\n          // then ask if server does user management\n          Iohandlerservice.getDoUserManagement().then(function (doUsrData) {\n            if (doUsrData === 'NO') {\n              $scope.innerHandleConnectedToWSserver();\n            } else {\n              // show user management error \n              dialogService.open('views/loginModal.html', 'LoginCtrl').then(function (res) {\n                if (res) {\n                  $scope.innerHandleConnectedToWSserver();\n                } else {\n                  $scope.resetToInitState();\n                }\n              });\n            }\n          });\n        } else {\n          // show protocol error and disconnect from server\n          dialogService.open('views/error.html', 'ModalCtrl', 'Could not connect to websocket server: ' + ConfigProviderService.vals.main.serverUrl + '. It does not speak the same protocol as this client. Its protocol answer was: \"' + res.protocol + '\" with the version: \"' + res.version + '\"').then(function () {\n            $scope.resetToInitState();\n          });\n        }\n      });\n    };\n    /**\n\t\t * to avoid redundant code...\n\t\t */\n    $scope.innerHandleConnectedToWSserver = function () {\n      viewState.somethingInProgressTxt = 'Loading DB config...';\n      // then get the DBconfigFile\n      Iohandlerservice.getDBconfigFile().then(function (data) {\n        // first element of perspectives is default perspective\n        viewState.curPerspectiveIdx = 0;\n        ConfigProviderService.setVals(data.EMUwebAppConfig);\n        delete data.EMUwebAppConfig;\n        // delete to avoid duplicate\n        var validRes = Validationservice.validateJSO('emuwebappConfigSchema', ConfigProviderService.vals);\n        if (validRes === true) {\n          ConfigProviderService.curDbConfig = data;\n          viewState.setCurLevelAttrDefs(ConfigProviderService.curDbConfig.levelDefinitions);\n          validRes = Validationservice.validateJSO('DBconfigFileSchema', data);\n          if (validRes === true) {\n            // then get the DBconfigFile\n            viewState.somethingInProgressTxt = 'Loading bundle list...';\n            Iohandlerservice.getBundleList().then(function (bdata) {\n              validRes = Validationservice.validateJSO('bundleListSchema', bdata);\n              if (validRes === true) {\n                $scope.bundleList = bdata;\n                // then load first bundle in list\n                $scope.menuBundleClick($scope.bundleList[0]);\n              } else {\n                dialogService.open('views/error.html', 'ModalCtrl', 'Error validating bundleList: ' + JSON.stringify(validRes, null, 4)).then(function () {\n                  $scope.resetToInitState();\n                });\n              }\n            });\n          } else {\n            dialogService.open('views/error.html', 'ModalCtrl', 'Error validating DBconfig: ' + JSON.stringify(validRes, null, 4)).then(function () {\n              $scope.resetToInitState();\n            });\n          }\n        } else {\n          dialogService.open('views/error.html', 'ModalCtrl', 'Error validating ConfigProviderService.vals (emuwebappConfig data) after applying changes of newly loaded config (most likely due to wrong entry...): ' + JSON.stringify(validRes, null, 4)).then(function () {\n            $scope.resetToInitState();\n          });\n        }\n      });\n    };\n    /**\n\t\t * Handle click on bundle in side menu. It is\n\t\t * also used as a general loadBundle method.\n\t\t * @param bndl object containing name attribute of currently loaded bundle\n\t\t */\n    $scope.menuBundleClick = function (bndl) {\n      // check if bndl has to be saved\n      if (HistoryService.movesAwayFromLastSave !== 0 && ConfigProviderService.vals.main.comMode !== 'DEMO') {\n        if (bndl !== $scope.curBndl) {\n          $scope.lastclickedutt = bndl;\n          dialogService.open('views/saveChanges.html', 'ModalCtrl', bndl.name).then(function (messModal) {\n            if (messModal === 'saveChanges') {\n              // save current bundle\n              $scope.menuBundleSaveBtnClick().then(function () {\n                // load new bundle\n                $scope.menuBundleClick(bndl);\n              });\n            } else if (messModal === 'discardChanges') {\n              // reset history\n              HistoryService.resetToInitState();\n              // load new bundle\n              $scope.menuBundleClick(bndl);\n            }\n          });\n        }\n      } else {\n        if (bndl !== $scope.curBndl) {\n          // reset history\n          HistoryService.resetToInitState();\n          // set state\n          viewState.setState('loadingSaving');\n          viewState.somethingInProgress = true;\n          viewState.somethingInProgressTxt = 'Loading bundle: ' + bndl.name;\n          // empty ssff files\n          Ssffdataservice.data = [];\n          Iohandlerservice.getBundle(bndl.name, $scope.demoDbName).then(function (bundleData) {\n            // check if response from http request\n            if (bundleData.status === 200) {\n              bundleData = bundleData.data;\n            }\n            var arrBuff;\n            // set wav file\n            arrBuff = Binarydatamaniphelper.base64ToArrayBuffer(bundleData.mediaFile.data);\n            viewState.somethingInProgressTxt = 'Parsing WAV file...';\n            Wavparserservice.parseWavArrBuf(arrBuff).then(function (messWavParser) {\n              var wavJSO = messWavParser;\n              viewState.curViewPort.sS = 0;\n              viewState.curViewPort.eS = wavJSO.Data.length;\n              viewState.curViewPort.selectS = -1;\n              viewState.curViewPort.selectE = -1;\n              viewState.curClickSegments = [];\n              viewState.curClickLevelName = undefined;\n              viewState.curClickLevelType = undefined;\n              viewState.resetSelect();\n              // FOR DEVELOPMENT:\n              // viewState.curViewPort.sS = 52063;\n              // viewState.curViewPort.eS = 52100;\n              // viewState.curViewPort.selectS = 27575;\n              // viewState.curViewPort.selectE = 34538;\n              Soundhandlerservice.wavJSO = wavJSO;\n              // set all ssff files\n              viewState.somethingInProgressTxt = 'Parsing SSFF files...';\n              Ssffparserservice.asyncParseSsffArr(bundleData.ssffFiles).then(function (ssffJso) {\n                Ssffdataservice.data = ssffJso.data;\n                var validRes = Validationservice.validateJSO('annotationFileSchema', bundleData.annotation);\n                if (validRes === true) {\n                  // set annotation\n                  LevelService.setData(bundleData.annotation);\n                  $scope.curBndl = bndl;\n                  viewState.setState('labeling');\n                  viewState.somethingInProgress = false;\n                  viewState.somethingInProgressTxt = 'Done!';  // FOR DEVELOPMENT:\n                                                               // $scope.menuBundleSaveBtnClick(); // for testing save button\n                                                               // $scope.spectSettingsBtnClick(); // for testing spect settings dial\n                } else {\n                  dialogService.open('views/error.html', 'ModalCtrl', 'Error validating annotation file: ' + JSON.stringify(validRes, null, 4)).then(function () {\n                    $scope.resetToInitState();\n                  });\n                }\n              }, function (errMess) {\n                dialogService.open('views/error.html', 'ModalCtrl', 'Error parsing SSFF file: ' + errMess.status.message).then(function () {\n                  $scope.resetToInitState();\n                });\n              });\n            }, function (errMess) {\n              dialogService.open('views/error.html', 'ModalCtrl', 'Error parsing wav file: ' + errMess.status.message).then(function () {\n                $scope.resetToInitState();\n              });\n            });\n          }, function (errMess) {\n            // check for http vs websocket response\n            if (errMess.data) {\n              dialogService.open('views/error.html', 'ModalCtrl', 'Error loading bundle: ' + errMess.data).then(function () {\n                $scope.resetToInitState();\n              });\n            } else {\n              dialogService.open('views/error.html', 'ModalCtrl', 'Error loading bundle: ' + errMess.status.message).then(function () {\n                $scope.resetToInitState();\n              });\n            }\n          });\n        }\n      }\n    };\n    /**\n\t\t * Handle save bundle button click. The function is also used\n\t\t * as a gerneral purpose save bundle function.\n\t\t * @return promise that is resolved after completion (rejected on error)\n\t\t */\n    $scope.menuBundleSaveBtnClick = function () {\n      // check if something has changed\n      // if (HistoryService.movesAwayFromLastSave !== 0) { // Commented out FOR DEVELOPMENT!\n      if (viewState.getPermission('saveBndlBtnClick')) {\n        var defer = $q.defer();\n        viewState.somethingInProgress = true;\n        viewState.setState('loadingSaving');\n        //create bundle json\n        var bundleData = {};\n        viewState.somethingInProgressTxt = 'Creating bundle json...';\n        bundleData.ssffFiles = [];\n        var formants = {};\n        // ssffFiles (only FORMANTS are allowed to be manipulated so only this track is sent back to server)\n        Ssffdataservice.data.forEach(function (el) {\n          if (el.ssffTrackName === 'FORMANTS') {\n            formants = el;\n          }\n        });\n        if (!$.isEmptyObject(formants)) {\n          Ssffparserservice.asyncJso2ssff(formants).then(function (messParser) {\n            bundleData.ssffFiles.push({\n              'ssffTrackName': formants.ssffTrackName,\n              'encoding': 'BASE64',\n              'data': Binarydatamaniphelper.arrayBufferToBase64(messParser.data)\n            });\n            $scope.getAnnotationAndSaveBndl(bundleData, defer);\n          }, function (errMess) {\n            dialogService.open('views/error.html', 'ModalCtrl', 'Error converting javascript object to ssff file: ' + errMess.status.message);\n            defer.reject();\n          });\n        } else {\n          $scope.getAnnotationAndSaveBndl(bundleData, defer);\n        }\n        return defer.promise;  // } // Commented out FOR DEVELOPMENT!\n      } else {\n        $log.info('Action: menuBundleSaveBtnClick not allowed!');\n      }\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.getAnnotationAndSaveBndl = function (bundleData, defer) {\n      // annotation\n      bundleData.annotation = LevelService.getData();\n      viewState.somethingInProgressTxt = 'Saving bundle...';\n      Iohandlerservice.saveBundle(bundleData).then(function () {\n        viewState.somethingInProgressTxt = 'Done!';\n        viewState.somethingInProgress = false;\n        HistoryService.movesAwayFromLastSave = 0;\n        defer.resolve();\n        viewState.setState('labeling');\n      }, function (errMess) {\n        // console.log(mess);\n        dialogService.open('views/error.html', 'ModalCtrl', 'Error saving bundle: ' + errMess.status.message).then(function () {\n          $scope.resetToInitState();\n        });\n        defer.reject();\n      });\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.uttIsDisabled = function (bndl) {\n      if (bndl.name === $scope.curBndl.name) {\n        return false;\n      } else {\n        return true;\n      }\n    };\n    $scope.getEnlarge = function (index) {\n      var len = ConfigProviderService.vals.perspectives[viewState.curPerspectiveIdx].signalCanvases.order.length;\n      if (viewState.getenlarge() == -1) {\n        return 'auto';\n      } else {\n        if (len == 2) {\n          if (viewState.getenlarge() == index) {\n            return '75%';\n          } else {\n            return '25%';\n          }\n        } else {\n          if (viewState.getenlarge() == index) {\n            return Math.floor(100 / len * (len - 1)) + '%';\n          } else {\n            return Math.floor(100 / len / (len - 1)) + '%';\n          }\n        }\n      }\n    };\n    /**\n\t\t * returns jso with css defining color dependent\n\t\t * on if changes have been made that have not been saved\n\t\t * @param bndl object containing name attribute of bundle item\n\t\t * requesting color\n\t\t * @returns color as jso object used by ng-style\n\t\t */\n    $scope.getBndlColor = function (bndl) {\n      var curColor;\n      if (HistoryService.movesAwayFromLastSave !== 0) {\n        curColor = {\n          'background-color': '#f00',\n          'color': 'white'\n        };\n      } else {\n        curColor = {\n          'background-color': '#999',\n          'color': 'black'\n        };\n      }\n      // console.log(bndl.name)\n      if (bndl.name === $scope.curBndl.name) {\n        return curColor;\n      }\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.cursorInTextField = function () {\n      viewState.focusInTextField = true;\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.cursorOutOfTextField = function () {\n      viewState.focusInTextField = false;\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.openSubmenu = function () {\n      if (viewState.getsubmenuOpen()) {\n        viewState.setsubmenuOpen(false);\n      } else {\n        viewState.setsubmenuOpen(true);\n      }\n      $timeout($scope.refreshTimeline, ConfigProviderService.vals.colors.transitionTime);\n    };\n    $scope.refreshTimeline = function () {\n      $scope.$broadcast('refreshTimeline');\n    };\n    /////////////////////////////////////////\n    // handle button clicks\n    // top menu:\n    /**\n\t\t *\n\t\t */\n    $scope.addLevelSegBtnClick = function () {\n      if (viewState.getPermission('addLevelSegBtnClick')) {\n        var newName, levelLength;\n        if (LevelService.data.levels === undefined) {\n          newName = 'levelNr0';\n          levelLength = 0;\n        } else {\n          newName = 'levelNr' + LevelService.data.levels.length;\n          levelLength = LevelService.data.levels.length;\n        }\n        var level = {\n            items: [{\n                id: LevelService.getNewId(),\n                sampleStart: 0,\n                sampleDur: Soundhandlerservice.wavJSO.Data.length,\n                labels: [{\n                    name: newName,\n                    value: ConfigProviderService.vals.labelCanvasConfig.newSegmentName\n                  }]\n              }],\n            name: newName,\n            type: 'SEGMENT'\n          };\n        LevelService.addLevel(level, levelLength, viewState.curPerspectiveIdx);\n        //  Add to history\n        HistoryService.addObjToUndoStack({\n          'type': 'ESPS',\n          'action': 'ADDLEVEL',\n          'level': level,\n          'id': LevelService.data.levels.length - 1,\n          'curPerspectiveIdx': viewState.curPerspectiveIdx\n        });\n      } else {\n        console.log('action currently not allowed');\n      }\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.addLevelPointBtnClick = function () {\n      if (viewState.getPermission('addLevelPointBtnClick')) {\n        var newName = 'levelNr' + LevelService.data.levels.length;\n        var level = {\n            items: [{\n                id: LevelService.getNewId(),\n                samplePoint: Soundhandlerservice.wavJSO.Data.length / 2,\n                labels: [{\n                    name: newName,\n                    value: ConfigProviderService.vals.labelCanvasConfig.newEventName\n                  }]\n              }],\n            name: newName,\n            type: 'EVENT'\n          };\n        LevelService.addLevel(level, LevelService.data.levels.length, viewState.curPerspectiveIdx);\n        //  Add to history\n        HistoryService.addObjToUndoStack({\n          'type': 'ESPS',\n          'action': 'ADDLEVEL',\n          'level': level,\n          'id': LevelService.data.levels.length - 1,\n          'curPerspectiveIdx': viewState.curPerspectiveIdx\n        });\n      } else {\n        console.log('action currently not allowed');\n      }\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.renameSelLevelBtnClick = function () {\n      if (viewState.getPermission('renameSelLevelBtnClick')) {\n        if (viewState.getcurClickLevelName() !== undefined) {\n          dialogService.open('views/renameLevel.html', 'ModalCtrl', viewState.getcurClickLevelName());\n        } else {\n          dialogService.open('views/error.html', 'ModalCtrl', 'Rename Error : Please choose a Level first !');\n        }\n      } else {\n        console.log('action currently not allowed');\n      }\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.downloadTextGridBtnClick = function () {\n      if (viewState.getPermission('downloadTextGridBtnClick')) {\n        Textgridparserservice.asyncToTextGrid().then(function (parseMess) {\n          dialogService.openExport('views/export.html', 'ExportCtrl', parseMess.data, $scope.curBndl.name + '.TextGrid');\n        });\n      } else {\n        console.log('action currently not allowed');\n      }\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.spectSettingsBtnClick = function () {\n      if (viewState.getPermission('spectSettingsChange')) {\n        dialogService.open('views/spectSettings.html', 'spectSettingsCtrl', '');\n      } else {\n        console.log('action currently not allowed');\n      }\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.connectBtnClick = function () {\n      if (viewState.getPermission('connectBtnClick')) {\n        dialogService.open('views/connectModal.html', 'WsconnectionCtrl').then(function (url) {\n          if (url) {\n            Iohandlerservice.wsH.initConnect(url).then(function (message) {\n              if (message.type === 'error') {\n                dialogService.open('views/error.html', 'ModalCtrl', 'Could not connect to websocket server: ' + url);\n              } else {\n                $scope.handleConnectedToWSserver();\n              }\n            });\n          }\n        });\n      } else {\n        console.log('action currently not allowed');\n      }\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.openDemoDBbtnClick = function (nameOfDB) {\n      if (viewState.getPermission('openDemoBtnDBclick')) {\n        $scope.demoDbName = nameOfDB;\n        // hide drop zone \n        viewState.showDropZone = false;\n        viewState.somethingInProgress = true;\n        // alert(nameOfDB);\n        viewState.setState('loadingSaving');\n        ConfigProviderService.vals.main.comMode = 'DEMO';\n        viewState.somethingInProgressTxt = 'Loading DB config...';\n        Iohandlerservice.getDBconfigFile(nameOfDB).then(function (res) {\n          var data = res.data;\n          // first element of perspectives is default perspective\n          viewState.curPerspectiveIdx = 0;\n          ConfigProviderService.setVals(data.EMUwebAppConfig);\n          delete data.EMUwebAppConfig;\n          // delete to avoid duplicate\n          var validRes = Validationservice.validateJSO('emuwebappConfigSchema', ConfigProviderService.vals);\n          if (validRes === true) {\n            ConfigProviderService.curDbConfig = data;\n            viewState.setCurLevelAttrDefs(ConfigProviderService.curDbConfig.levelDefinitions);\n            validRes = Validationservice.validateJSO('DBconfigFileSchema', ConfigProviderService.curDbConfig);\n            if (validRes === true) {\n              // then get the DBconfigFile\n              viewState.somethingInProgressTxt = 'Loading bundle list...';\n              Iohandlerservice.getBundleList(nameOfDB).then(function (res) {\n                var bdata = res.data;\n                validRes = Validationservice.validateJSO('bundleListSchema', bdata);\n                if (validRes === true) {\n                  $scope.bundleList = bdata;\n                  // then load first bundle in list\n                  $scope.menuBundleClick($scope.bundleList[0]);\n                } else {\n                  dialogService.open('views/error.html', 'ModalCtrl', 'Error validating bundleList: ' + JSON.stringify(validRes, null, 4)).then(function () {\n                    $scope.resetToInitState();\n                  });\n                }\n              }, function (err) {\n                dialogService.open('views/error.html', 'ModalCtrl', 'Error loading bundle list of ' + nameOfDB + ': ' + err.data + ' STATUS: ' + err.status).then(function () {\n                  $scope.resetToInitState();\n                });\n              });\n            } else {\n              dialogService.open('views/error.html', 'ModalCtrl', 'Error validating DBconfig: ' + JSON.stringify(validRes, null, 4)).then(function () {\n                $scope.resetToInitState();\n              });\n            }\n          } else {\n            dialogService.open('views/error.html', 'ModalCtrl', 'Error validating ConfigProviderService.vals (emuwebappConfig data) after applying changes of newly loaded config (most likely due to wrong entry...): ' + JSON.stringify(validRes, null, 4)).then(function () {\n              $scope.resetToInitState();\n            });\n          }\n        }, function (err) {\n          dialogService.open('views/error.html', 'ModalCtrl', 'Error loading DB config of ' + nameOfDB + ': ' + err.data + ' STATUS: ' + err.status).then(function () {\n            $scope.resetToInitState();\n          });\n        });\n      }  //else {\n         // \tconsole.log('action currently not allowed');\n         // }\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.aboutBtnClick = function () {\n      dialogService.open('views/about.html', 'AboutCtrl');\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.clearBtnClick = function () {\n      // viewState.setdragBarActive(false);\n      var modalText;\n      if (HistoryService.movesAwayFromLastSave !== 0 && ConfigProviderService.vals.main.comMode !== 'DEMO') {\n        modalText = 'Do you wish to clear all loaded data and if connected disconnect from the server? CAUTION: YOU HAVE UNSAVED CHANGES! These will be lost if you confirm.';\n      } else {\n        modalText = 'Do you wish to clear all loaded data and if connected disconnect from the server? You have NO unsaved changes so no changes will be lost.';\n      }\n      dialogService.open('views/confirmModal.html', 'ConfirmmodalCtrl', modalText).then(function (res) {\n        if (res) {\n          $scope.resetToInitState();\n        }\n      });\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.resetToInitState = function () {\n      if (Iohandlerservice.wsH.isConnected()) {\n        Iohandlerservice.wsH.disconnectWarning().then(function (resp) {\n          $log.info('Closing websocket connection to server');\n          Iohandlerservice.wsH.closeConnect();\n        });\n      }\n      $scope.curBndl = {};\n      $scope.bundleList = [];\n      Soundhandlerservice.wavJSO = {};\n      LevelService.data = {};\n      Ssffdataservice.data = [];\n      HistoryService.resetToInitState();\n      viewState.setState('noDBorFilesloaded');\n      $scope.$broadcast('resetToInitState');\n      viewState.somethingInProgress = false;\n      viewState.resetToInitState();\n      viewState.showDropZone = true;\n      $scope.loadDefaultConfig();\n    };\n    // bottom menu:\n    /**\n\t\t *\n\t\t */\n    $scope.cmdZoomAll = function () {\n      if (viewState.getPermission('zoom')) {\n        LevelService.deleteEditArea();\n        viewState.setViewPort(0, Soundhandlerservice.wavJSO.Data.length);\n      } else {\n        console.log('action currently not allowed');\n      }\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.cmdZoomIn = function () {\n      if (viewState.getPermission('zoom')) {\n        LevelService.deleteEditArea();\n        viewState.zoomViewPort(true);\n      } else {\n        console.log('action currently not allowed');\n      }\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.cmdZoomOut = function () {\n      if (viewState.getPermission('zoom')) {\n        LevelService.deleteEditArea();\n        viewState.zoomViewPort(false);\n      } else {\n        console.log('action currently not allowed');\n      }\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.cmdZoomLeft = function () {\n      if (viewState.getPermission('zoom')) {\n        LevelService.deleteEditArea();\n        viewState.shiftViewPort(false);\n      } else {\n        console.log('action currently not allowed');\n      }\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.cmdZoomRight = function () {\n      if (viewState.getPermission('zoom')) {\n        LevelService.deleteEditArea();\n        viewState.shiftViewPort(true);\n      } else {\n        console.log('action currently not allowed');\n      }\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.cmdZoomSel = function () {\n      if (viewState.getPermission('zoom')) {\n        LevelService.deleteEditArea();\n        viewState.setViewPort(viewState.curViewPort.selectS, viewState.curViewPort.selectE);\n      } else {\n        console.log('action currently not allowed');\n      }\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.cmdPlayView = function () {\n      if (viewState.getPermission('playaudio')) {\n        Soundhandlerservice.playFromTo(viewState.curViewPort.sS, viewState.curViewPort.eS);\n        viewState.animatePlayHead(viewState.curViewPort.sS, viewState.curViewPort.eS);\n      } else {\n        console.log('action currently not allowed');\n      }\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.cmdPlaySel = function () {\n      if (viewState.getPermission('playaudio')) {\n        Soundhandlerservice.playFromTo(viewState.curViewPort.selectS, viewState.curViewPort.selectE);\n        viewState.animatePlayHead(viewState.curViewPort.selectS, viewState.curViewPort.selectE);\n      } else {\n        console.log('action currently not allowed');\n      }\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.cmdPlayAll = function () {\n      if (viewState.getPermission('playaudio')) {\n        Soundhandlerservice.playFromTo(0, Soundhandlerservice.wavJSO.Data.length);\n        viewState.animatePlayHead(0, Soundhandlerservice.wavJSO.Data.length);\n      } else {\n        console.log('action currently not allowed');\n      }\n    };\n    ///////////////////////////\n    // other\n    /**\n\t\t *\n\t\t */\n    $scope.setlastkeycode = function (c) {\n      $scope.lastkeycode = c;\n    };\n    /**\n\t\t * SIC should move into viewstate.rightSubmenuOpen variable\n\t\t */\n    $scope.toggleRightSideMenuHidden = function () {\n      viewState.setRightsubmenuOpen(!viewState.getRightsubmenuOpen());\n    };\n    /**\n\t\t * function used to change perspective\n\t\t * @param persp json object of current perspective containing name attribute\n\t\t */\n    $scope.changePerspective = function (persp) {\n      // viewState.somethingInProgress = true;\n      // alert(nameOfDB);\n      // viewState.somethingInProgressTxt = 'Changing perspective...';\n      var newIdx;\n      for (var i = 0; i < ConfigProviderService.vals.perspectives.length; i++) {\n        if (persp.name === ConfigProviderService.vals.perspectives[i].name) {\n          newIdx = i;\n        }\n      }\n      viewState.curPerspectiveIdx = newIdx;\n      // close submenu\n      $scope.toggleRightSideMenuHidden();  // viewState.somethingInProgressTxt = 'Done!';\n                                           // viewState.somethingInProgress = false;\n    };\n    /**\n\t\t * function used by right side menu to get color of current perspecitve in ul\n\t\t * @param persp json object of current perspective containing name attribute\n\t\t */\n    $scope.getPerspectiveColor = function (persp) {\n      var cl;\n      if (viewState.curPerspectiveIdx === -1 || persp.name === ConfigProviderService.vals.perspectives[viewState.curPerspectiveIdx].name) {\n        cl = 'emuwebapp-curSelPerspLi';\n      } else {\n        cl = 'emuwebapp-perspLi';\n      }\n      return cl;\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').controller('FileCtrl', [\n  '$scope',\n  'Binarydatamaniphelper',\n  'Textgridparserservice',\n  'ConfigProviderService',\n  'Validationservice',\n  function ($scope, Binarydatamaniphelper, Textgridparserservice, ConfigProviderService, Validationservice) {\n    $scope.newfiles = [];\n    $scope.wav = {};\n    $scope.grid = {};\n    $scope.curBndl = {};\n    $scope.resetToInitState = function () {\n      $scope.newfiles = [];\n      $scope.wav = {};\n      $scope.grid = {};\n      $scope.curBndl = {};\n      $scope.dropText = $scope.dropDefault;\n    };\n    $scope.$on('resetToInitState', function () {\n      $scope.resetToInitState();\n    });\n    $scope.handleLocalFiles = function () {\n      $scope.$parent.vs.showDropZone = false;\n      $scope.$parent.cps.vals.main.comMode = 'FileAPI';\n      $scope.$parent.vs.setState('loadingSaving');\n      // reset history\n      $scope.$parent.hists.resetToInitState();\n      $scope.$parent.vs.somethingInProgress = true;\n      $scope.$parent.vs.somethingInProgressTxt = 'Loading local File: ' + $scope.wav.name;\n      // empty ssff files\n      $scope.$parent.ssffds.data = [];\n      $scope.$parent.levServ.data = {};\n      //arrBuff = Binarydatamaniphelper.base64ToArrayBuffer(bundleData.mediaFile.data);\n      $scope.$parent.vs.somethingInProgressTxt = 'Parsing WAV file...';\n      var reader = new FileReader();\n      reader.readAsArrayBuffer($scope.wav);\n      reader.onloadend = function (evt) {\n        if (evt.target.readyState == FileReader.DONE) {\n          $scope.$parent.io.httpGetPath('configFiles/standalone_emuwebappConfig.json').then(function (resp) {\n            // first element of perspectives is default perspective\n            $scope.$parent.vs.curPerspectiveIdx = 0;\n            $scope.$parent.cps.setVals(resp.data.EMUwebAppConfig);\n            delete resp.data.EMUwebAppConfig;\n            // delete to avoid duplicate\n            var validRes = Validationservice.validateJSO('emuwebappConfigSchema', ConfigProviderService.vals);\n            if (validRes === true) {\n              $scope.$parent.cps.curDbConfig = resp.data;\n              $scope.curBndl = {};\n              $scope.curBndl.name = $scope.wav.name.substr(0, $scope.wav.name.lastIndexOf('.'));\n              $scope.$parent.bundleList.push($scope.curBndl);\n              $scope.$parent.curBndl = $scope.curBndl;\n              // then get the DBconfigFile\n              var res;\n              if ($scope.firefox) {\n                res = evt.target.result;\n              } else {\n                res = evt.currentTarget.result;\n              }\n              $scope.$parent.wps.parseWavArrBuf(res).then(function (wavJSO) {\n                $scope.$parent.vs.curViewPort.sS = 0;\n                $scope.$parent.vs.curViewPort.eS = wavJSO.Data.length;\n                $scope.$parent.vs.resetSelect();\n                $scope.$parent.vs.curPerspectiveIdx = 0;\n                $scope.$parent.shs.wavJSO = wavJSO;\n                // parsing of Textgrid Data\n                if (!$.isEmptyObject($scope.grid)) {\n                  var reader = new FileReader();\n                  reader.readAsText($scope.grid);\n                  reader.onloadend = function (evt) {\n                    if (evt.target.readyState == FileReader.DONE) {\n                      var extension = $scope.wav.name.substr(0, $scope.wav.name.lastIndexOf('.'));\n                      Textgridparserservice.asyncParseTextGrid(evt.currentTarget.result, $scope.wav.name, extension).then(function (parseMess) {\n                        var annot = parseMess.data;\n                        $scope.$parent.levServ.setData(annot);\n                        // console.log(JSON.stringify(l, undefined, 2));\n                        var lNames = [];\n                        var levelDefs = [];\n                        annot.levels.forEach(function (l) {\n                          lNames.push(l.name);\n                          levelDefs.push({\n                            'name': l.name,\n                            'type': l.type,\n                            'attributeDefinitions': {\n                              'name': l.name,\n                              'type': 'string'\n                            }\n                          });\n                        });\n                        // set level defs\n                        $scope.$parent.cps.curDbConfig.levelDefinitions = levelDefs;\n                        $scope.$parent.vs.setCurLevelAttrDefs(ConfigProviderService.curDbConfig.levelDefinitions);\n                        $scope.$parent.cps.vals.perspectives[$scope.$parent.vs.curPerspectiveIdx].levelCanvases.order = lNames;\n                        $scope.$parent.vs.somethingInProgressTxt = 'Done!';\n                        $scope.$parent.vs.somethingInProgress = false;\n                        $scope.$parent.vs.setState('labeling');  // $scope.$parent.openSubmenu();\n                      });\n                    }\n                  }, function (errMess) {\n                    $scope.$parent.dials.open('views/error.html', 'ModalCtrl', 'Error parsing textgrid file: ' + errMess.status.message);\n                  };\n                } else {\n                  $scope.$parent.vs.setState('labeling');\n                  $scope.$parent.vs.somethingInProgress = false;\n                  $scope.$parent.vs.somethingInProgressTxt = 'Done!';  // $scope.$parent.openSubmenu();\t\t    \n                }\n              });\n            } else {\n              $scope.$parent.dials.open('views/error.html', 'ModalCtrl', 'Error validating ConfigProviderService.vals (emuwebappConfig data) : ' + JSON.stringify(validRes, null, 4));\n            }\n          }, function (errMess) {\n            $scope.$parent.dials.open('views/error.html', 'ModalCtrl', 'Error parsing wav file: ' + errMess.status.message);\n          });\n        }\n      };\n    };\n    $scope.traverseFileTreeChrome = function (item, path) {\n      path = path || '';\n      if (item.isFile) {\n        item.file(function (file) {\n          var extension = file.name.substr(file.name.lastIndexOf('.') + 1).toUpperCase();\n          if (extension === 'WAV') {\n            $scope.wav = file;\n            $scope.handleLocalFiles();\n          } else if (extension === 'TEXTGRID') {\n            $scope.grid = file;\n          } else {\n            $scope.other = file;\n            $scope.$parent.dials.open('views/error.html', 'ModalCtrl', 'Error: Unknown File Type for File ' + $scope.other.name).then(function (res) {\n              $scope.resetToInitState();\n              $scope.$parent.resetToInitState();\n            });\n          }\n        });\n      } else if (item.isDirectory) {\n        var dirReader = item.createReader();\n        dirReader.readEntries(function (entries) {\n          for (var i = 0; i < entries.length; i++) {\n            $scope.traverseFileTreeChrome(entries[i], path + item.name + '/');\n          }\n        });\n      }\n    };\n    $scope.traverseFileTreeFirefox = function (item, path) {\n      path = path || '';\n      if (item.size > 0) {\n        var extension = item.name.substr(item.name.lastIndexOf('.') + 1).toUpperCase();\n        if (extension === 'WAV') {\n          $scope.wav = item;\n          $scope.handleLocalFiles();\n        } else if (extension === 'TEXTGRID') {\n          $scope.grid = item;\n        } else {\n          $scope.other = item;\n          $scope.$parent.dials.open('views/error.html', 'ModalCtrl', 'Error: Unknown File Type for File ' + $scope.other.name).then(function (res) {\n            $scope.resetToInitState();\n            $scope.$parent.resetToInitState();\n          });\n        }\n      } else if (item.isDirectory) {\n        var dirReader = item.createReader();\n        dirReader.readEntries(function (entries) {\n          for (var i = 0; i < entries.length; i++) {\n            $scope.traverseFileTreeFirefox(entries[i], path + item.name + '/');\n          }\n        });\n      }\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').directive('level', [\n  '$animate',\n  'viewState',\n  'ConfigProviderService',\n  'Drawhelperservice',\n  'HistoryService',\n  'fontScaleService',\n  'dialogService',\n  'LevelService',\n  function ($animate, viewState, ConfigProviderService, Drawhelperservice, HistoryService, fontScaleService, dialogService, LevelService) {\n    return {\n      templateUrl: 'views/level.html',\n      restrict: 'E',\n      scope: {\n        level: '=',\n        idx: '='\n      },\n      link: function postLink(scope, element, attr) {\n        // select the needed DOM items from the template\n        var canvas = element.find('canvas');\n        scope.open = attr.open;\n        scope.vs = viewState;\n        scope.hists = HistoryService;\n        scope.cps = ConfigProviderService;\n        scope.dials = dialogService;\n        var levelCanvasContainer = element.find('div');\n        scope.levelDef = ConfigProviderService.getLevelDefinition(scope.level.name);\n        // curAttrDef = scope.level.name;\n        scope.backgroundCanvas = { 'background': ConfigProviderService.vals.colors.levelColor };\n        // on broadcast msg from main ctrl openSubmenu refresh timeline\n        scope.$on('refreshTimeline', function () {\n          drawLevelDetails(scope.level, viewState, ConfigProviderService);\n          drawLevelMarkup(scope.level, viewState, ConfigProviderService);\n        });\n        ///////////////\n        // watches\n        //\n        scope.$watch('vs.curViewPort', function (newValue, oldValue) {\n          if (oldValue.sS !== newValue.sS || oldValue.eS !== newValue.eS || oldValue.windowWidth !== newValue.windowWidth) {\n            drawLevelDetails(scope.level, viewState, ConfigProviderService);\n            drawLevelMarkup(scope.level, viewState, ConfigProviderService);  //console.log('leveldraw update A');\n          } else {\n            //console.log('leveldraw update B');\n            drawLevelMarkup(scope.level, viewState, ConfigProviderService);\n          }\n        }, true);\n        //\n        scope.$watch('vs.curMouseX', function (newValue, oldValue) {\n          // only repaint if mouse over current level\n          if (viewState.getcurMouseLevelName() === scope.level.name) {\n            //if (!oldValue || !newValue || newValue.id !== oldValue.id) {\n            //\tdrawLevelMarkup(scope.level, viewState, ConfigProviderService);\n            //} else {\n            drawLevelDetails(scope.level, viewState, ConfigProviderService);\n            drawLevelMarkup(scope.level, viewState, ConfigProviderService);  //}\n          }\n        }, true);\n        //\n        scope.$watch('vs.curClickLevelName', function (newValue, oldValue) {\n          if (newValue !== undefined) {\n            drawLevelMarkup(scope.level, viewState, ConfigProviderService);\n          }\n        }, true);\n        //\n        scope.$watch('vs.movingBoundarySample', function () {\n          drawLevelDetails(scope.level, viewState, ConfigProviderService);\n          drawLevelMarkup(scope.level, viewState, ConfigProviderService);\n        }, true);\n        //\n        scope.$watch('vs.movingBoundary', function () {\n          drawLevelMarkup(scope.level, viewState, ConfigProviderService);\n        }, true);\n        //\n        scope.$watch('hists.movesAwayFromLastSave', function () {\n          drawLevelDetails(scope.level, viewState, ConfigProviderService);\n          drawLevelMarkup(scope.level, viewState, ConfigProviderService);\n        }, true);\n        //\n        /////////////////\n        /**\n\t\t\t\t *\n\t\t\t\t */\n        scope.changeCurAttrDef = function (attrDefName, index) {\n          var curAttrDef = viewState.getCurAttrDef(scope.level.name);\n          if (curAttrDef !== attrDefName) {\n            // curAttrDef = attrDefName;\n            viewState.setCurAttrDef(scope.level.name, attrDefName, index);\n            if (!element.hasClass('emuwebapp-levelCanvasContainer-animate')) {\n              viewState.focusInTextField = false;\n              LevelService.deleteEditArea();\n              $animate.addClass(levelCanvasContainer, 'emuwebapp-levelCanvasContainer-animate', scope.finishedAnim);\n            }\n          }\n        };\n        /**\n\t\t\t\t *\n\t\t\t\t */\n        scope.finishedAnim = function () {\n          $animate.removeClass(levelCanvasContainer, 'emuwebapp-levelCanvasContainer-animate');\n          // redraw\n          drawLevelDetails(scope.level, viewState, ConfigProviderService);\n          drawLevelMarkup(scope.level, viewState, ConfigProviderService);\n        };\n        /**\n\t\t\t\t *\n\t\t\t\t */\n        scope.getAttrDefBtnColor = function (attrDefName) {\n          var curColor;\n          var curAttrDef = viewState.getCurAttrDef(scope.level.name);\n          if (attrDefName === curAttrDef) {\n            curColor = { 'background': '-webkit-radial-gradient(50% 50%, closest-corner, rgba(0, 0, 0, 1), rgba(0, 0, 0, 0) 60%)' };\n          } else {\n            curColor = { 'background-color': 'white' };\n          }\n          return curColor;\n        };\n        scope.updateView = function () {\n          if ($.isEmptyObject(scope.cps)) {\n            console.log('undef viewState');\n            return;\n          }\n          drawLevelDetails(scope.level, scope.vs, scope.cps);\n        };\n        ///////////////\n        // bindings\n        // on mouse leave reset viewState.\n        element.bind('mouseleave', function () {\n          viewState.setcurMouseSegment(undefined, undefined, undefined);\n          drawLevelMarkup(scope.level, viewState, ConfigProviderService);\n        });\n        /**\n\t\t\t\t * draw level details\n\t\t\t\t * @param levelDetails\n\t\t\t\t * @param viewState\n\t\t\t\t * @param cps\n\t\t\t\t */\n        function drawLevelDetails(levelDetails, viewState, config) {\n          var fontSize = config.vals.font.fontPxSize;\n          var curAttrDef = viewState.getCurAttrDef(scope.level.name);\n          if ($.isEmptyObject(levelDetails)) {\n            console.log('undef levelDetails');\n            return;\n          }\n          if ($.isEmptyObject(viewState)) {\n            console.log('undef viewState');\n            return;\n          }\n          if ($.isEmptyObject(config)) {\n            console.log('undef config');\n            return;\n          }\n          if (!scope.open) {\n            fontSize -= 1;\n          }\n          var ctx = canvas[0].getContext('2d');\n          ctx.clearRect(0, 0, canvas[0].width, canvas[0].height);\n          //predef vars\n          var sDist, posS, posE, horizontalText;\n          sDist = viewState.getSampleDist(canvas[0].width);\n          // draw name of level and type\n          var scaleY = ctx.canvas.height / ctx.canvas.offsetHeight;\n          if (levelDetails.name === curAttrDef) {\n            horizontalText = fontScaleService.getTextImageTwoLines(ctx, levelDetails.name, '(' + levelDetails.type + ')', fontSize, config.vals.font.fontType, config.vals.colors.labelColor, true);\n          } else {\n            horizontalText = fontScaleService.getTextImageTwoLines(ctx, levelDetails.name + ':' + curAttrDef, '(' + levelDetails.type + ')', fontSize, config.vals.font.fontType, config.vals.colors.labelColor, true);\n          }\n          ctx.drawImage(horizontalText, 0, ctx.canvas.height / 2 - fontSize * scaleY);\n          var segMId = viewState.getcurMouseSegment();\n          var segCId = viewState.getcurClickSegments();\n          var levelId = viewState.getcurClickLevelName();\n          var curID = -1;\n          // calculate generic max with of single char (m char used)\n          var mTxtImg = fontScaleService.getTextImage(ctx, 'm', fontSize - 2, config.vals.font.fontType, config.vals.colors.labelColor);\n          var mTxtImgWidth = fontScaleService.getLastImageWidth();\n          // calculate generic max with of single digit (0 digit used)\n          var zeroTxtImg = fontScaleService.getTextImage(ctx, '0', fontSize - 4, config.vals.font.fontType, config.vals.colors.endBoundaryColor);\n          var zeroTxtImgWidth = fontScaleService.getLastImageWidth();\n          if (levelDetails.type === 'SEGMENT') {\n            ctx.fillStyle = config.vals.colors.startBoundaryColor;\n            // draw segments\n            var e = levelDetails.items;\n            e.forEach(function (curEvt) {\n              ++curID;\n              if (curEvt.sampleStart >= viewState.curViewPort.sS && curEvt.sampleStart <= viewState.curViewPort.eS || curEvt.sampleStart + curEvt.sampleDur > viewState.curViewPort.sS && curEvt.sampleStart + curEvt.sampleDur < viewState.curViewPort.eS || curEvt.sampleStart < viewState.curViewPort.sS && curEvt.sampleStart + curEvt.sampleDur > viewState.curViewPort.eS) {\n                // get label\n                var curLabVal;\n                curEvt.labels.forEach(function (lab) {\n                  if (lab.name === curAttrDef) {\n                    curLabVal = lab.value;\n                  }\n                });\n                // draw segment start\n                //posS = Math.round(viewState.getPos(canvas[0].width, curEvt.sampleStart));\n                //posE = Math.round(viewState.getPos(canvas[0].width, curEvt.sampleStart + curEvt.sampleDur+1));\n                posS = viewState.getPos(canvas[0].width, curEvt.sampleStart);\n                posE = viewState.getPos(canvas[0].width, curEvt.sampleStart + curEvt.sampleDur + 1);\n                ctx.fillStyle = config.vals.colors.startBoundaryColor;\n                ctx.fillRect(posS, 0, 2, canvas[0].height / 2);\n                //draw segment end\n                ctx.fillStyle = config.vals.colors.endBoundaryColor;\n                ctx.fillRect(posE, canvas[0].height / 2, 2, canvas[0].height);\n                //check for enough space to stroke text\n                if (curLabVal !== undefined && posE - posS > mTxtImgWidth * curLabVal.length) {\n                  horizontalText = fontScaleService.getTextImage(ctx, curLabVal, fontSize - 2, config.vals.font.fontType, config.vals.colors.labelColor);\n                  var tW = fontScaleService.getLastImageWidth();\n                  var tX = posS + (posE - posS) / 2 - tW / 2;\n                  if (scope.open) {\n                    ctx.drawImage(horizontalText, 0, 0, horizontalText.width, horizontalText.height, tX, canvas[0].height / 2 - (fontSize - 2), horizontalText.width, horizontalText.height);\n                  } else {\n                    ctx.drawImage(horizontalText, 0, 0, horizontalText.width, horizontalText.height, tX, 0, horizontalText.width, horizontalText.height);\n                  }\n                }\n                // var hst1 = fontScaleService.getLastImageWidth();\n                // var tX1 = posS + (posE - posS) / 2 - hst1 / 2;\n                // var tX2 = posS + (posE - posS) / 2 - hst2 / 2;\n                //draw helper lines\n                if (scope.open) {\n                  var labelCenter = posS + (posE - posS) / 2;\n                  var hlY = canvas[0].height / 4;\n                  // start helper line\n                  ctx.strokeStyle = config.vals.colors.startBoundaryColor;\n                  ctx.beginPath();\n                  ctx.moveTo(posS, hlY);\n                  ctx.lineTo(labelCenter, hlY);\n                  ctx.lineTo(labelCenter, hlY + 5);\n                  ctx.stroke();\n                  hlY = canvas[0].height / 4 * 3;\n                  // end helper line\n                  ctx.strokeStyle = config.vals.colors.endBoundaryColor;\n                  ctx.beginPath();\n                  ctx.moveTo(posE, hlY);\n                  ctx.lineTo(labelCenter, hlY);\n                  ctx.lineTo(labelCenter, hlY - 5);\n                  ctx.stroke();\n                }\n                // if (posE - posS <= tW) {\n                // \tctx.strokeStyle = 'red';//config.vals.colors.startBoundaryColor;\n                // \tctx.beginPath();\n                // \tctx.moveTo(tX1 + hst1 / 2, canvas[0].height / 4 + 10);\n                // \tctx.lineTo(tX1 + hst1 / 2, canvas[0].height / 4 + 30);\n                // \tctx.stroke();\n                // }\n                // draw sampleStart numbers\n                //check for enough space to stroke text\n                if (posE - posS > zeroTxtImgWidth * curEvt.sampleStart.toString().length) {\n                  var horizontalSubText1 = fontScaleService.getTextImage(ctx, curEvt.sampleStart, fontSize - 4, config.vals.font.fontType, config.vals.colors.endBoundaryColor);\n                  ctx.drawImage(horizontalSubText1, 0, 0, horizontalText.width, horizontalText.height, posS + 3, 0, horizontalText.width, horizontalText.height);\n                }\n                // draw sampleDur numbers.\n                //sStW = fontScaleService.getLastImageWidth();\n                //var sDtW = ctx.measureText('dur: ' + curEvt.sampleDur).width;\n                //ctx.fillStyle = config.vals.colors.endBoundaryColor;\n                //check for enough space to stroke text\n                if (posE - posS > zeroTxtImgWidth * (5 + curEvt.sampleDur.toString().length)) {\n                  var horizontalSubText2 = fontScaleService.getTextImage(ctx, 'dur: ' + curEvt.sampleDur, fontSize - 4, config.vals.font.fontType, config.vals.colors.endBoundaryColor);\n                  var hst2 = fontScaleService.getLastImageWidth();\n                  ctx.drawImage(horizontalSubText2, 0, 0, horizontalText.width, horizontalText.height, posE - hst2, canvas[0].height / 4 * 3, horizontalText.width, horizontalText.height);  //ctx.fillText('dur: ' + curEvt.sampleDur, posE - sDtW, canvas[0].height - canvas[0].height / 12);\n                }\n              }\n            });\n          } else if (levelDetails.type === 'EVENT') {\n            ctx.fillStyle = config.vals.colors.startBoundaryColor;\n            // predef. vars\n            var perc;\n            levelDetails.items.forEach(function (curEvt) {\n              if (curEvt.samplePoint > viewState.curViewPort.sS && curEvt.samplePoint < viewState.curViewPort.eS) {\n                perc = Math.round(viewState.getPos(canvas[0].width, curEvt.samplePoint) + sDist / 2);\n                // get label\n                var curLabVal;\n                curEvt.labels.forEach(function (lab) {\n                  if (lab.name === curAttrDef) {\n                    curLabVal = lab.value;\n                  }\n                });\n                ctx.fillStyle = config.vals.colors.startBoundaryColor;\n                ctx.fillRect(perc, 0, 1, canvas[0].height / 2 - canvas[0].height / 10);\n                ctx.fillRect(perc, canvas[0].height / 2 + canvas[0].height / 10, 1, canvas[0].height / 2 - canvas[0].height / 10);\n                horizontalText = fontScaleService.getTextImage(ctx, curLabVal, fontSize - 2, config.vals.font.fontType, config.vals.colors.labelColor);\n                ctx.drawImage(horizontalText, 0, 0, horizontalText.width, horizontalText.height, perc - 5, canvas[0].height / 3, horizontalText.width, horizontalText.height);\n                horizontalText = fontScaleService.getTextImage(ctx, curEvt.samplePoint, fontSize - 4, config.vals.font.fontType, config.vals.colors.endBoundaryColor);\n                ctx.drawImage(horizontalText, 0, 0, horizontalText.width, horizontalText.height, perc + 5, 0, horizontalText.width, horizontalText.height);\n              }\n            });\n          }  // draw cursor/selected area\n        }\n        /**\n\t\t\t\t *\n\t\t\t\t */\n        function drawLevelMarkup(levelDetails, viewState, config) {\n          var ctx = canvas[1].getContext('2d');\n          ctx.clearRect(0, 0, canvas[1].width, canvas[1].height);\n          if (levelDetails.name === viewState.getcurClickLevelName()) {\n            ctx.fillStyle = config.vals.colors.selectedLevelColor;\n            ctx.fillRect(0, 0, canvas[0].width, canvas[0].height);\n          }\n          // draw moving boundary line if moving\n          Drawhelperservice.drawMovingBoundaryLine(ctx);\n          // draw current viewport selected\n          Drawhelperservice.drawCurViewPortSelected(ctx);\n          var posS, posE, sDist, xOffset, curEvt;\n          posS = viewState.getPos(canvas[1].width, viewState.curViewPort.selectS);\n          posE = viewState.getPos(canvas[1].width, viewState.curViewPort.selectE);\n          sDist = viewState.getSampleDist(canvas[1].width);\n          var segMId = viewState.getcurMouseSegment();\n          var isFirst = viewState.getcurMouseisFirst();\n          var isLast = viewState.getcurMouseisLast();\n          var clickedSegs = viewState.getcurClickSegments();\n          var levelId = viewState.getcurClickLevelName();\n          if (clickedSegs !== undefined) {\n            // draw clicked on selected areas\n            if (levelDetails.name === levelId && clickedSegs.length > 0) {\n              clickedSegs.forEach(function (cs) {\n                if (cs !== undefined) {\n                  // check if segment or event level\n                  if (cs.sampleStart !== undefined) {\n                    posS = Math.round(viewState.getPos(canvas[0].width, cs.sampleStart));\n                    posE = Math.round(viewState.getPos(canvas[0].width, cs.sampleStart + cs.sampleDur + 1));\n                  } else {\n                    posS = Math.round(viewState.getPos(canvas[0].width, cs.samplePoint) + sDist / 2);\n                    posS = posS - 5;\n                    posE = posS + 10;\n                  }\n                  ctx.fillStyle = config.vals.colors.selectedSegmentColor;\n                  ctx.fillRect(posS, 0, posE - posS, canvas[0].height);\n                  ctx.fillStyle = config.vals.colors.startBoundaryColor;\n                }\n              });\n            }\n          }\n          // draw preselected boundary\n          curEvt = viewState.getcurMouseSegment();\n          if (curEvt !== undefined && segMId !== undefined && levelDetails.name === viewState.getcurMouseLevelName()) {\n            ctx.fillStyle = config.vals.colors.selectedBoundaryColor;\n            if (isFirst === true) {\n              // before first segment\n              if (viewState.getcurMouseLevelType() === 'SEGMENT') {\n                curEvt = levelDetails.items[0];\n                posS = Math.round(viewState.getPos(canvas[1].width, curEvt.sampleStart));\n                ctx.fillRect(posS, 0, 3, canvas[1].height);\n              }\n            } else if (isLast === true) {\n              // after last segment\n              if (viewState.getcurMouseLevelType() === 'SEGMENT') {\n                curEvt = levelDetails.items[levelDetails.items.length - 1];\n                posS = Math.round(viewState.getPos(canvas[1].width, curEvt.sampleStart + curEvt.sampleDur + 1));\n                // +1 because boundaries are drawn on sampleStart\n                ctx.fillRect(posS, 0, 3, canvas[1].height);\n              }\n            } else {\n              // in the middle\n              if (viewState.getcurMouseLevelType() === 'SEGMENT') {\n                posS = Math.round(viewState.getPos(canvas[1].width, curEvt.sampleStart));\n                ctx.fillRect(posS, 0, 3, canvas[1].height);\n              } else {\n                posS = Math.round(viewState.getPos(canvas[1].width, curEvt.samplePoint));\n                xOffset = sDist / 2;\n                ctx.fillRect(posS + xOffset, 0, 3, canvas[1].height);\n              }\n            }\n            ctx.fillStyle = config.vals.colors.startBoundaryColor;\n          }\n        }\n      }\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').directive('osci', [\n  '$timeout',\n  'viewState',\n  'Soundhandlerservice',\n  'ConfigProviderService',\n  'Drawhelperservice',\n  function ($timeout, viewState, Soundhandlerservice, ConfigProviderService, Drawhelperservice) {\n    return {\n      templateUrl: 'views/osci.html',\n      replace: true,\n      restrict: 'E',\n      scope: {},\n      controller: [\n        '$scope',\n        function ($scope) {\n          $scope.changeAttrDef = function () {\n            alert('sadf');\n          };\n        }\n      ],\n      link: function postLink(scope, element, attrs) {\n        // select the needed DOM elements from the template\n        var canvasLength = element.find('canvas').length;\n        var canvas = element.find('canvas')[0];\n        var markupCanvas = element.find('canvas')[canvasLength - 1];\n        // assign attributes to scope\n        scope.order = attrs.order;\n        scope.trackName = attrs.trackName;\n        scope.cps = ConfigProviderService;\n        scope.viewState = viewState;\n        ///////////////\n        // watches\n        // on broadcast msg from main ctrl openSubmenu refresh timeline\n        scope.$on('refreshTimeline', function () {\n          if (!$.isEmptyObject(Soundhandlerservice)) {\n            if (!$.isEmptyObject(Soundhandlerservice.wavJSO)) {\n              drawVpOsciMarkup(scope, ConfigProviderService, true);\n            }\n          }\n        });\n        //\n        scope.$watch('viewState.timelineSize', function () {\n          $timeout(scope.redraw, 10);\n        });\n        //\n        scope.$watch('viewState.curPerspectiveIdx', function () {\n          drawVpOsciMarkup(scope, ConfigProviderService, true);\n        }, true);\n        //\n        scope.$watch('viewState.playHeadAnimationInfos', function () {\n          if (!$.isEmptyObject(Soundhandlerservice)) {\n            if (!$.isEmptyObject(Soundhandlerservice.wavJSO)) {\n              drawPlayHead(scope, ConfigProviderService);\n            }\n          }\n        }, true);\n        //\n        scope.$watch('viewState.movingBoundarySample', function (newValue) {\n          if (!$.isEmptyObject(Soundhandlerservice)) {\n            if (!$.isEmptyObject(Soundhandlerservice.wavJSO)) {\n              drawVpOsciMarkup(scope, ConfigProviderService, true);\n            }\n          }\n        }, true);\n        //\n        scope.$watch('viewState.movingBoundary', function () {\n          if (!$.isEmptyObject(Soundhandlerservice)) {\n            if (!$.isEmptyObject(Soundhandlerservice.wavJSO)) {\n              drawVpOsciMarkup(scope, ConfigProviderService, true);\n            }\n          }\n        }, true);\n        //\n        scope.$watch('viewState.curViewPort', function (newValue, oldValue) {\n          if (!$.isEmptyObject(Soundhandlerservice)) {\n            if (!$.isEmptyObject(Soundhandlerservice.wavJSO)) {\n              // check for changed zoom\n              if (oldValue.sS !== newValue.sS || oldValue.eS !== newValue.eS) {\n                var allPeakVals = Drawhelperservice.calculatePeaks(viewState, canvas, Soundhandlerservice.wavJSO.Data);\n                Drawhelperservice.osciPeaks = allPeakVals;\n                Drawhelperservice.freshRedrawDrawOsciOnCanvas(viewState, canvas, Drawhelperservice.osciPeaks, Soundhandlerservice.wavJSO.Data, ConfigProviderService);\n              }\n              drawVpOsciMarkup(scope, ConfigProviderService, true);\n            }\n          }\n        }, true);\n        //\n        /////////////////////////\n        scope.redraw = function () {\n          drawVpOsciMarkup(scope, ConfigProviderService, true);\n        };\n        /**\n\t\t\t\t *\n\t\t\t\t */\n        function drawPlayHead(scope, config) {\n          var ctx = markupCanvas.getContext('2d');\n          ctx.clearRect(0, 0, canvas.width, canvas.height);\n          var posS = viewState.getPos(markupCanvas.width, viewState.playHeadAnimationInfos.sS);\n          var posCur = viewState.getPos(markupCanvas.width, viewState.playHeadAnimationInfos.curS);\n          // console.log(viewState.playHeadAnimationInfos.curS)\n          ctx.fillStyle = ConfigProviderService.vals.colors.selectedAreaColor;\n          ctx.fillRect(posS, 0, posCur - posS, canvas.height);\n          //console.log(posS,posCur);\n          drawVpOsciMarkup(scope, config, false);\n        }\n        /**\n\t\t\t\t * draws markup of osci according to\n\t\t\t\t * the information that is specified in\n\t\t\t\t * the viewport\n\t\t\t\t */\n        function drawVpOsciMarkup(scope, config, reset) {\n          var ctx = markupCanvas.getContext('2d');\n          if (reset) {\n            ctx.clearRect(0, 0, markupCanvas.width, markupCanvas.height);\n          }\n          // draw moving boundary line if moving\n          Drawhelperservice.drawMovingBoundaryLine(ctx);\n          Drawhelperservice.drawViewPortTimes(ctx, true);\n          // draw current viewport selected\n          Drawhelperservice.drawCurViewPortSelected(ctx, true);\n        }\n      }\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').directive('preview', [\n  'viewState',\n  'Soundhandlerservice',\n  'Drawhelperservice',\n  'ConfigProviderService',\n  function (viewState, Soundhandlerservice, Drawhelperservice, ConfigProviderService) {\n    return {\n      templateUrl: 'views/preview.html',\n      restrict: 'E',\n      scope: { currentBundleName: '@' },\n      link: function postLink(scope, element) {\n        // select the needed DOM elements from the template and init vals\n        var canvas = element.find('canvas')[0];\n        var markupCanvas = element.find('canvas')[1];\n        var initialized = false;\n        // hook up scope vars for watches\n        scope.vs = viewState;\n        scope.shs = Soundhandlerservice;\n        scope.backgroundCanvas = {\n          'background': '#eee',\n          'border': '1px solid gray',\n          'width': '100%',\n          'height': '100%'\n        };\n        /////////////////////\n        // watches\n        //\n        scope.$watch('vs.curViewPort', function (newVal, oldVal) {\n          if (!$.isEmptyObject(Soundhandlerservice.wavJSO)) {\n            if (oldVal.sS !== newVal.sS || oldVal.eS !== newVal.eS) {\n              drawPreview();\n            }\n          }\n        }, true);\n        //\n        scope.$watch('currentBundleName', function () {\n          if (!$.isEmptyObject(Soundhandlerservice.wavJSO)) {\n            initialized = false;\n            scope.backgroundCanvas = {\n              'background': ConfigProviderService.vals.colors.levelColor,\n              'border': '1px solid gray',\n              'width': '100%',\n              'height': '100%'\n            };\n            drawPreview();\n          }\n          //clear on empty bundle name\n          if (scope.currentBundleName === '') {\n            var ctx = canvas.getContext('2d');\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n          }\n        }, true);\n        //\n        /////////////////////\n        /**\n\t\t\t\t *\n\t\t\t\t */\n        function drawPreview() {\n          if (!initialized) {\n            Drawhelperservice.freshRedrawDrawOsciOnCanvas(viewState, canvas, Drawhelperservice.osciPeaks, Soundhandlerservice.wavJSO.Data, ConfigProviderService);\n            initialized = true;\n            drawVpOsciMarkup(viewState, canvas, ConfigProviderService);\n          } else {\n            drawVpOsciMarkup(viewState, canvas, ConfigProviderService);\n          }\n        }\n        /**\n\t\t\t\t * draws markup of osci according to\n\t\t\t\t * the information that is specified in\n\t\t\t\t * the viewport\n\t\t\t\t */\n        function drawVpOsciMarkup(vs, canvas, config) {\n          var ctx = markupCanvas.getContext('2d');\n          var posS = markupCanvas.width / Soundhandlerservice.wavJSO.Data.length * vs.curViewPort.sS;\n          var posE = markupCanvas.width / Soundhandlerservice.wavJSO.Data.length * vs.curViewPort.eS;\n          ctx.clearRect(0, 0, markupCanvas.width, markupCanvas.height);\n          ctx.fillStyle = config.vals.colors.selectedAreaColor;\n          ctx.fillRect(posS, 0, posE - posS, markupCanvas.height);\n          ctx.strokeStyle = config.vals.colors.selectedBorderColor;\n          ctx.beginPath();\n          ctx.moveTo(posS, 0);\n          ctx.lineTo(posS, markupCanvas.height);\n          ctx.moveTo(posE, 0);\n          ctx.lineTo(posE, markupCanvas.height);\n          ctx.closePath();\n          ctx.stroke();\n        }\n      }\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').directive('bundleListSideBar', [\n  '$animate',\n  'viewState',\n  function ($animate, viewState) {\n    return {\n      templateUrl: 'views/bundleListSideBar.html',\n      restrict: 'E',\n      replace: true,\n      link: function postLink(scope, element, attr) {\n        ////////////////\n        //watches\n        scope.$watch('vs.submenuOpen', function () {\n          if (scope.vs.submenuOpen) {\n            $animate.removeClass(element, 'emuwebapp-shrinkWidthTo0px');\n            $animate.addClass(element, 'emuwebapp-expandWidthTo240px');\n          } else {\n            $animate.addClass(element, 'emuwebapp-shrinkWidthTo0px');\n          }\n        }, true);\n      }\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').directive('spectro', [\n  '$timeout',\n  'fontScaleService',\n  function ($timeout, fontScaleService) {\n    return {\n      templateUrl: 'views/spectro.html',\n      restrict: 'E',\n      replace: true,\n      link: function postLink(scope, element, attrs) {\n        scope.order = attrs.order;\n        // select the needed DOM elements from the template\n        var canvasLength = element.find('canvas').length;\n        var canvas0 = element.find('canvas')[0];\n        var canvas1 = element.find('canvas')[canvasLength - 1];\n        // FFT default vars\n        var alpha = 0.16;\n        // default alpha for Window Function\n        var context = canvas0.getContext('2d');\n        var markupCtx = canvas1.getContext('2d');\n        var pcmperpixel = 0;\n        window.URL = window.URL || window.webkitURL;\n        var devicePixelRatio = window.devicePixelRatio || 1;\n        var spectroWorker = 'scripts/workers/spectroWorker.js';\n        var primeWorker = new Worker(spectroWorker);\n        var currentImage;\n        ///////////////\n        // watches\n        //\n        scope.$watch('vs.timelineSize', function () {\n          if (!$.isEmptyObject(scope.shs)) {\n            if (!$.isEmptyObject(scope.shs.wavJSO)) {\n              $timeout(scope.redraw, 5);\n            }\n          }\n        });\n        scope.$watch('vs.curViewPort', function (newValue, oldValue) {\n          if (!$.isEmptyObject(scope.shs)) {\n            if (!$.isEmptyObject(scope.shs.wavJSO)) {\n              // check for changed zoom\n              if (oldValue.sS !== newValue.sS || oldValue.eS !== newValue.eS) {\n                scope.redraw();\n              }\n              drawSpectMarkup(true);\n            }\n          }\n        }, true);\n        scope.$watch('vs.movingBoundarySample', function () {\n          if (!$.isEmptyObject(scope.shs)) {\n            if (!$.isEmptyObject(scope.shs.wavJSO)) {\n              markupCtx.clearRect(0, 0, canvas1.width, canvas1.height);\n              drawSpectMarkup();\n            }\n          }\n        }, true);\n        scope.$watch('vs.movingBoundary', function () {\n          if (!$.isEmptyObject(scope.shs)) {\n            if (!$.isEmptyObject(scope.shs.wavJSO)) {\n              // scope.redraw();\n              drawSpectMarkup(true);\n            }\n          }\n        }, true);\n        scope.$watch('vs.spectroSettings', function () {\n          if (!$.isEmptyObject(scope.shs)) {\n            if (!$.isEmptyObject(scope.shs.wavJSO)) {\n              setupEvent();\n              scope.redraw();\n            }\n          }\n        }, true);\n        ///////////////\n        // bindings\n        scope.redraw = function () {\n          pcmpp();\n          markupCtx.clearRect(0, 0, canvas1.width, canvas1.height);\n          drawSpectro(scope.shs.wavJSO.Data);\n        };\n        function pcmpp() {\n          pcmperpixel = (scope.vs.curViewPort.eS + 1 - scope.vs.curViewPort.sS) / canvas0.width;\n        }\n        function drawSpectMarkup(reset) {\n          if (reset) {\n            markupCtx.clearRect(0, 0, canvas1.width, canvas1.height);\n          }\n          // draw moving boundary line if moving\n          scope.dhs.drawMovingBoundaryLine(markupCtx);\n          // draw current viewport selected\n          scope.dhs.drawCurViewPortSelected(markupCtx, false);\n          // draw min max vals and name of track\n          scope.dhs.drawMinMaxAndName(markupCtx, '', scope.vs.spectroSettings.rangeFrom, scope.vs.spectroSettings.rangeTo, 2);\n        }\n        function killSpectroRenderingThread() {\n          context.fillStyle = scope.cps.vals.colors.levelColor;\n          context.fillRect(0, 0, canvas0.width, canvas0.height);\n          // draw current viewport selected\n          scope.dhs.drawCurViewPortSelected(markupCtx, false);\n          // context.font = (scope.cps.vals.font.fontPxSize + 'px' + ' ' + scope.cps.vals.font.fontType);\n          // context.fillStyle = scope.cps.vals.colors.labelColor;\n          var horizontalText = fontScaleService.getTextImage(context, 'rendering...', scope.cps.vals.font.fontPxSize * 0.75, scope.cps.vals.font.fontType, scope.cps.vals.colors.labelColor, true);\n          context.drawImage(horizontalText, 10, 50);\n          if (primeWorker !== null) {\n            primeWorker.terminate();\n            primeWorker = null;\n          }\n        }\n        function setupEvent() {\n          //pcmperpixel = Math.round((scope.vs.curViewPort.eS - scope.vs.curViewPort.sS) / canvas0.width);\n          pcmpp();\n          var imageData = context.createImageData(canvas0.width, canvas0.height);\n          primeWorker.addEventListener('message', function (event) {\n            if (pcmperpixel === event.data.myStep) {\n              var tmp = new Uint8ClampedArray(event.data.img);\n              imageData.data.set(tmp);\n              context.putImageData(imageData, 0, 0);\n              drawSpectMarkup();\n            }\n          });\n        }\n        function drawSpectro(buffer) {\n          killSpectroRenderingThread();\n          //markupCtx.clearRect(0, 0, canvas1.width, canvas1.height);\n          startSpectroRenderingThread(buffer);\n        }\n        function startSpectroRenderingThread(buffer) {\n          pcmpp();\n          primeWorker = new Worker(spectroWorker);\n          // var parseData = new Float32Array(buffer.subarray(scope.vs.curViewPort.sS, scope.vs.curViewPort.eS + Math.round(pcmperpixel * 20 * scope.vs.spectroSettings.windowLength)));\n          var parseData;\n          if (scope.vs.curViewPort.sS >= scope.vs.spectroSettings.windowLength / 2) {\n            parseData = new Float32Array(buffer.subarray(scope.vs.curViewPort.sS - scope.vs.spectroSettings.windowLength / 2, scope.vs.curViewPort.eS + scope.vs.spectroSettings.windowLength));  // pass in half a window extra at the front and a full window extra at the back so everything can be drawn/calculated this also fixes alignment issue\n          } else {\n            parseData = new Float32Array(buffer.subarray(scope.vs.curViewPort.sS, scope.vs.curViewPort.eS + scope.vs.spectroSettings.windowLength));  // tolerate window/2 alignment issue if at beginning of file\n          }\n          setupEvent();\n          primeWorker.postMessage({\n            'cmd': 'config',\n            'N': scope.vs.spectroSettings.windowLength,\n            'alpha': alpha,\n            'freq': scope.vs.spectroSettings.rangeTo,\n            'freqLow': scope.vs.spectroSettings.rangeFrom,\n            'start': scope.vs.curViewPort.sS,\n            'end': scope.vs.curViewPort.eS,\n            'myStep': pcmperpixel,\n            'window': scope.vs.spectroSettings.window,\n            'width': canvas0.width,\n            'height': canvas0.height,\n            'dynRangeInDB': scope.vs.spectroSettings.dynamicRange,\n            'pixelRatio': devicePixelRatio,\n            'sampleRate': scope.shs.wavJSO.SampleRate,\n            'streamChannels': scope.shs.wavJSO.NumChannels,\n            'transparency': scope.cps.vals.spectrogramSettings.transparency,\n            'stream': parseData.buffer,\n            'drawHeatMapColors': scope.vs.spectroSettings.drawHeatMapColors,\n            'preEmphasisFilterFactor': scope.vs.spectroSettings.preEmphasisFilterFactor,\n            'heatMapColorAnchors': scope.vs.spectroSettings.heatMapColorAnchors\n          }, [parseData.buffer]);\n          primeWorker.postMessage({ 'cmd': 'render' });\n        }\n      }\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').controller('TimelineCtrl', [\n  '$scope',\n  'Drawhelperservice',\n  function ($scope, Drawhelperservice) {\n    $scope.dhs = Drawhelperservice;\n  }\n]);\n'use strict';\nangular.module('emuwebApp').controller('ExportCtrl', [\n  '$scope',\n  'dialogService',\n  'exportData',\n  'exportName',\n  'viewState',\n  'HistoryService',\n  function ($scope, dialogService, exportData, exportName, viewState, HistoryService) {\n    $scope.exportData = exportData;\n    $scope.exportName = exportName;\n    $scope.firefox = navigator.userAgent.match(/Firefox/i) ? true : false;\n    /**\n\t\t *\n\t\t */\n    $scope.cancel = function () {\n      dialogService.close();\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.getBlob = function () {\n      return new Blob([$scope.exportData], { type: 'text/plain' });\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.export = function () {\n      $scope.SaveToDisk(URL.createObjectURL($scope.getBlob()), $scope.exportName);\n      dialogService.close();\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.updateHistoryService = function () {\n      HistoryService.movesAwayFromLastSave = 0;\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.cursorInTextField = function () {\n      viewState.focusInTextField = true;\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.cursorOutOfTextField = function () {\n      viewState.focusInTextField = false;\n    };\n    /**\n\t\t *  Save file to disk // Non-IE ONLY !!\n\t\t */\n    $scope.SaveToDisk = function (fileURL, fileName) {\n      var save = document.createElement('a');\n      if ($scope.firefox) {\n        save.setAttribute('download', fileName);\n        save.href = fileURL;\n        save.innerHTML = '';\n        save.style.display = 'none';\n        document.body.appendChild(save);\n        save.click();\n      } else {\n        save.href = fileURL;\n        save.target = '_blank';\n        save.download = fileName || 'unknown';\n        var event = document.createEvent('Event');\n        event.initEvent('click', true, true);\n        save.dispatchEvent(event);\n        (window.URL || window.webkitURL).revokeObjectURL(save.href);\n      }\n      $scope.updateHistoryService();\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').factory('viewState', [\n  '$rootScope',\n  '$window',\n  'Soundhandlerservice',\n  function ($rootScope, $window, Soundhandlerservice) {\n    //shared service object to be returned\n    var sServObj = {};\n    // window functions enum for spectro\n    var myWindow = {\n        BARTLETT: 1,\n        BARTLETTHANN: 2,\n        BLACKMAN: 3,\n        COSINE: 4,\n        GAUSS: 5,\n        HAMMING: 6,\n        HANN: 7,\n        LANCZOS: 8,\n        RECTANGULAR: 9,\n        TRIANGULAR: 10\n      };\n    // hold the current attribute definitions that are in view \n    var curLevelAttrDefs = [];\n    /**\n     * initialize all needed vars in viewState\n     */\n    sServObj.initialize = function () {\n      sServObj.curViewPort = {\n        sS: 0,\n        eS: 0,\n        selectS: -1,\n        selectE: -1,\n        dragBarActive: false,\n        dragBarHeight: -1,\n        windowWidth: undefined\n      };\n      sServObj.spectroSettings = {\n        windowLength: -1,\n        rangeFrom: -1,\n        rangeTo: -1,\n        dynamicRange: -1,\n        window: -1,\n        drawHeatMapColors: -1,\n        preEmphasisFilterFactor: -1\n      };\n      sServObj.playHeadAnimationInfos = {\n        sS: -1,\n        eS: -1,\n        curS: null,\n        endFreezeSample: -1\n      };\n      sServObj.timelineSize = -1;\n      sServObj.somethingInProgress = false;\n      sServObj.somethingInProgressTxt = '';\n      sServObj.curClickSegments = [];\n      sServObj.editing = false;\n      sServObj.submenuOpen = false;\n      sServObj.rightSubmenuOpen = false;\n      sServObj.curMousePosSample = 0;\n      sServObj.curMouseLevelName = undefined;\n      sServObj.curMouseLevelType = undefined;\n      sServObj.curClickLevelName = undefined;\n      sServObj.curClickLevelType = undefined;\n      sServObj.curPreselColumnSample = 2;\n      sServObj.curCorrectionToolNr = undefined;\n      sServObj.curClickLevelIndex = undefined;\n      sServObj.start = null;\n      sServObj.TransitionTime = undefined;\n      sServObj.showDropZone = true;\n      sServObj.movingBoundary = false;\n      sServObj.movingBoundarySample = undefined;\n      sServObj.focusInTextField = false;\n      sServObj.curTaskPercCompl = 0;\n      sServObj.curPerspectiveIdx = -1;\n      sServObj.mouseInEmuWebApp = false;\n      // possible general states of state machine\n      sServObj.states = [];\n      sServObj.states.noDBorFilesloaded = {\n        'permittedActions': [\n          'connectBtnClick',\n          'openDemoBtnDBclick'\n        ]\n      };\n      sServObj.states.loadingSaving = { 'permittedActions': [] };\n      sServObj.states.labeling = {\n        'permittedActions': [\n          'zoom',\n          'playaudio',\n          'spectSettingsChange',\n          'addLevelSegBtnClick',\n          'addLevelPointBtnClick',\n          'renameSelLevelBtnClick',\n          'downloadTextGridBtnClick',\n          'spectSettingsChange',\n          'clearBtnClick',\n          'labelAction',\n          'toggleSideBars',\n          'saveBndlBtnClick'\n        ]\n      };\n      sServObj.states.modalShowing = sServObj.states.loadingSaving;\n      sServObj.prevState = sServObj.states.noDBorFilesloaded;\n      sServObj.curState = sServObj.states.noDBorFilesloaded;\n      curLevelAttrDefs = [];\n    };\n    // initialize on init\n    sServObj.initialize();\n    /**\n     * function to ask permission in current labeler state\n     */\n    sServObj.getPermission = function (actionName) {\n      return sServObj.curState.permittedActions.indexOf(actionName) > -1;\n    };\n    /**\n     *\n     */\n    sServObj.setWindowWidth = function (b) {\n      this.curViewPort.windowWidth = b;\n    };\n    /**\n     * set state\n     */\n    sServObj.setState = function (nameOrObj) {\n      sServObj.prevState = sServObj.curState;\n      if (typeof nameOrObj === 'string') {\n        sServObj.curState = sServObj.states[nameOrObj];\n      } else {\n        sServObj.curState = nameOrObj;\n      }\n    };\n    /**\n     *\n     */\n    sServObj.updatePlayHead = function (timestamp) {\n      // at first push animation !!!\n      if (Soundhandlerservice.player.isPlaying) {\n        $window.requestAnimationFrame(sServObj.updatePlayHead);\n      }\n      // do work in this animation round now\n      if (sServObj.start === null) {\n        sServObj.start = timestamp;\n      }\n      var samplesPassed = Math.floor(timestamp - sServObj.start) / 1000 * Soundhandlerservice.wavJSO.SampleRate;\n      sServObj.playHeadAnimationInfos.curS = Math.floor(sServObj.playHeadAnimationInfos.sS + samplesPassed);\n      if (Soundhandlerservice.player.isPlaying && sServObj.playHeadAnimationInfos.curS <= sServObj.playHeadAnimationInfos.eS) {\n        if (sServObj.playHeadAnimationInfos.curS !== -1) {\n          sServObj.curMousePosSample = sServObj.playHeadAnimationInfos.curS;\n        }\n        $rootScope.$apply();\n      } else {\n        sServObj.curMousePosSample = sServObj.playHeadAnimationInfos.endFreezeSample;\n        sServObj.playHeadAnimationInfos.sS = -1;\n        sServObj.playHeadAnimationInfos.eS = -1;\n        sServObj.playHeadAnimationInfos.curS = 0;\n        sServObj.start = null;\n      }\n    };\n    /**\n     *\n     */\n    sServObj.animatePlayHead = function (startS, endS) {\n      sServObj.playHeadAnimationInfos.sS = startS;\n      sServObj.playHeadAnimationInfos.eS = endS;\n      sServObj.playHeadAnimationInfos.endFreezeSample = endS;\n      sServObj.playHeadAnimationInfos.curS = startS;\n      $window.requestAnimationFrame(sServObj.updatePlayHead);\n    };\n    /**\n     * set selected Area\n     * @param start of selected Area\n     * @param end of selected Area\n     */\n    sServObj.select = function (start, end) {\n      sServObj.curViewPort.selectS = start;\n      sServObj.curViewPort.selectE = end;  //$rootScope.$digest();\n    };\n    /**\n     * reset selected Area to default\n     * @param length of current pcm stream\n     */\n    sServObj.resetSelect = function () {\n      sServObj.curViewPort.selectS = -1;\n      sServObj.curViewPort.selectE = -1;\n    };\n    /**\n     * gets the current Viewport\n     */\n    sServObj.getViewPort = function () {\n      return sServObj.curViewPort;\n    };\n    /**\n     * setspectroSettings\n     */\n    sServObj.setspectroSettings = function (len, rfrom, rto, dyn, win, hm, preEmph, hmColorAnchors) {\n      sServObj.spectroSettings.windowLength = parseInt(len, 10);\n      sServObj.spectroSettings.rangeFrom = parseInt(rfrom, 10);\n      sServObj.spectroSettings.rangeTo = parseInt(rto, 10);\n      sServObj.spectroSettings.dynamicRange = parseInt(dyn, 10);\n      sServObj.setWindowFunction(win);\n      sServObj.spectroSettings.drawHeatMapColors = hm;\n      sServObj.spectroSettings.preEmphasisFilterFactor = preEmph;\n      sServObj.spectroSettings.heatMapColorAnchors = hmColorAnchors;\n    };\n    /**\n     * returns current selection as array\n     */\n    sServObj.getSelect = function () {\n      return [\n        sServObj.curViewPort.selectS,\n        sServObj.curViewPort.selectE\n      ];\n    };\n    /**\n     * set selected Area if new\n     * start value is smaler than actual and\n     * end value is greater than actual\n     * @param start of selected Area\n     * @param end of seleected Area\n     */\n    sServObj.selectDependent = function (start, end) {\n      if (start < this.curViewPort.selectS) {\n        this.curViewPort.selectS = start;\n      }\n      if (end > this.curViewPort.selectE) {\n        this.curViewPort.selectE = end;\n      }\n    };\n    /**\n     *\n     */\n    sServObj.selectLevel = function (next, order, Levelserv) {\n      var curLev;\n      var now = sServObj.getcurClickLevelName();\n      if (now === undefined && !next) {\n        // select first if none prev. defined (up)\n        // viewState.setcurClickLevel(levelID, levelType, scope.$index, scope.this.level.items.length);\n        curLev = Levelserv.getLevelDetails(order[0]);\n        sServObj.setcurClickLevel(curLev.level.name, curLev.level.type, 0);\n        return;\n      } else if (now === undefined && next) {\n        // select last if none prev. defined (down)\n        curLev = Levelserv.getLevelDetails(order[order.length - 1]);\n        sServObj.setcurClickLevel(curLev.level.name, curLev.level.type, order.length - 1);\n        return;\n      }\n      var idxOfNow;\n      order.forEach(function (name, idx) {\n        if (name === now) {\n          idxOfNow = idx;\n        }\n      });\n      if (next) {\n        if (idxOfNow + 1 < order.length) {\n          curLev = Levelserv.getLevelDetails(order[idxOfNow + 1]);\n          // sServObj.setcurClickLevelName(order[idxOfNow + 1]);\n          sServObj.setcurClickLevel(curLev.level.name, curLev.level.type, order.idxOfNow + 1);\n          sServObj.curClickSegments = [];\n          sServObj.selectBoundary();  //sServObj.resetSelect();\n        }\n      } else {\n        if (idxOfNow - 1 >= 0) {\n          curLev = Levelserv.getLevelDetails(order[idxOfNow - 1]);\n          // sServObj.setcurClickLevelName(order[idxOfNow - 1]);\n          sServObj.setcurClickLevel(curLev.level.name, curLev.level.type, order.idxOfNow - 1);\n          sServObj.curClickSegments = [];\n          sServObj.selectBoundary();  //sServObj.resetSelect();\n        }\n      }\n    };\n    /**\n     * set the window Function for the Spectrogram\n     * @param name of Window Function\n     */\n    sServObj.setWindowFunction = function (name) {\n      switch (name) {\n      case 'BARTLETT':\n        sServObj.spectroSettings.window = myWindow.BARTLETT;\n        break;\n      case 'BARTLETTHANN':\n        sServObj.spectroSettings.window = myWindow.BARTLETTHANN;\n        break;\n      case 'BLACKMAN':\n        sServObj.spectroSettings.window = myWindow.BLACKMAN;\n        break;\n      case 'COSINE':\n        sServObj.spectroSettings.window = myWindow.COSINE;\n        break;\n      case 'GAUSS':\n        sServObj.spectroSettings.window = myWindow.GAUSS;\n        break;\n      case 'HAMMING':\n        sServObj.spectroSettings.window = myWindow.HAMMING;\n        break;\n      case 'HANN':\n        sServObj.spectroSettings.window = myWindow.HANN;\n        break;\n      case 'LANCZOS':\n        sServObj.spectroSettings.window = myWindow.LANCZOS;\n        break;\n      case 'RECTANGULAR':\n        sServObj.spectroSettings.window = myWindow.RECTANGULAR;\n        break;\n      case 'TRIANGULAR':\n        sServObj.spectroSettings.window = myWindow.TRIANGULAR;\n        break;\n      default:\n        sServObj.spectroSettings.window = myWindow.BARTLETTHANN;\n        break;\n      }\n    };\n    /**\n     * @returns myWindow object\n     */\n    sServObj.getWindowFunctions = function () {\n      return myWindow;\n    };\n    /**\n     * set if user is dragging dragbar\n     */\n    sServObj.getdragBarActive = function () {\n      return this.curViewPort.dragBarActive;\n    };\n    /**\n     * set if user is dragging dragbar\n     */\n    sServObj.setdragBarActive = function (b) {\n      this.curViewPort.dragBarActive = b;\n    };\n    /**\n     * set if user is dragging dragbar\n     */\n    sServObj.getdragBarHeight = function () {\n      return this.curViewPort.dragBarHeight;\n    };\n    /**\n     * set if user is dragging dragbar\n     */\n    sServObj.setdragBarHeight = function (b) {\n      this.curViewPort.dragBarHeight = b;\n    };\n    /**\n     * get pixel position in current viewport given the canvas width\n     * @param w is width of canvas\n     * @param s is current sample to convert to pixel value\n     */\n    sServObj.getPos = function (w, s) {\n      return w * (s - this.curViewPort.sS) / (this.curViewPort.eS - this.curViewPort.sS + 1);  // + 1 because of view (displays all samples in view)\n    };\n    /**\n     * calculate the pixel distance between two samples\n     * @param w is width of canvas\n     */\n    sServObj.getSampleDist = function (w) {\n      return this.getPos(w, this.curViewPort.sS + 1) - this.getPos(w, this.curViewPort.sS);\n    };\n    /**\n     * get the height of the osci\n     */\n    sServObj.getsubmenuOpen = function () {\n      return this.submenuOpen;\n    };\n    /**\n     * get the height of the osci\n     */\n    sServObj.setsubmenuOpen = function (s) {\n      this.submenuOpen = s;\n    };\n    /**\n     * get the height of the osci\n     */\n    sServObj.setenlarge = function (s) {\n      this.timelineSize = s;\n    };\n    /**\n     * get the height of the osci\n     */\n    sServObj.getenlarge = function () {\n      return this.timelineSize;\n    };\n    /**\n     * get the height of the osci\n     */\n    sServObj.getTransitionTime = function () {\n      return this.TransitionTime;\n    };\n    /**\n     * get the height of the osci\n     */\n    sServObj.setTransitionTime = function (s) {\n      this.TransitionTime = s;\n    };\n    /**\n     * get the height of the osci\n     */\n    sServObj.getRightsubmenuOpen = function () {\n      return this.rightSubmenuOpen;\n    };\n    /**\n     * get the height of the osci\n     */\n    sServObj.setRightsubmenuOpen = function (s) {\n      this.rightSubmenuOpen = s;\n    };\n    /**\n     *\n     */\n    sServObj.setcurClickLevel = function (levelID, levelType, levelIndex) {\n      this.setcurClickLevelName(levelID, levelIndex);\n      this.setcurClickLevelType(levelType);\n    };\n    /**\n     * sets the current (clicked) Level Name\n     * @param name is name of level\n     */\n    sServObj.setcurClickLevelType = function (name) {\n      this.curClickLevelType = name;\n    };\n    /**\n     * gets the current (clicked) Level Name\n     */\n    sServObj.getcurClickLevelType = function () {\n      return this.curClickLevelType;\n    };\n    /**\n     * sets the current (clicked) Level Name\n     * @param name is name of level\n     */\n    sServObj.setcurClickLevelName = function (name, index) {\n      this.curClickLevelName = name;\n      this.curClickLevelIndex = index;\n    };\n    /**\n     * gets the current (clicked) Level Name\n     */\n    sServObj.getcurClickLevelName = function () {\n      return this.curClickLevelName;\n    };\n    /**\n     * gets the current (clicked) Level Name\n     */\n    sServObj.getcurClickLevelIndex = function () {\n      return this.curClickLevelIndex;\n    };\n    /**\n     * gets the current (clicked) Level Name\n     */\n    sServObj.getcurClickNeighbours = function () {\n      return this.curClickNeighbours;\n    };\n    /**\n     * sets the current (mousemove) Level Name\n     * @param name is name of level\n     */\n    sServObj.setcurMouseLevelName = function (name) {\n      this.curMouseLevelName = name;\n    };\n    /**\n     * gets the current (mousemove) Level Name\n     */\n    sServObj.getcurMouseLevelName = function () {\n      return this.curMouseLevelName;\n    };\n    /**\n     * sets the current (mousemove) Level Name\n     * @param name is name of level\n     */\n    sServObj.setcurMouseLevelType = function (name) {\n      this.curMouseLevelType = name;\n    };\n    /**\n     * gets the current (mousemove) Level Name\n     */\n    sServObj.getcurMouseLevelType = function () {\n      return this.curMouseLevelType;\n    };\n    /**\n     * sets the current (mousemove) Segment\n     * @param name is name of segment\n     */\n    sServObj.setcurMouseSegment = function (segment, neighbour, x, isFirst, isLast) {\n      this.curMouseSegment = segment;\n      this.curMouseX = x;\n      this.curMouseNeighbours = neighbour;\n      this.curMouseisFirst = isFirst;\n      this.curMouseisLast = isLast;\n    };\n    /**\n     * gets the current (mousemove) Segment\n     */\n    sServObj.getcurMouseSegment = function () {\n      return this.curMouseSegment;\n    };\n    /**\n     * gets the current (mousemove) Segment\n     */\n    sServObj.getcurMouseisFirst = function () {\n      return this.curMouseisFirst;\n    };\n    /**\n     * gets the current (mousemove) Segment\n     */\n    sServObj.getcurMouseisLast = function () {\n      return this.curMouseisLast;\n    };\n    /**\n     * gets the current (mousemove) Segment\n     */\n    sServObj.getcurMouseNeighbours = function () {\n      return this.curMouseNeighbours;\n    };\n    /**\n     * selects all Segements on current level which are inside the selected viewport\n     */\n    sServObj.selectSegmentsInSelection = function (levelData) {\n      sServObj.curClickSegments = [];\n      var min = Infinity;\n      var max = -Infinity;\n      var itemInSel = this.getItemsInSelection(levelData);\n      angular.forEach(itemInSel, function (item) {\n        if (item.sampleStart < min) {\n          min = item.sampleStart;\n        }\n        if (item.sampleStart + item.sampleDur + 1 > max) {\n          max = item.sampleStart + item.sampleDur + 1;\n        }\n        sServObj.setcurClickSegmentMultiple(item);\n      });\n      sServObj.curViewPort.selectS = min;\n      sServObj.curViewPort.selectE = max;\n    };\n    /**\n     * get all items of current level which are inside the selected viewport\n     */\n    sServObj.getItemsInSelection = function (levelData) {\n      var itemsInRange = [];\n      var rangeStart = sServObj.curViewPort.selectS;\n      var rangeEnd = sServObj.curViewPort.selectE;\n      angular.forEach(levelData, function (t) {\n        if (t.name === sServObj.getcurClickLevelName()) {\n          angular.forEach(t.items, function (item) {\n            //SEGMENTS\n            if (item.sampleStart >= rangeStart && item.sampleStart + item.sampleDur <= rangeEnd) {\n              itemsInRange.push(item);\n            }\n            //EVENTS\n            if (item.samplePoint >= rangeStart && item.samplePoint <= rangeEnd) {\n              itemsInRange.push(item);\n            }\n          });\n        }\n      });\n      return itemsInRange;\n    };\n    /**\n     * sets the current (click) Segment\n     * @param segment\n     */\n    sServObj.setcurClickSegment = function (segment) {\n      if (segment !== null && segment !== undefined) {\n        sServObj.curClickSegments = [];\n        sServObj.curClickSegments.push(segment);\n        sServObj.selectBoundary();\n      } else {\n        sServObj.curClickSegments = [];\n      }\n    };\n    /**\n     * sets a multiple select (click) Segment\n     */\n    sServObj.selectBoundary = function () {\n      if (sServObj.curClickSegments.length > 0) {\n        var left, right;\n        if (sServObj.curClickSegments[0].sampleStart !== undefined) {\n          left = sServObj.curClickSegments[0].sampleStart;\n        } else {\n          left = sServObj.curClickSegments[0].samplePoint;\n        }\n        var right = sServObj.curClickSegments[sServObj.curClickSegments.length - 1].sampleStart + sServObj.curClickSegments[sServObj.curClickSegments.length - 1].sampleDur || sServObj.curClickSegments[0].samplePoint;\n        sServObj.curClickSegments.forEach(function (entry) {\n          if (entry.sampleStart <= left) {\n            left = entry.sampleStart;\n          }\n          if (entry.sampleStart + entry.sampleDur >= right) {\n            right = entry.sampleStart + entry.sampleDur;\n          }\n        });\n        sServObj.select(left, right + 1);\n      }\n    };\n    /**\n     * sets a multiple select (click) Segment\n     * @param segment\n     */\n    sServObj.setcurClickSegmentMultiple = function (segment) {\n      var empty = true;\n      var my = this;\n      var start = segment.sampleStart;\n      var end = start + segment.sampleDur + 1;\n      sServObj.curClickSegments.forEach(function (entry) {\n        var front = entry.sampleStart == end ? true : false;\n        var back = entry.sampleStart + entry.sampleDur + 1 == start ? true : false;\n        if ((front || back) && sServObj.curClickSegments.indexOf(segment) === -1) {\n          sServObj.curClickSegments.push(segment);\n          empty = false;\n        }\n      });\n      if (empty) {\n        sServObj.curClickSegments = [];\n        sServObj.curClickSegments.push(segment);\n      } else {\n        sServObj.curClickSegments.sort(sServObj.sortbyid);\n      }\n    };\n    /**\n     *\n     */\n    sServObj.sortbyid = function (a, b) {\n      //Compare \"a\" and \"b\" in some fashion, and return -1, 0, or 1\n      if (a.sampleStart > b.sampleStart)\n        return 1;\n      if (a.sampleStart < b.sampleStart)\n        return -1;\n      return 0;\n    };\n    /**\n     * gets the current (click) Segment\n     */\n    sServObj.getselectedRange = function () {\n      if (this.curClickSegments.length > 1) {\n        return {\n          start: this.curClickSegments[0].sampleStart,\n          end: this.curClickSegments[this.curClickSegments.length - 1].sampleStart + this.curClickSegments[this.curClickSegments.length - 1].sampleDur\n        };\n      } else if (this.curClickSegments.length === 1) {\n        if (this.curClickSegments[0].sampleStart !== undefined) {\n          return {\n            start: this.curClickSegments[0].sampleStart,\n            end: this.curClickSegments[0].sampleStart + this.curClickSegments[0].sampleDur\n          };\n        } else {\n          return {\n            start: this.curClickSegments[0].samplePoint,\n            end: this.curClickSegments[0].samplePoint\n          };\n        }\n      } else {\n        return {\n          start: -1,\n          end: -1\n        };\n      }\n    };\n    /**\n     * gets the current (click) Segments\n     */\n    sServObj.getcurClickSegments = function () {\n      return this.curClickSegments;\n    };\n    /**\n     * gets the first ! current (click) Segment\n     */\n    sServObj.getfirstClickSegment = function () {\n      if (sServObj.curClickSegments.length > 0) {\n        return sServObj.curClickSegments[0];\n      }\n    };\n    /**\n     *\n     */\n    sServObj.getselected = function () {\n      return this.curClickSegments;\n    };\n    /**\n     *\n     */\n    sServObj.isEditing = function () {\n      return this.editing;\n    };\n    /**\n     *\n     */\n    sServObj.setEditing = function (n) {\n      this.editing = n;\n    };\n    /**\n     *\n     */\n    sServObj.countSelected = function () {\n      return this.curClickSegments.length;\n    };\n    /**\n     *\n     */\n    sServObj.getCurrentSample = function (perc) {\n      return this.curViewPort.sS + (this.curViewPort.eS - this.curViewPort.sS) * perc;\n    };\n    /**\n     *\n     */\n    sServObj.getCurrentPercent = function (sample) {\n      return sample * (100 / (this.curViewPort.eS - this.curViewPort.sS) / 100);\n    };\n    /**\n     *\n     */\n    sServObj.getSamplesPerPixelVal = function (event) {\n      var start = parseFloat(this.curViewPort.sS);\n      var end = parseFloat(this.curViewPort.eS);\n      return (end - start) / event.originalEvent.target.width;\n    };\n    /**\n     * round to n decimal digits after the comma\n     * used to help display numbers with a given\n     * precision\n     */\n    sServObj.round = function (x, n) {\n      if (n < 1 || n > 14) {\n        console.error('error in call of round function!!');\n      }\n      var e = Math.pow(10, n);\n      var k = (Math.round(x * e) / e).toString();\n      if (k.indexOf('.') === -1) {\n        k += '.';\n      }\n      k += e.toString().substring(1);\n      return parseFloat(k.substring(0, k.indexOf('.') + n + 1));\n    };\n    /**\n     * calcs and returns start in secs\n     */\n    sServObj.getViewPortStartTime = function () {\n      return this.curViewPort.sS * 1 / Soundhandlerservice.wavJSO.SampleRate - 0.5 / Soundhandlerservice.wavJSO.SampleRate;\n    };\n    /**\n     * calcs and returns end time in secs\n     */\n    sServObj.getViewPortEndTime = function () {\n      return this.curViewPort.eS * 1 / Soundhandlerservice.wavJSO.SampleRate + 0.5 / Soundhandlerservice.wavJSO.SampleRate;\n    };\n    /**\n     * calcs and returns start in secs\n     */\n    sServObj.getSelectedStartTime = function () {\n      return this.curViewPort.selectS * 1 / Soundhandlerservice.wavJSO.SampleRate - 0.5 / Soundhandlerservice.wavJSO.SampleRate;\n    };\n    /**\n     * calcs and returns end time in secs\n     */\n    sServObj.getSelectedEndTime = function () {\n      return this.curViewPort.selectE * 1 / Soundhandlerservice.wavJSO.SampleRate + 0.5 / Soundhandlerservice.wavJSO.SampleRate;\n    };\n    /**\n     * set view port to start and end sample\n     * (with several out-of-bounds like checks)\n     *\n     * @param sSample start sample of view\n     * @param sSample end sample of view\n     */\n    sServObj.setViewPort = function (sSample, eSample) {\n      var oldStart = this.curViewPort.sS;\n      var oldEnd = this.curViewPort.eS;\n      if (sSample !== undefined) {\n        this.curViewPort.sS = Math.round(sSample);\n      }\n      if (eSample !== undefined) {\n        this.curViewPort.eS = Math.round(eSample);\n      }\n      // check if moving left or right is not out of bounds -> prevent zooming on edge when moving left/right\n      if (oldStart > this.curViewPort.sS && oldEnd > this.curViewPort.eS) {\n        //moved left\n        if (this.curViewPort.sS < 0) {\n          this.curViewPort.sS = 0;\n          this.curViewPort.eS = oldEnd + Math.abs(this.curViewPort.sS);\n        }\n      }\n      if (oldStart < this.curViewPort.sS && oldEnd < this.curViewPort.eS) {\n        //moved right\n        if (this.curViewPort.eS > Soundhandlerservice.wavJSO.Data.length) {\n          this.curViewPort.sS = oldStart;\n          this.curViewPort.eS = Soundhandlerservice.wavJSO.Data.length;\n        }\n      }\n      // check if in range\n      if (this.curViewPort.sS < 0) {\n        this.curViewPort.sS = 0;\n      }\n      if (this.curViewPort.eS > Soundhandlerservice.wavJSO.Data.length) {\n        this.curViewPort.eS = Soundhandlerservice.wavJSO.Data.length;\n      }\n      // check if at least 4 samples are showing (fixed max zoom size)\n      if (this.curViewPort.eS - this.curViewPort.sS < 4) {\n        this.curViewPort.sS = oldStart;\n        this.curViewPort.eS = oldEnd;\n      }\n    };\n    /**\n     * set view port to start and end sample\n     * (with several out-of-bounds like checks)\n     *\n     * @param zoomIn bool to specify zooming direction\n     * if set to true -> zoom in\n     * if set to false -> zoom out\n     */\n    sServObj.zoomViewPort = function (zoomIn, LevelService) {\n      var newStartS, newEndS, curMouseMoveSegmentStart;\n      var seg = this.getcurMouseSegment();\n      var d = this.curViewPort.eS - this.curViewPort.sS;\n      var isLastSeg = false;\n      if (seg !== undefined) {\n        if (this.getcurMouseisFirst()) {\n          // before first element\n          seg = LevelService.getItemDetails(sServObj.getcurMouseLevelName(), 0);\n        } else if (this.getcurMouseisLast()) {\n          seg = LevelService.getLastItem(sServObj.getcurMouseLevelName());\n          isLastSeg = true;\n        }\n        if (this.getcurMouseLevelType() === 'SEGMENT') {\n          if (isLastSeg) {\n            curMouseMoveSegmentStart = seg.sampleStart + seg.sampleDur;\n          } else {\n            curMouseMoveSegmentStart = seg.sampleStart;\n          }\n        } else {\n          curMouseMoveSegmentStart = seg.samplePoint;\n        }\n        var d1 = curMouseMoveSegmentStart - this.curViewPort.sS;\n        var d2 = this.curViewPort.eS - curMouseMoveSegmentStart;\n        if (zoomIn) {\n          newStartS = this.curViewPort.sS + d1 * 0.5;\n          newEndS = this.curViewPort.eS - d2 * 0.5;\n        } else {\n          newStartS = this.curViewPort.sS - d1 * 0.5;\n          newEndS = this.curViewPort.eS + d2 * 0.5;\n        }\n      } else {\n        if (zoomIn) {\n          newStartS = this.curViewPort.sS + ~~(d / 4);\n          newEndS = this.curViewPort.eS - ~~(d / 4);\n        } else {\n          newStartS = this.curViewPort.sS - ~~(d / 4);\n          newEndS = this.curViewPort.eS + ~~(d / 4);\n        }\n      }\n      this.setViewPort(newStartS, newEndS);\n    };\n    /**\n     * moves view port to the right or to the left\n     * without changing the zoom\n     *\n     * @param shiftRight bool to specify direction\n     * if set to true -> shift right\n     * if set to false -> shift left\n     */\n    sServObj.shiftViewPort = function (shiftRight) {\n      // my.removeLabelDoubleClick();\n      var newStartS, newEndS;\n      if (shiftRight) {\n        newStartS = this.curViewPort.sS + ~~((this.curViewPort.eS - this.curViewPort.sS) / 4);\n        newEndS = this.curViewPort.eS + ~~((this.curViewPort.eS - this.curViewPort.sS) / 4);\n      } else {\n        newStartS = this.curViewPort.sS - ~~((this.curViewPort.eS - this.curViewPort.sS) / 4);\n        newEndS = this.curViewPort.eS - ~~((this.curViewPort.eS - this.curViewPort.sS) / 4);\n      }\n      this.setViewPort(newStartS, newEndS);\n    };\n    /**\n     * sets all the curLevelAttrDefs array\n     * to hold the default attr. definitions\n     * which are the same as the level names\n     *\n     * @param levelDefs level definitions from the DBconfig\n     */\n    sServObj.setCurLevelAttrDefs = function (levelDefs) {\n      angular.forEach(levelDefs, function (ld) {\n        curLevelAttrDefs.push({\n          'levelName': ld.name,\n          'curAttrDefName': ld.name\n        });\n      });\n    };\n    /**\n     * set the current attribute definition name of the\n     * given levelName\n     *\n     * @param levelName name of level\n     * @param newAttrDefName\n     */\n    sServObj.setCurAttrDef = function (levelName, newAttrDefName, index) {\n      angular.forEach(curLevelAttrDefs, function (ad) {\n        if (ad.levelName === levelName) {\n          ad.curAttrDefName = newAttrDefName;\n          ad.curAttrDefIndex = index;\n        }\n      });\n    };\n    /**\n     * get the current attribute definition name of the\n     * given levelName\n     *\n     * @param levelName name of level\n     * @returns attrDefName\n     */\n    sServObj.getCurAttrDef = function (levelName) {\n      var curAttrDef;\n      angular.forEach(curLevelAttrDefs, function (ad) {\n        if (ad.levelName === levelName) {\n          curAttrDef = ad.curAttrDefName;\n        }\n      });\n      return curAttrDef;\n    };\n    /**\n     * get the current attribute definition index of the\n     * given levelName\n     *\n     * @param levelName name of level\n     * @returns attrDefName\n     */\n    sServObj.getCurAttrIndex = function (levelName) {\n      var curAttrDef;\n      angular.forEach(curLevelAttrDefs, function (ad) {\n        if (ad.levelName === levelName) {\n          if (ad.curAttrDefIndex === undefined) {\n            curAttrDef = 0;\n          } else {\n            curAttrDef = ad.curAttrDefIndex;\n          }\n        }\n      });\n      return curAttrDef;\n    };\n    /**\n\t*\n\t*/\n    sServObj.getX = function (e) {\n      return (e.offsetX || e.originalEvent.layerX) * (e.originalEvent.target.width / e.originalEvent.target.clientWidth);\n    };\n    /**\n\t*\n\t*/\n    sServObj.getY = function (e) {\n      return (e.offsetY || e.originalEvent.layerY) * (e.originalEvent.target.height / e.originalEvent.target.clientHeight);\n    };\n    /**\n     *\n     */\n    sServObj.resetToInitState = function () {\n      sServObj.initialize();\n    };\n    return sServObj;\n  }\n]);\n'use strict';\nangular.module('emuwebApp').directive('trackmouseinlevel', [\n  'viewState',\n  'LevelService',\n  'ConfigProviderService',\n  'HistoryService',\n  'Soundhandlerservice',\n  function (viewState, LevelService, ConfigProviderService, HistoryService, Soundhandlerservice) {\n    return {\n      restrict: 'A',\n      scope: { level: '=' },\n      link: function (scope, element, attr) {\n        var lastEventClick;\n        var lastEventClickId;\n        var lastEventRightClick;\n        var lastEventRightClickId;\n        var lastEventMove;\n        var lastEventMoveId;\n        var lastNeighbours;\n        var lastNeighboursMove;\n        var lastPCM;\n        var curMouseSampleNrInView;\n        var levelID = scope.level.name;\n        var levelType = scope.level.type;\n        /////////////////////////////\n        // Bindings\n        //\n        element.bind('click', function (event) {\n          event.preventDefault();\n          setLastMove(event, true);\n          setLastClick(event);\n        });\n        //\n        element.bind('contextmenu', function (event) {\n          event.preventDefault();\n          setLastMove(event, true);\n          setLastRightClick(event);\n        });\n        //\n        element.bind('dblclick', function (event) {\n          setLastMove(event, true);\n          if (ConfigProviderService.vals.restrictions.editItemName) {\n            setLastDblClick(event);\n          } else {\n            setLastClick(event);\n          }\n        });\n        //\n        element.bind('mousemove', function (event) {\n          if (!viewState.getdragBarActive()) {\n            var moveLine = true;\n            var samplesPerPixel = viewState.getSamplesPerPixelVal(event);\n            curMouseSampleNrInView = viewState.getX(event) * samplesPerPixel;\n            var moveBy = curMouseSampleNrInView - lastPCM;\n            if (samplesPerPixel <= 1 && scope.this.level.items.length > 0) {\n              var zoomEventMove = LevelService.getClosestItem(curMouseSampleNrInView + viewState.curViewPort.sS, scope.this.level.name, Soundhandlerservice.wavJSO.Data.length);\n              // absolute movement in pcm below 1 pcm per pixel\n              if (scope.this.level.type === 'SEGMENT') {\n                if (zoomEventMove.isFirst === true && zoomEventMove.isLast === false) {\n                  // before first elem\n                  moveBy = Math.ceil(curMouseSampleNrInView + viewState.curViewPort.sS - LevelService.getItemDetails(scope.this.level.name, 0).sampleStart);\n                } else if (zoomEventMove.isFirst === false && zoomEventMove.isLast === true) {\n                  // after last elem\n                  var lastItem = LevelService.getLastItem(scope.this.level.name);\n                  moveBy = Math.ceil(curMouseSampleNrInView + viewState.curViewPort.sS - lastItem.sampleStart - lastItem.sampleDur);\n                } else {\n                  moveBy = Math.ceil(curMouseSampleNrInView + viewState.curViewPort.sS - LevelService.getItemFromLevelById(scope.this.level.name, zoomEventMove.nearest.id).sampleStart);\n                }\n              } else {\n                moveBy = Math.ceil(curMouseSampleNrInView + viewState.curViewPort.sS - LevelService.getItemFromLevelById(scope.this.level.name, zoomEventMove.nearest.id).samplePoint - 0.5);  // 0.5 to break between samples not on\n              }\n            } else {\n              // relative movement in pcm above 1 pcm per pixel\n              moveBy = Math.round(curMouseSampleNrInView - lastPCM);\n            }\n          }\n          var mbutton = 0;\n          if (event.buttons === undefined) {\n            mbutton = event.which;\n          } else {\n            mbutton = event.buttons;\n          }\n          switch (mbutton) {\n          case 1:\n            //console.log('Left mouse button pressed');\n            break;\n          case 2:\n            //console.log('Middle mouse button pressed');\n            break;\n          case 3:\n            //console.log('Right mouse button pressed');\n            break;\n          default:\n            if (!viewState.getdragBarActive()) {\n              if (ConfigProviderService.vals.restrictions.editItemSize && event.shiftKey) {\n                LevelService.deleteEditArea();\n                if (viewState.getcurMouseSegment() !== undefined) {\n                  viewState.movingBoundary = true;\n                  if (scope.this.level.type === 'SEGMENT') {\n                    if (viewState.getcurMouseisFirst() || viewState.getcurMouseisLast()) {\n                      var seg, leftMost, rightB;\n                      // before first segment\n                      if (viewState.getcurMouseisFirst()) {\n                        seg = LevelService.getItemDetails(scope.this.level.name, 0);\n                        viewState.movingBoundarySample = seg.sampleStart + moveBy;\n                      } else if (viewState.getcurMouseisLast()) {\n                        seg = LevelService.getLastItem(scope.this.level.name);\n                        viewState.movingBoundarySample = seg.sampleStart + seg.sampleDur + moveBy;\n                      }\n                    } else {\n                      viewState.movingBoundarySample = viewState.getcurMouseSegment().sampleStart + moveBy;\n                      seg = viewState.getcurMouseSegment();\n                    }\n                    LevelService.moveBoundary(scope.this.level.name, seg.id, moveBy, viewState.getcurMouseisFirst(), viewState.getcurMouseisLast());\n                    HistoryService.updateCurChangeObj({\n                      'type': 'ESPS',\n                      'action': 'MOVEBOUNDARY',\n                      'name': scope.this.level.name,\n                      'id': seg.id,\n                      'movedBy': moveBy,\n                      'isFirst': viewState.getcurMouseisFirst(),\n                      'isLast': viewState.getcurMouseisLast()\n                    });\n                  } else {\n                    seg = viewState.getcurMouseSegment();\n                    viewState.movingBoundarySample = viewState.getcurMouseSegment().samplePoint + moveBy;\n                    LevelService.movePoint(scope.this.level.name, seg.id, moveBy);\n                    HistoryService.updateCurChangeObj({\n                      'type': 'ESPS',\n                      'action': 'MOVEPOINT',\n                      'name': scope.this.level.name,\n                      'id': seg.id,\n                      'movedBy': moveBy\n                    });\n                  }\n                  lastPCM = curMouseSampleNrInView;\n                  viewState.selectBoundary();\n                  moveLine = false;\n                }\n              } else if (ConfigProviderService.vals.restrictions.editItemSize && event.altKey) {\n                LevelService.deleteEditArea();\n                if (scope.this.level.type == 'SEGMENT') {\n                  seg = viewState.getcurClickSegments();\n                  LevelService.moveSegment(scope.this.level.name, seg[0].id, seg.length, moveBy);\n                  HistoryService.updateCurChangeObj({\n                    'type': 'ESPS',\n                    'action': 'MOVESEGMENT',\n                    'name': scope.this.level.name,\n                    'id': seg[0].id,\n                    'length': seg.length,\n                    'movedBy': moveBy\n                  });\n                  lastPCM = curMouseSampleNrInView;\n                  viewState.selectBoundary();\n                }\n              } else {\n                viewState.movingBoundary = false;\n              }\n            }\n            break;\n          }\n          if (!viewState.getdragBarActive()) {\n            setLastMove(event, moveLine);\n          }\n        });\n        //\n        element.bind('mousedown', function (event) {\n          viewState.movingBoundary = true;\n          setLastMove(event, true);\n        });\n        //\n        element.bind('mouseup', function (event) {\n          viewState.movingBoundary = false;\n          setLastMove(event, true);\n        });\n        //\n        element.bind('mouseout', function (event) {\n          viewState.movingBoundary = false;\n          setLastMove(event, true);\n        });\n        //\n        /////////////////////////\n        /**\n         *\n         */\n        function setLastClick(x) {\n          curMouseSampleNrInView = viewState.getX(x) * viewState.getSamplesPerPixelVal(x);\n          LevelService.deleteEditArea();\n          viewState.setEditing(false);\n          viewState.focusInTextField = false;\n          lastEventClick = LevelService.getClosestItem(curMouseSampleNrInView + viewState.curViewPort.sS, scope.this.level.name, Soundhandlerservice.wavJSO.Data.length);\n          if (lastEventClick.current !== undefined && lastEventClick.nearest !== undefined) {\n            LevelService.setlasteditArea('_' + lastEventClick.current.id);\n            LevelService.setlasteditAreaElem(element.parent());\n            viewState.setcurClickLevel(levelID, levelType, scope.$index);\n            viewState.setcurClickSegment(lastEventClick.current);\n          }\n          lastPCM = curMouseSampleNrInView;\n          scope.$apply();\n        }\n        /**\n         *\n         */\n        function setLastRightClick(x) {\n          if (viewState.getcurClickLevelName() !== levelID) {\n            setLastClick(x);\n          }\n          curMouseSampleNrInView = viewState.getX(x) * viewState.getSamplesPerPixelVal(x);\n          LevelService.deleteEditArea();\n          lastEventClick = LevelService.getClosestItem(curMouseSampleNrInView + viewState.curViewPort.sS, scope.this.level.name, Soundhandlerservice.wavJSO.Data.length);\n          if (lastEventClick.current !== undefined && lastEventClick.nearest !== undefined) {\n            viewState.setcurClickLevel(levelID, levelType, scope.$index);\n            viewState.setcurClickSegmentMultiple(lastEventClick.current);\n            viewState.selectBoundary();\n          }\n          lastPCM = curMouseSampleNrInView;\n          scope.$apply();\n        }\n        /**\n         *\n         */\n        function setLastDblClick(x) {\n          curMouseSampleNrInView = viewState.getX(x) * viewState.getSamplesPerPixelVal(x);\n          lastEventClick = LevelService.getClosestItem(curMouseSampleNrInView + viewState.curViewPort.sS, scope.this.level.name, Soundhandlerservice.wavJSO.Data.length);\n          if (lastEventClick.current !== undefined && lastEventClick.nearest !== undefined) {\n            if (levelType === 'SEGMENT') {\n              if (lastEventClick.current.sampleStart >= viewState.curViewPort.sS) {\n                if (lastEventClick.current.sampleStart + lastEventClick.current.sampleDur <= viewState.curViewPort.eS) {\n                  viewState.setcurClickLevel(levelID, levelType, scope.$index);\n                  viewState.setcurClickSegment(lastEventClick.current);\n                  LevelService.setlasteditArea('_' + lastEventClick.current.id);\n                  LevelService.setlasteditAreaElem(element.parent());\n                  viewState.setEditing(true);\n                  LevelService.openEditArea(lastEventClick.current, element.parent(), levelType);\n                  viewState.focusInTextField = true;\n                } else {\n                  console.log('Editing out of right bound !');\n                }\n              } else {\n                console.log('Editing out of left bound !');\n              }\n            } else {\n              viewState.setcurClickLevel(levelID, levelType, scope.$index);\n              viewState.setcurClickSegment(lastEventClick.current);\n              LevelService.setlasteditArea('_' + lastEventClick.current.id);\n              LevelService.setlasteditAreaElem(element.parent());\n              viewState.setEditing(true);\n              LevelService.openEditArea(lastEventClick.current, element.parent(), levelType);\n              viewState.focusInTextField = true;\n            }\n          }\n          lastPCM = curMouseSampleNrInView;\n          scope.$apply();\n        }\n        /**\n         *\n         */\n        function setLastMove(x, doChange) {\n          curMouseSampleNrInView = viewState.getX(x) * viewState.getSamplesPerPixelVal(x);\n          lastEventMove = LevelService.getClosestItem(curMouseSampleNrInView + viewState.curViewPort.sS, scope.this.level.name, Soundhandlerservice.wavJSO.Data.length);\n          if (doChange) {\n            if (lastEventMove.current !== undefined && lastEventMove.nearest !== undefined) {\n              lastNeighboursMove = LevelService.getItemNeighboursFromLevel(scope.this.level.name, lastEventMove.nearest.id, lastEventMove.nearest.id);\n              viewState.setcurMouseSegment(lastEventMove.nearest, lastNeighboursMove, lastPCM, lastEventMove.isFirst, lastEventMove.isLast);\n            }\n          }\n          viewState.setcurMouseLevelName(levelID);\n          viewState.setcurMouseLevelType(levelType);\n          lastPCM = curMouseSampleNrInView;\n          scope.$apply();\n        }\n      }\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').directive('handleglobalkeystrokes', [\n  '$timeout',\n  'viewState',\n  'Soundhandlerservice',\n  'ConfigProviderService',\n  'HistoryService',\n  'LevelService',\n  'AnagestService',\n  function ($timeout, viewState, Soundhandlerservice, ConfigProviderService, HistoryService, LevelService, AnagestService) {\n    return {\n      restrict: 'A',\n      link: function postLink(scope) {\n        $(document).bind('keydown', function (e) {\n          if (!scope.firefox) {\n            var code = e.keyCode ? e.keyCode : e.which;\n            if (code == 8 || code == 9 || code == 27 || code == 37 || code == 38 || code == 39 || code == 40 || code == 32) {\n              applyKeyCode(code, e);\n            }\n          }\n        });\n        $(document).bind('keypress', function (e) {\n          var code = e.keyCode ? e.keyCode : e.which;\n          applyKeyCode(code, e);\n        });\n        function applyKeyCode(code, e) {\n          scope.$apply(function () {\n            // check if mouse has to be in labeler for key mappings\n            if (ConfigProviderService.vals.main.catchMouseForKeyBinding) {\n              if (!viewState.mouseInEmuWebApp) {\n                return;\n              }\n            }\n            scope.setlastkeycode(code, e.shiftKey);\n            if (viewState.focusInTextField) {\n              if (code === ConfigProviderService.vals.keyMappings.createNewItemAtSelection) {\n                if (viewState.isEditing()) {\n                  var editingElement = LevelService.getItemFromLevelById(viewState.getcurClickLevelName(), LevelService.getlastID());\n                  HistoryService.addObjToUndoStack({\n                    'type': 'ESPS',\n                    'action': 'RENAMELABEL',\n                    'name': viewState.getcurClickLevelName(),\n                    'id': LevelService.getlastID(),\n                    'attrIndex': viewState.getCurAttrIndex(viewState.getcurClickLevelName()),\n                    'oldValue': editingElement.labels[viewState.getCurAttrIndex(viewState.getcurClickLevelName())].value,\n                    'newValue': $('.' + LevelService.getlasteditArea()).val()\n                  });\n                  LevelService.renameLabel(viewState.getcurClickLevelName(), LevelService.getlastID(), viewState.getCurAttrIndex(viewState.getcurClickLevelName()), $('.' + LevelService.getlasteditArea()).val());\n                  LevelService.deleteEditArea();\n                  viewState.focusInTextField = false;\n                }\n              }\n              if (code === ConfigProviderService.vals.keyMappings.esc) {\n                viewState.focusInTextField = false;\n                LevelService.deleteEditArea();\n              }\n              if (code === 13) {\n                e.preventDefault();\n                e.stopPropagation();\n              }  //}\n            } else {\n              LevelService.deleteEditArea();\n              // delegate keyboard keyMappings according to keyMappings of scope\n              // zoomAll\n              if (code === ConfigProviderService.vals.keyMappings.zoomAll) {\n                if (viewState.getPermission('zoom')) {\n                  viewState.setViewPort(0, Soundhandlerservice.wavJSO.Data.length);\n                } else {\n                  console.log('action currently not allowed');\n                }\n              }\n              // zoomIn\n              if (code === ConfigProviderService.vals.keyMappings.zoomIn) {\n                if (viewState.getPermission('zoom')) {\n                  viewState.zoomViewPort(true, LevelService);\n                } else {\n                  console.log('action currently not allowed');\n                }\n              }\n              // zoomOut\n              if (code === ConfigProviderService.vals.keyMappings.zoomOut) {\n                if (viewState.getPermission('zoom')) {\n                  viewState.zoomViewPort(false, LevelService);\n                } else {\n                  console.log('action currently not allowed');\n                }\n              }\n              // shiftViewPortLeft\n              if (code === ConfigProviderService.vals.keyMappings.shiftViewPortLeft) {\n                if (viewState.getPermission('zoom')) {\n                  viewState.shiftViewPort(false);\n                } else {\n                  console.log('action currently not allowed');\n                }\n              }\n              // shiftViewPortRight\n              if (code === ConfigProviderService.vals.keyMappings.shiftViewPortRight) {\n                if (viewState.getPermission('zoom')) {\n                  viewState.shiftViewPort(true);\n                } else {\n                  console.log('action currently not allowed');\n                }\n              }\n              // zoomSel\n              if (code === ConfigProviderService.vals.keyMappings.zoomSel) {\n                if (viewState.getPermission('zoom')) {\n                  viewState.setViewPort(viewState.curViewPort.selectS, viewState.curViewPort.selectE);\n                } else {\n                  console.log('action currently not allowed');\n                }\n              }\n              // playEntireFile\n              if (code === ConfigProviderService.vals.keyMappings.playEntireFile) {\n                if (viewState.getPermission('playaudio')) {\n                  if (ConfigProviderService.vals.restrictions.playback) {\n                    Soundhandlerservice.playFromTo(0, Soundhandlerservice.wavJSO.Data.length);\n                    viewState.animatePlayHead(0, Soundhandlerservice.wavJSO.Data.length);\n                  }\n                } else {\n                  console.log('action currently not allowed');\n                }\n              }\n              // playAllInView\n              if (code === ConfigProviderService.vals.keyMappings.playAllInView) {\n                if (viewState.getPermission('playaudio')) {\n                  if (ConfigProviderService.vals.restrictions.playback) {\n                    Soundhandlerservice.playFromTo(viewState.curViewPort.sS, viewState.curViewPort.eS);\n                    viewState.animatePlayHead(viewState.curViewPort.sS, viewState.curViewPort.eS);\n                  }\n                } else {\n                  console.log('action currently not allowed');\n                }\n              }\n              // playSelected\n              if (code === ConfigProviderService.vals.keyMappings.playSelected) {\n                if (viewState.getPermission('playaudio')) {\n                  if (ConfigProviderService.vals.restrictions.playback) {\n                    Soundhandlerservice.playFromTo(viewState.curViewPort.selectS, viewState.curViewPort.selectE);\n                    viewState.animatePlayHead(viewState.curViewPort.selectS, viewState.curViewPort.selectE);\n                  }\n                } else {\n                  console.log('action currently not allowed');\n                }\n              }\n              // selectFirstContourCorrectionTool\n              if (code === ConfigProviderService.vals.keyMappings.selectFirstContourCorrectionTool) {\n                if (viewState.getPermission('labelAction')) {\n                  if (ConfigProviderService.vals.restrictions.correctionTool) {\n                    viewState.curCorrectionToolNr = 1;\n                  }\n                }\n              }\n              // selectSecondContourCorrectionTool\n              if (code === ConfigProviderService.vals.keyMappings.selectSecondContourCorrectionTool) {\n                if (viewState.getPermission('labelAction')) {\n                  if (ConfigProviderService.vals.restrictions.correctionTool) {\n                    viewState.curCorrectionToolNr = 2;\n                  }\n                }\n              }\n              // selectThirdContourCorrectionTool\n              if (code === ConfigProviderService.vals.keyMappings.selectThirdContourCorrectionTool) {\n                if (viewState.getPermission('labelAction')) {\n                  if (ConfigProviderService.vals.restrictions.correctionTool) {\n                    viewState.curCorrectionToolNr = 3;\n                  }\n                }\n              }\n              // selectFourthContourCorrectionTool\n              if (code === ConfigProviderService.vals.keyMappings.selectFourthContourCorrectionTool) {\n                if (viewState.getPermission('labelAction')) {\n                  if (ConfigProviderService.vals.restrictions.correctionTool) {\n                    viewState.curCorrectionToolNr = 4;\n                  }\n                }\n              }\n              // selectNOContourCorrectionTool\n              if (code === ConfigProviderService.vals.keyMappings.selectNoContourCorrectionTool) {\n                if (viewState.getPermission('labelAction')) {\n                  if (ConfigProviderService.vals.restrictions.correctionTool) {\n                    viewState.curCorrectionToolNr = undefined;\n                  }\n                }\n              }\n              // levelUp\n              if (code === ConfigProviderService.vals.keyMappings.levelUp) {\n                if (viewState.getPermission('labelAction')) {\n                  viewState.selectLevel(false, ConfigProviderService.vals.perspectives[viewState.curPerspectiveIdx].levelCanvases.order, LevelService);  // pass in LevelService to prevent circular deps\n                }\n              }\n              // levelDown\n              if (code === ConfigProviderService.vals.keyMappings.levelDown) {\n                if (viewState.getPermission('labelAction')) {\n                  viewState.selectLevel(true, ConfigProviderService.vals.perspectives[viewState.curPerspectiveIdx].levelCanvases.order, LevelService);  // pass LevelService to prevent circular deps\n                }\n              }\n              // preselected boundary snap to top\n              if (code === ConfigProviderService.vals.keyMappings.snapBoundaryToNearestTopBoundary) {\n                if (viewState.getPermission('labelAction')) {\n                  if (ConfigProviderService.vals.restrictions.editItemSize) {\n                    var mouseSeg = viewState.getcurMouseSegment();\n                    var levelName = viewState.getcurMouseLevelName();\n                    var levelType = viewState.getcurMouseLevelType();\n                    var neighbor = viewState.getcurMouseNeighbours();\n                    var minDist = LevelService.snapBoundary(true, levelName, mouseSeg, neighbor, levelType);\n                    if (minDist === false) {\n                      // error msg nothing moved / nothing on top\n                      console.log('error msg nothing moved / nothing on top');\n                    } else {\n                      if (levelType === 'EVENT') {\n                        HistoryService.updateCurChangeObj({\n                          'type': 'ESPS',\n                          'action': 'MOVEPOINT',\n                          'name': levelName,\n                          'id': mouseSeg.id,\n                          'movedBy': minDist\n                        });\n                      } else if (levelType === 'SEGMENT') {\n                        HistoryService.updateCurChangeObj({\n                          'type': 'ESPS',\n                          'action': 'MOVEBOUNDARY',\n                          'name': levelName,\n                          'id': mouseSeg.id,\n                          'movedBy': minDist,\n                          'position': 0\n                        });\n                      }\n                      HistoryService.addCurChangeObjToUndoStack();\n                    }\n                  }\n                }\n              }\n              // preselected boundary snap to bottom\n              if (code === ConfigProviderService.vals.keyMappings.snapBoundaryToNearestBottomBoundary) {\n                if (viewState.getPermission('labelAction')) {\n                  if (ConfigProviderService.vals.restrictions.editItemSize) {\n                    var mouseSeg = viewState.getcurMouseSegment();\n                    var levelName = viewState.getcurMouseLevelName();\n                    var levelType = viewState.getcurMouseLevelType();\n                    var neighbor = viewState.getcurMouseNeighbours();\n                    var minDist = LevelService.snapBoundary(false, levelName, mouseSeg, neighbor, levelType);\n                    if (minDist == false) {\n                    } else {\n                      if (levelType === 'EVENT') {\n                        HistoryService.updateCurChangeObj({\n                          'type': 'ESPS',\n                          'action': 'MOVEPOINT',\n                          'name': levelName,\n                          'id': mouseSeg.id,\n                          'movedBy': minDist\n                        });\n                      } else if (levelType === 'SEGMENT') {\n                        console.log('seg to bottom');\n                        HistoryService.updateCurChangeObj({\n                          'type': 'ESPS',\n                          'action': 'MOVEBOUNDARY',\n                          'name': levelName,\n                          'id': mouseSeg.id,\n                          'movedBy': minDist,\n                          'position': 0\n                        });\n                      }\n                      HistoryService.addCurChangeObjToUndoStack();\n                    }\n                  }\n                }\n              }\n              // preselected boundary to nearest zero crossing\n              if (code === ConfigProviderService.vals.keyMappings.snapBoundaryToNearestZeroCrossing) {\n                if (viewState.getPermission('labelAction')) {\n                  if (ConfigProviderService.vals.restrictions.editItemSize) {\n                    var dist;\n                    if (viewState.getcurMouseLevelType() === 'SEGMENT') {\n                      dist = LevelService.calcDistanceToNearestZeroCrossing(viewState.getcurMouseSegment().sampleStart);\n                    } else {\n                      dist = LevelService.calcDistanceToNearestZeroCrossing(viewState.getcurMouseSegment().samplePoint);\n                    }\n                    if (dist !== 0) {\n                      var seg = viewState.getcurMouseSegment();\n                      var neigh = viewState.getcurMouseNeighbours();\n                      var levelname = viewState.getcurMouseLevelName();\n                      LevelService.moveBoundary(levelname, seg.id, dist, 0);\n                      HistoryService.updateCurChangeObj({\n                        'type': 'ESPS',\n                        'action': 'MOVEBOUNDARY',\n                        'name': levelname,\n                        'id': seg.id,\n                        'movedBy': dist,\n                        'position': 0\n                      });\n                      HistoryService.addCurChangeObjToUndoStack();\n                    }\n                  }\n                }\n              }\n              // expand Segments\n              if (code === ConfigProviderService.vals.keyMappings.expandSelSegmentsRight) {\n                if (viewState.getPermission('labelAction')) {\n                  if (ConfigProviderService.vals.restrictions.editItemSize) {\n                    if (viewState.getcurClickLevelName() === undefined) {\n                      scope.dials.open('views/error.html', 'ModalCtrl', 'Expand Segments Error: Please select a Level first');\n                    } else {\n                      if (viewState.getselected().length === 0) {\n                        scope.dials.open('views/error.html', 'ModalCtrl', 'Expand Segments Error: Please select one or more Segments first');\n                      } else {\n                        if (ConfigProviderService.vals.labelCanvasConfig.addTimeMode === 'absolute') {\n                          var changeTime = parseInt(ConfigProviderService.vals.labelCanvasConfig.addTimeValue, 10);\n                        } else if (ConfigProviderService.vals.labelCanvasConfig.addTimeMode === 'relative') {\n                          var changeTime = ConfigProviderService.vals.labelCanvasConfig.addTimeValue * (Soundhandlerservice.wavJSO.Data.length / 100);\n                        } else {\n                          scope.dials.open('views/error.html', 'ModalCtrl', 'Expand Segements Error: Error in Configuration (Value labelCanvasConfig.addTimeMode)');\n                        }\n                        LevelService.expandSegment(true, viewState.getcurClickSegments(), viewState.getcurClickLevelName(), changeTime);\n                        scope.hists.addObjToUndoStack({\n                          'type': 'ESPS',\n                          'action': 'EXPANDSEGMENTS',\n                          'levelName': viewState.getcurClickLevelName(),\n                          'item': viewState.getcurClickSegments(),\n                          'rightSide': true,\n                          'changeTime': changeTime\n                        });\n                        viewState.selectBoundary();\n                      }\n                    }\n                  }\n                }\n              }\n              // expand Segment left\n              if (code === ConfigProviderService.vals.keyMappings.expandSelSegmentsLeft) {\n                if (viewState.getPermission('labelAction')) {\n                  if (ConfigProviderService.vals.restrictions.editItemSize) {\n                    if (viewState.getcurClickLevelName() === undefined) {\n                      scope.dials.open('views/error.html', 'ModalCtrl', 'Expand Segments Error: Please select a Level first');\n                    } else {\n                      if (viewState.getselected().length === 0) {\n                        scope.dials.open('views/error.html', 'ModalCtrl', 'Expand Segments Error: Please select one or more Segments first');\n                      } else {\n                        if (ConfigProviderService.vals.labelCanvasConfig.addTimeMode === 'absolute') {\n                          var changeTime = parseInt(ConfigProviderService.vals.labelCanvasConfig.addTimeValue, 10);\n                        } else if (ConfigProviderService.vals.labelCanvasConfig.addTimeMode === 'relative') {\n                          var changeTime = ConfigProviderService.vals.labelCanvasConfig.addTimeValue * (Soundhandlerservice.wavJSO.Data.length / 100);\n                        } else {\n                          scope.dials.open('views/error.html', 'ModalCtrl', 'Expand Segements Error: Error in Configuration (Value labelCanvasConfig.addTimeMode)');\n                        }\n                        LevelService.expandSegment(false, viewState.getcurClickSegments(), viewState.getcurClickLevelName(), changeTime);\n                        scope.hists.addObjToUndoStack({\n                          'type': 'ESPS',\n                          'action': 'EXPANDSEGMENTS',\n                          'levelName': viewState.getcurClickLevelName(),\n                          'item': viewState.getcurClickSegments(),\n                          'rightSide': false,\n                          'changeTime': changeTime\n                        });\n                        viewState.selectBoundary();\n                      }\n                    }\n                  }\n                }\n              }\n              // shrink Segments Left\n              if (code === ConfigProviderService.vals.keyMappings.shrinkSelSegmentsLeft) {\n                if (viewState.getPermission('labelAction')) {\n                  if (ConfigProviderService.vals.restrictions.editItemSize) {\n                    if (viewState.getcurClickLevelName() === undefined) {\n                      scope.dials.open('views/error.html', 'ModalCtrl', 'Expand Segments Error: Please select a Level first');\n                    } else {\n                      if (viewState.getselected().length === 0) {\n                        scope.dials.open('views/error.html', 'ModalCtrl', 'Expand Segments Error: Please select one or more Segments first');\n                      } else {\n                        if (ConfigProviderService.vals.labelCanvasConfig.addTimeMode === 'absolute') {\n                          var changeTime = parseInt(ConfigProviderService.vals.labelCanvasConfig.addTimeValue, 10);\n                        } else if (ConfigProviderService.vals.labelCanvasConfig.addTimeMode === 'relative') {\n                          var changeTime = ConfigProviderService.vals.labelCanvasConfig.addTimeValue * (Soundhandlerservice.wavJSO.Data.length / 100);\n                        } else {\n                          scope.dials.open('views/error.html', 'ModalCtrl', 'Expand Segements Error: Error in Configuration (Value labelCanvasConfig.addTimeMode)');\n                        }\n                        LevelService.expandSegment(true, viewState.getcurClickSegments(), viewState.getcurClickLevelName(), -changeTime);\n                        scope.hists.addObjToUndoStack({\n                          'type': 'ESPS',\n                          'action': 'EXPANDSEGMENTS',\n                          'levelName': viewState.getcurClickLevelName(),\n                          'item': viewState.getcurClickSegments(),\n                          'rightSide': true,\n                          'changeTime': -changeTime\n                        });\n                        viewState.selectBoundary();\n                      }\n                    }\n                  }\n                }\n              }\n              // shrink Segments Right\n              if (code === ConfigProviderService.vals.keyMappings.shrinkSelSegmentsRight) {\n                if (viewState.getPermission('labelAction')) {\n                  if (ConfigProviderService.vals.restrictions.editItemSize) {\n                    if (viewState.getcurClickLevelName() === undefined) {\n                      scope.dials.open('views/error.html', 'ModalCtrl', 'Expand Segments Error: Please select a Level first');\n                    } else {\n                      if (viewState.getselected().length === 0) {\n                        scope.dials.open('views/error.html', 'ModalCtrl', 'Expand Segments Error: Please select one or more Segments first');\n                      } else {\n                        if (ConfigProviderService.vals.labelCanvasConfig.addTimeMode === 'absolute') {\n                          var changeTime = parseInt(ConfigProviderService.vals.labelCanvasConfig.addTimeValue, 10);\n                        } else if (ConfigProviderService.vals.labelCanvasConfig.addTimeMode === 'relative') {\n                          var changeTime = ConfigProviderService.vals.labelCanvasConfig.addTimeValue * (Soundhandlerservice.wavJSO.Data.length / 100);\n                        } else {\n                          scope.dials.open('views/error.html', 'ModalCtrl', 'Expand Segements Error: Error in Configuration (Value labelCanvasConfig.addTimeMode)');\n                        }\n                        LevelService.expandSegment(false, viewState.getcurClickSegments(), viewState.getcurClickLevelName(), -changeTime);\n                        scope.hists.addObjToUndoStack({\n                          'type': 'ESPS',\n                          'action': 'EXPANDSEGMENTS',\n                          'levelName': viewState.getcurClickLevelName(),\n                          'item': viewState.getcurClickSegments(),\n                          'rightSide': false,\n                          'changeTime': -changeTime\n                        });\n                        viewState.selectBoundary();\n                      }\n                    }\n                  }\n                }\n              }\n              // toggleSideBars\n              if (code === ConfigProviderService.vals.keyMappings.toggleSideBarLeft) {\n                if (viewState.getPermission('toggleSideBars')) {\n                  // check if menu button in showing -> if not -> no submenu open\n                  if (ConfigProviderService.vals.activeButtons.openMenu) {\n                    scope.openSubmenu();\n                  }\n                }\n              }\n              // toggleSideBars\n              if (code === ConfigProviderService.vals.keyMappings.toggleSideBarRight) {\n                if (viewState.getPermission('toggleSideBars')) {\n                  // check if menu button in showing -> if not -> no submenu open\n                  if (ConfigProviderService.vals.activeButtons.openMenu) {\n                    scope.toggleRightSideMenuHidden();\n                  }\n                }\n              }\n              // select Segments in viewport selection\n              if (code === ConfigProviderService.vals.keyMappings.selectSegmentsInSelection) {\n                if (viewState.getPermission('labelAction')) {\n                  if (viewState.getcurClickLevelName() === undefined) {\n                    scope.dials.open('views/error.html', 'ModalCtrl', 'Selection Error : Please select a Level first');\n                  } else {\n                    viewState.selectSegmentsInSelection(LevelService.data.levels);\n                  }\n                }\n              }\n              // selPrevItem\n              if (code === ConfigProviderService.vals.keyMappings.selPrevItem) {\n                if (viewState.getPermission('labelAction')) {\n                  if (viewState.getcurClickSegments().length > 0) {\n                    var idLeft = viewState.getcurClickSegments()[0].id;\n                    var idRight = viewState.getcurClickSegments()[viewState.getcurClickSegments().length - 1].id;\n                    var lastNeighboursMove = LevelService.getItemNeighboursFromLevel(viewState.getcurClickLevelName(), idLeft, idRight);\n                    if (lastNeighboursMove.left !== undefined) {\n                      if (lastNeighboursMove.left.sampleStart !== undefined) {\n                        // check if in view\n                        if (lastNeighboursMove.left.sampleStart + lastNeighboursMove.left.sampleDur > viewState.curViewPort.sS) {\n                          viewState.setcurClickSegment(lastNeighboursMove.left, lastNeighboursMove.left.id);\n                          LevelService.setlasteditArea('_' + lastNeighboursMove.left.id);\n                        }\n                      } else {\n                        // check if in view\n                        if (lastNeighboursMove.left.samplePoint > viewState.curViewPort.sS) {\n                          viewState.setcurClickSegment(lastNeighboursMove.left, lastNeighboursMove.left.id);\n                          LevelService.setlasteditArea('_' + lastNeighboursMove.left.id);\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n              // selNextItem\n              if (code === ConfigProviderService.vals.keyMappings.selNextItem) {\n                if (viewState.getPermission('labelAction')) {\n                  if (viewState.getcurClickSegments().length > 0) {\n                    var idLeft = viewState.getcurClickSegments()[0].id;\n                    var idRight = viewState.getcurClickSegments()[viewState.getcurClickSegments().length - 1].id;\n                    var lastNeighboursMove = LevelService.getItemNeighboursFromLevel(viewState.getcurClickLevelName(), idLeft, idRight);\n                    if (lastNeighboursMove.right !== undefined) {\n                      // check if in view\n                      if (lastNeighboursMove.right.sampleStart < viewState.curViewPort.eS) {\n                        viewState.setcurClickSegment(lastNeighboursMove.right, lastNeighboursMove.right.id);\n                        LevelService.setlasteditArea('_' + lastNeighboursMove.right.id);\n                      }\n                    } else {\n                    }\n                  }\n                }\n              }\n              // selNextPrevItem\n              if (code === ConfigProviderService.vals.keyMappings.selNextPrevItem) {\n                if (viewState.getPermission('labelAction')) {\n                  if (viewState.getcurClickSegments().length > 0) {\n                    var idLeft = viewState.getcurClickSegments()[0].id;\n                    var idRight = viewState.getcurClickSegments()[viewState.getcurClickSegments().length - 1].id;\n                    var lastNeighboursMove = LevelService.getItemNeighboursFromLevel(viewState.getcurClickLevelName(), idLeft, idRight);\n                    if (e.shiftKey) {\n                      if (lastNeighboursMove.left !== undefined) {\n                        if (lastNeighboursMove.left.sampleStart !== undefined) {\n                          // check if in view\n                          if (lastNeighboursMove.left.sampleStart + lastNeighboursMove.left.sampleDur > viewState.curViewPort.sS) {\n                            viewState.setcurClickSegment(lastNeighboursMove.left, lastNeighboursMove.left.id);\n                            LevelService.setlasteditArea('_' + lastNeighboursMove.left.id);\n                          }\n                        } else {\n                          // check if in view\n                          if (lastNeighboursMove.left.samplePoint > viewState.curViewPort.sS) {\n                            viewState.setcurClickSegment(lastNeighboursMove.left, lastNeighboursMove.left.id);\n                            LevelService.setlasteditArea('_' + lastNeighboursMove.left.id);\n                          }\n                        }\n                      }\n                    } else {\n                      if (lastNeighboursMove.right !== undefined) {\n                        if (lastNeighboursMove.right.sampleStart !== undefined) {\n                          // check if in view\n                          if (lastNeighboursMove.right.sampleStart < viewState.curViewPort.eS) {\n                            viewState.setcurClickSegment(lastNeighboursMove.right, lastNeighboursMove.right.id);\n                            LevelService.setlasteditArea('_' + lastNeighboursMove.right.id);\n                          }\n                        } else {\n                          // check if in view\n                          if (lastNeighboursMove.right.samplePoint < viewState.curViewPort.eS) {\n                            viewState.setcurClickSegment(lastNeighboursMove.right, lastNeighboursMove.right.id);\n                            LevelService.setlasteditArea('_' + lastNeighboursMove.right.id);\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n              // createNewItemAtSelection\n              if (code === ConfigProviderService.vals.keyMappings.createNewItemAtSelection) {\n                if (viewState.getPermission('labelAction')) {\n                  if (ConfigProviderService.vals.restrictions.addItem) {\n                    if (viewState.getselectedRange().start === viewState.curViewPort.selectS && viewState.getselectedRange().end === viewState.curViewPort.selectE) {\n                      if (viewState.getcurClickSegments().length === 1) {\n                        // check if in view\n                        if (viewState.getselectedRange().start >= viewState.curViewPort.sS && viewState.getselectedRange().end <= viewState.curViewPort.eS) {\n                          viewState.setEditing(true);\n                          LevelService.openEditArea(viewState.getcurClickSegments()[0], LevelService.getlasteditAreaElem(), viewState.getcurClickLevelType());\n                          scope.cursorInTextField();\n                        }\n                      } else {\n                        console.log(viewState.getcurClickSegments());\n                        scope.dials.open('views/error.html', 'ModalCtrl', 'Modify Error: Please select a single Segment.');\n                      }\n                    } else {\n                      if (viewState.curViewPort.selectE == -1 && viewState.curViewPort.selectS == -1) {\n                        scope.dials.open('views/error.html', 'ModalCtrl', 'Error : Please select a Segment or Point to modify it\\'s name. Or select a level plus a range in the viewport in order to insert a new Segment.');\n                      } else {\n                        if (viewState.getcurClickLevelType() === 'SEGMENT') {\n                          var insSeg = LevelService.insertSegment(viewState.getcurClickLevelName(), viewState.curViewPort.selectS, viewState.curViewPort.selectE, ConfigProviderService.vals.labelCanvasConfig.newSegmentName);\n                          if (!insSeg.ret) {\n                            scope.dials.open('views/error.html', 'ModalCtrl', 'Error : You are not allowed to insert a Segment here.');\n                          } else {\n                            scope.hists.addObjToUndoStack({\n                              'type': 'ESPS',\n                              'action': 'INSERTSEGMENTS',\n                              'name': viewState.getcurClickLevelName(),\n                              'start': viewState.curViewPort.selectS,\n                              'end': viewState.curViewPort.selectE,\n                              'ids': insSeg.ids,\n                              'segName': ConfigProviderService.vals.labelCanvasConfig.newSegmentName\n                            });\n                          }\n                        } else {\n                          var levelDef = ConfigProviderService.getLevelDefinition(viewState.getcurClickLevelName());\n                          if (typeof levelDef.anagestConfig === 'undefined') {\n                            var insPoint = LevelService.insertPoint(viewState.getcurClickLevelName(), viewState.curViewPort.selectS, ConfigProviderService.vals.labelCanvasConfig.newEventName);\n                            if (insPoint.alreadyExists) {\n                              scope.dials.open('views/error.html', 'ModalCtrl', 'Error: You are not allowed to insert a Point here.');\n                            } else {\n                              scope.hists.addObjToUndoStack({\n                                'type': 'ESPS',\n                                'action': 'INSERTPOINT',\n                                'name': viewState.getcurClickLevelName(),\n                                'start': viewState.curViewPort.selectS,\n                                'id': insPoint.id,\n                                'pointName': ConfigProviderService.vals.labelCanvasConfig.newEventName\n                              });\n                            }\n                          } else {\n                            AnagestService.insertAnagestEvents();\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                  }\n                }\n              }\n              // undo\n              if (code === ConfigProviderService.vals.keyMappings.undo) {\n                console.log(scope.hists.getCurrentStack());\n                if (viewState.getPermission('labelAction')) {\n                  HistoryService.undo();\n                }\n              }\n              // redo\n              if (code === ConfigProviderService.vals.keyMappings.redo) {\n                console.log(scope.hists.getCurrentStack());\n                if (viewState.getPermission('labelAction')) {\n                  HistoryService.redo();\n                }\n              }\n              // deletePreselBoundary\n              if (code === ConfigProviderService.vals.keyMappings.deletePreselBoundary) {\n                if (viewState.getPermission('labelAction')) {\n                  if (!e.shiftKey) {\n                    if (ConfigProviderService.vals.restrictions.deleteItemBoundary) {\n                      var seg = viewState.getcurMouseSegment();\n                      var isFirst = viewState.getcurMouseisFirst();\n                      var isLast = viewState.getcurMouseisLast();\n                      var levelname = viewState.getcurMouseLevelName();\n                      var type = viewState.getcurMouseLevelType();\n                      if (seg !== undefined) {\n                        if (type === 'SEGMENT') {\n                          var deletedSegment = LevelService.deleteBoundary(levelname, seg.id, isFirst, isLast);\n                          scope.hists.addObjToUndoStack({\n                            'type': 'ESPS',\n                            'action': 'DELETEBOUNDARY',\n                            'name': levelname,\n                            'id': seg.id,\n                            'isFirst': isFirst,\n                            'isLast': isLast,\n                            'deletedSegment': deletedSegment\n                          });\n                          // reset to undefined\n                          viewState.setcurMouseSegment(undefined, undefined, undefined);\n                          viewState.setcurClickSegment(deletedSegment.clickSeg);\n                        } else {\n                          var deletedPoint = LevelService.deletePoint(levelname, seg.id);\n                          scope.hists.addObjToUndoStack({\n                            'type': 'ESPS',\n                            'action': 'DELETEPOINT',\n                            'name': levelname,\n                            'start': deletedPoint.samplePoint,\n                            'id': deletedPoint.id,\n                            'pointName': deletedPoint.labels[0].value\n                          });\n                          // reset to undefined\n                          viewState.setcurMouseSegment(undefined, undefined, undefined);\n                        }\n                      } else {\n                      }\n                    }\n                  } else {\n                    if (ConfigProviderService.vals.restrictions.deleteItem) {\n                      var seg = viewState.getcurClickSegments();\n                      if (seg !== undefined && seg.length > 0) {\n                        var levelname = viewState.getcurClickLevelName();\n                        if (viewState.getcurClickLevelType() === 'SEGMENT') {\n                          var deletedSegment = LevelService.deleteSegments(levelname, seg[0].id, seg.length);\n                          scope.hists.addObjToUndoStack({\n                            'type': 'ESPS',\n                            'action': 'DELETESEGMENTS',\n                            'name': levelname,\n                            'id': seg[0].id,\n                            'length': seg.length,\n                            'deletedSegment': deletedSegment\n                          });\n                          viewState.setcurMouseSegment(undefined, undefined, undefined);\n                          viewState.setcurClickSegment(deletedSegment.clickSeg);\n                        } else {\n                          scope.dials.open('views/error.html', 'ModalCtrl', 'Delete Error: You can not delete Segments on Point Levels.');\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n              if (!e.metaKey && !e.ctrlKey) {\n                e.preventDefault();\n                e.stopPropagation();\n              }\n            }\n          });\n        }\n        scope.safeApply = function (fn) {\n          var phase = this.$root.$$phase;\n          if (phase == '$apply' || phase == '$digest') {\n            if (fn && typeof fn === 'function') {\n              fn();\n            }\n          } else {\n            this.$apply(fn);\n          }\n        };\n        //remove binding on destroy\n        scope.$on('$destroy', function () {\n          $(window).off('keydown');\n        });\n      }\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').directive('delete', function () {\n  return {\n    restrict: 'A',\n    link: function (scope, element, attr) {\n      var name = scope.this.level.name;\n      element.bind('click', function () {\n        scope.vs.setcurClickLevelName(name, attr.delete);\n        scope.dials.open('views/deleteLevel.html', 'ModalCtrl', name);\n      });\n    }\n  };\n});\n'use strict';\nangular.module('emuwebApp').directive('resize', function () {\n  return {\n    restrict: 'A',\n    link: function (scope, element) {\n      var elem = element.parent().parent();\n      var elemHeight = 0;\n      var deleteButton = elem.find(element.parent().children()[0]);\n      var resizeButton = elem.find(element.parent().children()[1]);\n      var saveButton = elem.find(element.parent().children()[2]);\n      element.bind('click', function () {\n        if (scope.open) {\n          scope.open = false;\n          elemHeight = elem.css('height');\n          elem.css({ 'height': '30px' });\n          if (scope.cps.vals.activeButtons.deleteSingleLevel) {\n            deleteButton.hide();\n          }\n          if (scope.cps.vals.activeButtons.saveSingleLevel) {\n            saveButton.hide();\n          }\n        } else {\n          scope.open = true;\n          elem.css({ 'height': elemHeight });\n          if (scope.cps.vals.activeButtons.deleteSingleLevel) {\n            deleteButton.show();\n          }\n          if (scope.cps.vals.activeButtons.saveSingleLevel) {\n            saveButton.show();\n          }\n        }\n        scope.updateView();\n      });\n    }\n  };\n});\n'use strict';\nangular.module('emuwebApp').directive('enlarge', [\n  '$rootScope',\n  'viewState',\n  function ($rootScope, viewState) {\n    return {\n      restrict: 'A',\n      link: function (scope, element, attrs) {\n        var open = false;\n        element.bind('click', function () {\n          if (open) {\n            open = false;\n            viewState.setenlarge(-1);\n          } else {\n            open = true;\n            viewState.setenlarge(attrs.enlarge);\n          }\n          $rootScope.$apply();\n        });\n      }\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').directive('save', [\n  'dialogService',\n  'Espsparserservice',\n  function (dialogService, Espsparserservice) {\n    return {\n      restrict: 'A',\n      link: function (scope, element, attr) {\n        var name = scope.this.level.name;\n        element.bind('click', function () {\n          scope.vs.setcurClickLevelName(name, attr.save);\n          Espsparserservice.asyncParseJSO(name).then(function (result) {\n            dialogService.openExport('views/export.html', 'ExportCtrl', result.data, name + '_esps.txt');\n          });\n        });\n      }\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').directive('previewtrack', [\n  'viewState',\n  'Soundhandlerservice',\n  function (viewState, Soundhandlerservice) {\n    return {\n      restrict: 'A',\n      scope: {},\n      link: function (scope, element) {\n        var startPCM = -1;\n        ///////////////\n        // bindings\n        //\n        element.bind('click', function (x) {\n          if (!$.isEmptyObject(Soundhandlerservice.wavJSO)) {\n            var width = viewState.curViewPort.eS - viewState.curViewPort.sS;\n            startPCM = viewState.getX(x) * (Soundhandlerservice.wavJSO.Data.length / x.originalEvent.target.width);\n            if (!viewState.focusInTextField) {\n              scope.$apply(function () {\n                viewState.setViewPort(startPCM - width / 2, startPCM + width / 2);\n              });\n            }\n          }\n        });\n        //\n        element.bind('mousedown', function (x) {\n          if (!$.isEmptyObject(Soundhandlerservice.wavJSO)) {\n            startPCM = viewState.getX(x) * (Soundhandlerservice.wavJSO.Data.length / x.originalEvent.target.width);\n          }\n        });\n        //\n        element.bind('mousemove', function (x) {\n          var mbutton = 0;\n          if (x.buttons === undefined) {\n            mbutton = x.which;\n          } else {\n            mbutton = x.buttons;\n          }\n          switch (mbutton) {\n          case 1:\n            if (startPCM !== -1) {\n              var width = viewState.curViewPort.eS - viewState.curViewPort.sS;\n              startPCM = viewState.getX(x) * (Soundhandlerservice.wavJSO.Data.length / x.originalEvent.target.width);\n              if (!viewState.focusInTextField) {\n                scope.$apply(function () {\n                  viewState.setViewPort(startPCM - width / 2, startPCM + width / 2);\n                });\n              }\n            }\n            break;\n          }\n        });\n        //\n        element.bind('mouseup', function () {\n          startPCM = -1;\n        });\n        //\n        element.bind('mouseout', function () {\n          startPCM = -1;\n        });\n      }\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').service('Iohandlerservice', [\n  '$rootScope',\n  '$http',\n  '$location',\n  '$q',\n  'HistoryService',\n  'viewState',\n  'Soundhandlerservice',\n  'Ssffparserservice',\n  'Wavparserservice',\n  'Textgridparserservice',\n  'ConfigProviderService',\n  'Espsparserservice',\n  'Ssffdataservice',\n  'Websockethandler',\n  function Iohandlerservice($rootScope, $http, $location, $q, HistoryService, viewState, Soundhandlerservice, Ssffparserservice, Wavparserservice, Textgridparserservice, ConfigProviderService, Espsparserservice, Ssffdataservice, Websockethandler) {\n    // shared service object\n    var sServObj = {};\n    // $http.defaults.useXDomain = true;\n    sServObj.wsH = Websockethandler;\n    /**\n\t\t * default config is always loaded from same origin\n\t\t */\n    sServObj.httpGetDefaultConfig = function () {\n      var prom = $http.get('configFiles/default_emuwebappConfig.json');\n      return prom;\n    };\n    /**\n\t\t * default config is always loaded from same origin\n\t\t */\n    sServObj.httpGetPath = function (path, respType) {\n      var prom = $http.get(path, { responseType: respType });\n      return prom;\n    };\n    ////////////////////////////\n    // EMU-webApp protocol begins here\n    //\n    /**\n\t\t *\n\t\t */\n    sServObj.getProtocol = function () {\n      var getProm;\n      if (ConfigProviderService.vals.main.comMode === 'CORS') {\n        alert('CORS version of getProtocol not implemented');\n      } else if (ConfigProviderService.vals.main.comMode === 'WS') {\n        getProm = Websockethandler.getProtocol();\n      }\n      return getProm;\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.getDoUserManagement = function () {\n      var getProm;\n      if (ConfigProviderService.vals.main.comMode === 'CORS') {\n        alert('CORS version of getDoUserManagement not implemented');\n      } else if (ConfigProviderService.vals.main.comMode === 'WS') {\n        getProm = Websockethandler.getDoUserManagement();\n      }\n      return getProm;\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.logOnUser = function (name, pwd) {\n      var getProm;\n      if (ConfigProviderService.vals.main.comMode === 'CORS') {\n        alert('CORS version of logOnUser not implemented');\n      } else if (ConfigProviderService.vals.main.comMode === 'WS') {\n        getProm = Websockethandler.logOnUser(name, pwd);\n      }\n      return getProm;\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.getDBconfigFile = function (nameOfDB) {\n      var getProm;\n      if (ConfigProviderService.vals.main.comMode === 'CORS') {\n        alert('CORS version of getDBconfigFile not implemented');\n      } else if (ConfigProviderService.vals.main.comMode === 'WS') {\n        getProm = Websockethandler.getDBconfigFile();\n      } else if (ConfigProviderService.vals.main.comMode === 'DEMO') {\n        getProm = $http.get('demoDBs/' + nameOfDB + '/' + nameOfDB + '_DBconfig.json');\n      }\n      return getProm;\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.getBundleList = function (nameOfDB) {\n      var getProm;\n      if (ConfigProviderService.vals.main.comMode === 'CORS') {\n        alert('CORS version of getBundleList not implemented');\n      } else if (ConfigProviderService.vals.main.comMode === 'WS') {\n        getProm = Websockethandler.getBundleList();\n      } else if (ConfigProviderService.vals.main.comMode === 'DEMO') {\n        getProm = $http.get('demoDBs/' + nameOfDB + '/' + nameOfDB + '_bundleList.json');\n      }\n      return getProm;\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.getBundle = function (name, nameOfDB) {\n      var getProm;\n      if (ConfigProviderService.vals.main.comMode === 'CORS') {\n        alert('CORS version of getBundle not implemented');\n      } else if (ConfigProviderService.vals.main.comMode === 'WS') {\n        getProm = Websockethandler.getBundle(name);\n      } else if (ConfigProviderService.vals.main.comMode === 'DEMO') {\n        // getProm = $http.get('testData/newAE/SES0000/' + name + '/' + name + '.json');\n        getProm = $http.get('demoDBs/' + nameOfDB + '/' + name + '_bndl.json');\n      }\n      return getProm;\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.saveBundle = function (bundleData) {\n      var getProm;\n      if (ConfigProviderService.vals.main.comMode === 'CORS') {\n        alert('CORS version of saveBundle not implemented');\n      } else if (ConfigProviderService.vals.main.comMode === 'WS') {\n        getProm = Websockethandler.saveBundle(bundleData);\n      }\n      // else if (ConfigProviderService.vals.main.comMode === 'DEMO') {\n      // getProm = $http.get('testData/newAE/SES0000/' + name + '/' + name + '.json');\n      // \tgetProm = $http.get('testData/testAeBundle.json'); // SIC SIC SIC HARDCODED -> name is ignored\n      // }\n      return getProm;\n    };\n    //\n    // EMU-webApp protocol ends here\n    ////////////////////////////\n    /**\n\t\t * pass through to according parser\n\t\t */\n    sServObj.parseLabelFile = function (string, annotates, name, fileType) {\n      var prom;\n      if (fileType === 'ESPS') {\n        prom = Espsparserservice.asyncParseEsps(string, ConfigProviderService.embeddedVals.labelGetUrl, 'embeddedESPS');\n      } else if (fileType === 'TEXTGRID') {\n        prom = Textgridparserservice.asyncParseTextGrid(string, ConfigProviderService.embeddedVals.labelGetUrl, 'embeddedTEXTGRID');\n      }\n      return prom;\n    };\n    return sServObj;\n  }\n]);\n'use strict';\nangular.module('emuwebApp').service('Soundhandlerservice', [\n  '$document',\n  'Binarydatamaniphelper',\n  function Soundhandlerservice($document, Binarydatamaniphelper) {\n    // shared service object\n    var sServObj = {};\n    sServObj.wavJSO = {};\n    sServObj.player = $document[0].createElement('audio');\n    sServObj.player.isPlaying = false;\n    sServObj.setPlayerSrc = function (buf) {\n      var base64String = Binarydatamaniphelper.arrayBufferToBase64(buf);\n      this.player.src = 'data:audio/wav;base64,' + base64String;\n    };\n    sServObj.resetPlayerSrcFromTo = function (sampleStart, endSample) {\n      var bytePerSample = this.wavJSO.BitsPerSample / 8;\n      var header = this.wavJSO.origArrBuf.subarray(0, 44);\n      var data = this.wavJSO.origArrBuf.subarray(44, this.wavJSO.Data.length * bytePerSample);\n      var dv = new DataView(header);\n      dv.setUint32(40, (endSample - sampleStart) * bytePerSample, true);\n      // var Subchunk2Size = dv.getUint32(40, true);\n      // console.log(Subchunk2Size);\n      var newData = data.subarray(sampleStart * bytePerSample, (endSample - sampleStart) * bytePerSample);\n      var tmp = new Uint8Array(header.byteLength + newData.byteLength);\n      tmp.set(new Uint8Array(header), 0);\n      tmp.set(new Uint8Array(newData), header.byteLength);\n      var base64String = Binarydatamaniphelper.arrayBufferToBase64(tmp.buffer);\n      this.player.src = 'data:audio/wav;base64,' + base64String;\n    };\n    sServObj.playFromTo = function (sampleStart, endSample) {\n      this.resetPlayerSrcFromTo(sampleStart, endSample);\n      if (this.player.isPlaying) {\n        this.player.isPlaying = false;\n        this.player.pause();\n      } else {\n        this.player.isPlaying = true;\n        this.player.play();\n      }\n    };\n    sServObj.player.addEventListener('ended', function () {\n      this.isPlaying = false;\n    }, false);\n    return sServObj;\n  }\n]);\n'use strict';\nangular.module('emuwebApp').directive('drawssff', [\n  'viewState',\n  'ConfigProviderService',\n  'Ssffdataservice',\n  'HistoryService',\n  'fontScaleService',\n  function (viewState, ConfigProviderService, Ssffdataservice, HistoryService, fontScaleService) {\n    return {\n      restrict: 'A',\n      scope: {},\n      link: function postLink(scope, element, atts) {\n        var canvas = element[0];\n        var trackName;\n        var assTrackName = '';\n        var lastDraw = Date.now();\n        // add watch vars to scope\n        scope.vs = viewState;\n        scope.hists = HistoryService;\n        scope.ssffds = Ssffdataservice;\n        ////////////////////\n        // observes\n        // observe attribute\n        atts.$observe('ssffTrackname', function (val) {\n          trackName = val;\n        });\n        ////////////////////\n        // watches\n        //watch viewPort change\n        scope.$watch('vs.curViewPort', function (newValue, oldValue) {\n          if (oldValue.sS !== newValue.sS || oldValue.eS !== newValue.eS) {\n            handleUpdate(newValue, oldValue);\n          }\n        }, true);\n        //watch perspective change\n        scope.$watch('vs.curPerspectiveIdx', function (newValue, oldValue) {\n          handleUpdate(newValue, oldValue);\n        }, true);\n        //watch vs.curCorrectionToolNr change\n        scope.$watch('vs.curCorrectionToolNr', function (newValue, oldValue) {\n          handleUpdate(newValue, oldValue);\n        }, true);\n        //watch hists.\n        scope.$watch('hists.movesAwayFromLastSave', function (newValue, oldValue) {\n          handleUpdate(newValue, oldValue);\n        }, true);\n        // watch ssffds.data change\n        scope.$watch('ssffds.data.length', function (newValue, oldValue) {\n          handleUpdate(newValue, oldValue);\n        }, true);\n        // watch vs.spectroSettings change\n        scope.$watch('vs.spectroSettings', function (newValue, oldValue) {\n          handleUpdate(newValue, oldValue);\n        }, true);\n        //\n        //////////////////////\n        /**\n         *\n         */\n        function handleUpdate() {\n          var ctx = canvas.getContext('2d');\n          ctx.clearRect(0, 0, canvas.width, canvas.height);\n          if (!$.isEmptyObject(Ssffdataservice.data)) {\n            if (Ssffdataservice.data.length !== 0) {\n              assTrackName = '';\n              // check assignments (= overlays)\n              ConfigProviderService.vals.perspectives[viewState.curPerspectiveIdx].signalCanvases.assign.forEach(function (ass, i) {\n                if (ass.signalCanvasName === trackName) {\n                  assTrackName = ass.ssffTrackName;\n                  var tr = ConfigProviderService.getSsffTrackConfig(ass.ssffTrackName);\n                  var col = Ssffdataservice.getColumnOfTrack(tr.name, tr.columnName);\n                  var sRaSt = Ssffdataservice.getSampleRateAndStartTimeOfTrack(tr.name);\n                  var minMaxLims = ConfigProviderService.getLimsOfTrack(tr.name);\n                  // draw values  \n                  drawValues(viewState, canvas, ConfigProviderService, col, sRaSt.sampleRate, sRaSt.startTime, minMaxLims);\n                }\n              });\n              assTrackName = '';\n              // draw ssffTrack onto own canvas\n              if (trackName !== 'OSCI' && trackName !== 'SPEC') {\n                // console.log('#######here')\n                // console.log(trackName)\n                var tr = ConfigProviderService.getSsffTrackConfig(trackName);\n                var col = Ssffdataservice.getColumnOfTrack(tr.name, tr.columnName);\n                var sRaSt = Ssffdataservice.getSampleRateAndStartTimeOfTrack(tr.name);\n                var minMaxLims = ConfigProviderService.getLimsOfTrack(tr.name);\n                // draw values  \n                drawValues(viewState, canvas, ConfigProviderService, col, sRaSt.sampleRate, sRaSt.startTime, minMaxLims);\n              }\n            }\n          } else {\n            var ctx = canvas.getContext('2d');\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n          }\n        }\n        /**\n         * draw values onto canvas\n         */\n        function drawValues(viewState, canvas, config, col, sR, sT, minMaxLims) {\n          var ctx = canvas.getContext('2d');\n          // create a destination canvas. Here the altered image will be placed\n          // ctx.fillStyle = \"rgba(\" + transparentColor.r + \", \" + transparentColor.g + \", \" + transparentColor.b + \", 1.0)\";\n          // ctx.clearRect(0, 0, canvas.width, canvas.height);\n          var minVal, maxVal;\n          if (trackName === 'SPEC' && assTrackName === 'FORMANTS') {\n            minVal = viewState.spectroSettings.rangeFrom;\n            maxVal = viewState.spectroSettings.rangeTo;\n          } else {\n            minVal = col._minVal;\n            maxVal = col._maxVal;\n          }\n          var startTimeVP = viewState.getViewPortStartTime();\n          var endTimeVP = viewState.getViewPortEndTime();\n          var colStartSampleNr = Math.round(startTimeVP * sR + sT);\n          var colEndSampleNr = Math.round(endTimeVP * sR + sT);\n          var nrOfSamples = colEndSampleNr - colStartSampleNr;\n          // console.log('###################################');\n          // console.log(col.name);\n          // console.log(startTimeVP);\n          // console.log(endTimeVP);\n          var curSampleArrs = col.values.slice(colStartSampleNr, colStartSampleNr + nrOfSamples);\n          if (nrOfSamples < canvas.width && nrOfSamples >= 2) {\n            var x, y, prevX, prevY, prevVal, curSampleInCol, curSampleInColTime;\n            ////////////////////////////////\n            // NEW VERSION\n            ////////////////////////////////\n            angular.forEach(curSampleArrs[0], function (contourVal, contourNr) {\n              // console.log(contourNr);\n              if ($.isEmptyObject(minMaxLims) || contourNr >= minMaxLims.minContourIdx && contourNr <= minMaxLims.maxContourIdx) {\n                // set color\n                if ($.isEmptyObject(minMaxLims)) {\n                  ctx.strokeStyle = 'hsl(' + contourNr * (360 / curSampleArrs[0].length) + ',80%, 50%)';\n                  ctx.fillStyle = 'hsl(' + contourNr * (360 / curSampleArrs[0].length) + ',80%, 50%)';\n                } else {\n                  var l = minMaxLims.maxContourIdx - minMaxLims.minContourIdx + 1;\n                  ctx.strokeStyle = 'hsl(' + contourNr * (360 / l) + ',80%, 50%)';\n                  ctx.fillStyle = 'hsl(' + contourNr * (360 / l) + ',80%, 50%)';\n                }\n                // overwrite color settings if they are preconfigured\n                var contColors = ConfigProviderService.getContourColorsOfTrack(assTrackName);\n                if (contColors !== undefined) {\n                  if (contColors.colors[contourNr] !== undefined) {\n                    ctx.strokeStyle = ConfigProviderService.vals.perspectives[viewState.curPerspectiveIdx].signalCanvases.contourColors[0].colors[contourNr];\n                    ctx.fillStyle = ConfigProviderService.vals.perspectives[viewState.curPerspectiveIdx].signalCanvases.contourColors[0].colors[contourNr];\n                  }\n                }\n                // mark selected\n                // console.log(viewState.curCorrectionToolNr);\n                if (viewState.curCorrectionToolNr - 1 === contourNr && trackName === 'SPEC' && assTrackName === 'FORMANTS') {\n                  ctx.strokeStyle = ConfigProviderService.vals.colors.selectedContourColor;\n                  ctx.fillStyle = ConfigProviderService.vals.colors.selectedContourColor;\n                }\n                ctx.beginPath();\n                // first line from sample not in view (left)\n                if (colStartSampleNr >= 1) {\n                  var leftBorder = col.values[colStartSampleNr - 1];\n                  var leftVal = leftBorder[contourNr];\n                  curSampleInCol = colStartSampleNr - 1;\n                  curSampleInColTime = 1 / sR * curSampleInCol + sT;\n                  x = (curSampleInColTime - startTimeVP) / (endTimeVP - startTimeVP) * canvas.width;\n                  y = canvas.height - (leftVal - minVal) / (maxVal - minVal) * canvas.height;\n                  ctx.moveTo(x, y);\n                }\n                angular.forEach(curSampleArrs, function (curArr, curArrIdx) {\n                  // console.log(curArr[contourNr]);\n                  curSampleInCol = colStartSampleNr + curArrIdx;\n                  curSampleInColTime = 1 / sR * curSampleInCol + sT;\n                  x = (curSampleInColTime - startTimeVP) / (endTimeVP - startTimeVP) * canvas.width;\n                  y = canvas.height - (curArr[contourNr] - minVal) / (maxVal - minVal) * canvas.height;\n                  ctx.arc(x, y - 1, 2, 0, 2 * Math.PI, false);\n                  ctx.lineTo(x, y);\n                });\n                // last line from sample not in view (right)\n                if (colEndSampleNr < col.values.length - 1) {\n                  var rightBorder = col.values[colEndSampleNr + 1];\n                  var rightVal = rightBorder[contourNr];\n                  curSampleInCol = colEndSampleNr + 1;\n                  curSampleInColTime = 1 / sR * curSampleInCol + sT;\n                  x = (curSampleInColTime - startTimeVP) / (endTimeVP - startTimeVP) * canvas.width;\n                  y = canvas.height - (rightVal - minVal) / (maxVal - minVal) * canvas.height;\n                  ctx.lineTo(x, y);\n                }\n                ctx.stroke();  // ctx.fill();\n              }\n            });  ////////////////////////////////\n                 // OLD VERSION\n                 ////////////////////////////////\n                 // curSampleArrs.forEach(function (valRep, valIdx) {\n                 //   valRep.forEach(function (val, idx) {\n                 //     if ($.isEmptyObject(minMaxLims) || (idx >= minMaxLims.min && idx <= minMaxLims.max)) {\n                 //       curSampleInCol = colStartSampleNr + valIdx;\n                 //       curSampleInColTime = (1 / sR * curSampleInCol) + sT;\n                 //       x = (curSampleInColTime - startTimeVP) / (endTimeVP - startTimeVP) * canvas.width;\n                 //       y = canvas.height - ((val - minVal) / (maxVal - minVal) * canvas.height);\n                 //       // set color\n                 //       if ($.isEmptyObject(minMaxLims)) {\n                 //         ctx.strokeStyle = 'hsl(' + idx * (360 / valRep.length) + ',80%, 50%)';\n                 //         ctx.fillStyle = 'hsl(' + idx * (360 / valRep.length) + ',80%, 50%)';\n                 //       } else {\n                 //         var l = (minMaxLims.max - minMaxLims.min) + 1;\n                 //         ctx.strokeStyle = 'hsl(' + idx * (360 / l) + ',80%, 50%)';\n                 //         ctx.fillStyle = 'hsl(' + idx * (360 / l) + ',80%, 50%)';\n                 //       }\n                 //       // draw dot\n                 //       // if (val !== null) {\n                 //       //   ctx.beginPath();\n                 //       //   ctx.arc(x, y - 1, 2, 0, 2 * Math.PI, false);\n                 //       //   ctx.closePath();\n                 //       //   ctx.stroke();\n                 //       //   ctx.fill();\n                 //       // }\n                 //       if (valIdx !== 0) {\n                 //         curSampleInCol = colStartSampleNr + valIdx - 1;\n                 //         curSampleInColTime = (1 / sR * curSampleInCol) + sT;\n                 //         prevX = (curSampleInColTime - startTimeVP) / (endTimeVP - startTimeVP) * canvas.width;\n                 //         prevY = canvas.height - ((curSampleArrs[valIdx - 1][idx] - minVal) / (maxVal - minVal) * canvas.height);\n                 //         // mark selected\n                 //         if (viewState.curCorrectionToolNr - 1 === idx && trackName === 'SPEC' && assTrackName === 'FORMANTS') {\n                 //           ctx.strokeStyle = 'white';\n                 //           ctx.fillStyle = 'white';\n                 //         }\n                 //         // draw line\n                 //         if (val !== null && prevVal !== null) {\n                 //           ctx.beginPath();\n                 //           ctx.arc(x, y - 1, 2, 0, 2 * Math.PI, false);\n                 //           ctx.moveTo(prevX, prevY);\n                 //           ctx.lineTo(x, y);\n                 //           ctx.stroke();\n                 //           ctx.fill();\n                 //         }\n                 //         prevVal = val;\n                 //         //check if last sample\n                 //         if (valIdx === curSampleArrs.length - 1) {\n                 //           if (colEndSampleNr !== col.values.length - 1) {\n                 //             // lines to right boarder samples not in view\n                 //             var rightBorder = col.values[colEndSampleNr + 1];\n                 //             val = rightBorder[idx];\n                 //             curSampleInCol = colEndSampleNr + 1;\n                 //             curSampleInColTime = (1 / sR * curSampleInCol) + sT;\n                 //             var nextX = (curSampleInColTime - startTimeVP) / (endTimeVP - startTimeVP) * canvas.width;\n                 //             var nextY = canvas.height - ((val - minVal) / (maxVal - minVal) * canvas.height);\n                 //             // draw line\n                 //             ctx.beginPath();\n                 //             ctx.moveTo(x, y);\n                 //             ctx.lineTo(nextX, nextY);\n                 //             ctx.stroke();\n                 //             ctx.fill();\n                 //           }\n                 //         }\n                 //       } else {\n                 //         // lines to left boarder samples not in view\n                 //         if (colStartSampleNr !== 0) {\n                 //           var leftBorder = col.values[colStartSampleNr - 1];\n                 //           val = leftBorder[idx];\n                 //           curSampleInCol = colStartSampleNr - 1;\n                 //           curSampleInColTime = (1 / sR * curSampleInCol) + sT;\n                 //           prevX = (curSampleInColTime - startTimeVP) / (endTimeVP - startTimeVP) * canvas.width;\n                 //           prevY = canvas.height - ((val - minVal) / (maxVal - minVal) * canvas.height);\n                 //           // mark selected\n                 //           if (viewState.curCorrectionToolNr - 1 === idx && trackName === 'SPEC' && assTrackName === 'FORMANTS') {\n                 //             ctx.strokeStyle = 'white';\n                 //             ctx.fillStyle = 'white';\n                 //           }\n                 //           // draw line\n                 //           ctx.beginPath();\n                 //           ctx.moveTo(prevX, prevY);\n                 //           ctx.lineTo(x, y);\n                 //           ctx.stroke();\n                 //           ctx.fill();\n                 //         }\n                 //       }\n                 //     }\n                 //   });\n                 // });\n          } else {\n            ctx.strokeStyle = 'red';\n            var txt;\n            // var tW;\n            var horizontalText;\n            if (nrOfSamples <= 2) {\n              horizontalText = fontScaleService.getTextImageTwoLines(ctx, 'Zoom out to', 'see contour(s)', ConfigProviderService.vals.font.fontPxSize, ConfigProviderService.vals.font.fontType, ConfigProviderService.vals.colors.crossHairsColor);\n              // ctx.fillStyle = ConfigProviderService.vals.colors.levelColor;\n              // ctx.fillRect(0, 0, canvas.width, canvas.height);\n              ctx.drawImage(horizontalText, 0, 0, horizontalText.width, horizontalText.height, canvas.width / 2 - horizontalText.width / 2, 25, horizontalText.width, horizontalText.height);\n            } else {\n              txt = 'Zoom in to see contour(s)';\n              horizontalText = fontScaleService.getTextImageTwoLines(ctx, 'Zoom in to', 'see contour(s)', ConfigProviderService.vals.font.fontPxSize, ConfigProviderService.vals.font.fontType, ConfigProviderService.vals.colors.crossHairsColor);\n              // ctx.fillStyle = ConfigProviderService.vals.colors.levelColor;\n              // ctx.fillRect(0, 0, canvas.width, canvas.height);              \n              ctx.drawImage(horizontalText, 0, 0, horizontalText.width, horizontalText.height, canvas.width / 2 - horizontalText.width / 2, 25, horizontalText.width, horizontalText.height);\n            }\n          }\n        }  //function\n      }\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').service('Ssffparserservice', [\n  '$q',\n  function Ssffparserservice($q) {\n    // shared service object\n    var sServObj = {};\n    var worker = new Worker('scripts/workers/ssffParserWorker.js');\n    var defer;\n    // add event listener to worker to respond to messages\n    worker.addEventListener('message', function (e) {\n      if (e.data.status.type === 'SUCCESS') {\n        defer.resolve(e.data);\n      } else {\n        defer.reject(e.data);\n      }\n    }, false);\n    /**\n\t\t * parse array of ssff file using webworker\n\t\t * @param array of ssff files encoded as base64 stings\n\t\t * @returns promise\n\t\t */\n    sServObj.asyncParseSsffArr = function (ssffArray) {\n      defer = $q.defer();\n      worker.postMessage({\n        'cmd': 'parseArr',\n        'ssffArr': ssffArray\n      });\n      // Send data to our worker.\n      return defer.promise;\n    };\n    /**\n\t\t * convert jso to ssff binary file using webworker\n\t\t * @param java script object of ssff file (internal rep)\n\t\t * @returns promise\n\t\t */\n    sServObj.asyncJso2ssff = function (jso) {\n      defer = $q.defer();\n      worker.postMessage({\n        'cmd': 'jso2ssff',\n        'jso': JSON.stringify(jso)\n      });\n      // Send data to our worker.\n      return defer.promise;\n    };\n    return sServObj;\n  }\n]);\n'use strict';\nangular.module('emuwebApp').directive('mouseTrackAndCorrectionTool', [\n  'viewState',\n  'ConfigProviderService',\n  'Ssffdataservice',\n  'Drawhelperservice',\n  'HistoryService',\n  'Soundhandlerservice',\n  function (viewState, ConfigProviderService, Ssffdataservice, Drawhelperservice, HistoryService, Soundhandlerservice) {\n    return {\n      restrict: 'A',\n      scope: {},\n      link: function (scope, element, atts) {\n        var curMouseSample;\n        var dragStartSample;\n        var dragEndSample;\n        var canvas = element[0];\n        var ctx = canvas.getContext('2d');\n        // var elem = element[0];\n        var tr, col, sRaSt;\n        var trackName;\n        var bundleName;\n        /////////////////////////////\n        // observe attribute\n        atts.$observe('ssffTrackname', function (val) {\n          if (val) {\n            trackName = val;\n          }\n        });\n        // bundleName needed to reset tr, col, sRaSt on bundle change\n        atts.$observe('bundleName', function (val) {\n          if (val) {\n            bundleName = val;\n            if (!$.isEmptyObject(Ssffdataservice.data)) {\n              if (Ssffdataservice.data.length !== 0) {\n                tr = ConfigProviderService.getSsffTrackConfig('FORMANTS');\n                if (tr !== undefined) {\n                  col = Ssffdataservice.getColumnOfTrack(tr.name, tr.columnName);\n                  sRaSt = Ssffdataservice.getSampleRateAndStartTimeOfTrack(tr.name);\n                }\n              }\n            }\n          }\n        });\n        /////////////////////////////\n        // Bindings\n        element.bind('mousedown', function (event) {\n          dragStartSample = Math.round(viewState.getX(event) * viewState.getSamplesPerPixelVal(event) + viewState.curViewPort.sS);\n          dragEndSample = dragStartSample;\n          viewState.select(dragStartSample, dragStartSample);\n          //Drawhelperservice.drawViewPortTimes(ctx, true);\n          switchMarkupContext(event);\n          scope.$apply();\n        });\n        element.bind('mousemove', function (event) {\n          var mbutton = 0;\n          if (event.buttons === undefined) {\n            mbutton = event.which;\n          } else {\n            mbutton = event.buttons;\n          }\n          // perform mouse tracking\n          var mouseX = viewState.getX(event);\n          viewState.curMousePosSample = Math.round(viewState.curViewPort.sS + mouseX / element[0].width * (viewState.curViewPort.eS - viewState.curViewPort.sS));\n          switch (mbutton) {\n          case 0:\n            if (viewState.getPermission('labelAction')) {\n              switchMarkupContext(event);\n              if (!$.isEmptyObject(Ssffdataservice.data)) {\n                if (Ssffdataservice.data.length !== 0) {\n                  if (!viewState.getdragBarActive()) {\n                    if (viewState.curCorrectionToolNr !== undefined && !viewState.getdragBarActive() && !$.isEmptyObject(ConfigProviderService.getAssignment(trackName))) {\n                      // var col = Ssffdataservice.data[0].Columns[0];\n                      if (tr === undefined) {\n                        tr = ConfigProviderService.getSsffTrackConfig('FORMANTS');\n                        col = Ssffdataservice.getColumnOfTrack(tr.name, tr.columnName);\n                        sRaSt = Ssffdataservice.getSampleRateAndStartTimeOfTrack(tr.name);\n                      }\n                      var startTimeVP = viewState.getViewPortStartTime();\n                      var endTimeVP = viewState.getViewPortEndTime();\n                      var colStartSampleNr = Math.round(startTimeVP * sRaSt.sampleRate + sRaSt.startTime);\n                      var colEndSampleNr = Math.round(endTimeVP * sRaSt.sampleRate + sRaSt.startTime);\n                      var nrOfSamples = colEndSampleNr - colStartSampleNr;\n                      var curSampleArrs = col.values.slice(colStartSampleNr, colStartSampleNr + nrOfSamples);\n                      // console.log(colStartSampleNr)\n                      var curMouseTime = startTimeVP + viewState.getX(event) / event.originalEvent.target.width * (endTimeVP - startTimeVP);\n                      var curMouseSample = Math.round((curMouseTime + sRaSt.startTime) * sRaSt.sampleRate) - 1;\n                      //-1 for in view correction\n                      var curMouseSampleTime = 1 / sRaSt.sampleRate * curMouseSample + sRaSt.startTime;\n                      if (curMouseSample - colStartSampleNr < 0 || curMouseSample - colStartSampleNr >= curSampleArrs.length) {\n                        console.log('early return');\n                        return;\n                      }\n                      viewState.curPreselColumnSample = curMouseSample - colStartSampleNr;\n                      var x = (curMouseSampleTime - startTimeVP) / (endTimeVP - startTimeVP) * canvas.width;\n                      var y = canvas.height - curSampleArrs[viewState.curPreselColumnSample][viewState.curCorrectionToolNr - 1] / (viewState.spectroSettings.rangeTo - viewState.spectroSettings.rangeFrom) * canvas.height;\n                      // draw sample\n                      ctx.strokeStyle = 'black';\n                      ctx.fillStyle = 'black';\n                      ctx.beginPath();\n                      ctx.arc(x, y - 1, 2, 0, 2 * Math.PI, false);\n                      ctx.closePath();\n                      ctx.stroke();\n                      ctx.fill();\n                      if (event.shiftKey) {\n                        var oldValue = angular.copy(curSampleArrs[viewState.curPreselColumnSample][viewState.curCorrectionToolNr - 1]);\n                        var newValue = viewState.spectroSettings.rangeTo - viewState.getY(event) / event.originalEvent.target.height * viewState.spectroSettings.rangeTo;\n                        // SIC only using rangeTo\n                        curSampleArrs[viewState.curPreselColumnSample][viewState.curCorrectionToolNr - 1] = viewState.spectroSettings.rangeTo - viewState.getY(event) / event.originalEvent.target.height * viewState.spectroSettings.rangeTo;\n                        var updateObj = HistoryService.updateCurChangeObj({\n                            'type': 'SSFF',\n                            'trackName': tr.name,\n                            'sampleBlockIdx': colStartSampleNr + viewState.curPreselColumnSample,\n                            'sampleIdx': viewState.curCorrectionToolNr - 1,\n                            'oldValue': oldValue,\n                            'newValue': newValue\n                          });\n                        //draw updateObj as overlay\n                        for (var key in updateObj) {\n                          curMouseSampleTime = 1 / sRaSt.sampleRate * updateObj[key].sampleBlockIdx + sRaSt.startTime;\n                          x = (curMouseSampleTime - startTimeVP) / (endTimeVP - startTimeVP) * canvas.width;\n                          y = canvas.height - updateObj[key].newValue / (viewState.spectroSettings.rangeTo - viewState.spectroSettings.rangeFrom) * canvas.height;\n                          // draw sample\n                          ctx.strokeStyle = 'red';\n                          ctx.fillStyle = 'red';\n                          // ctx.lineWidth = 4;\n                          ctx.beginPath();\n                          ctx.arc(x, y - 1, 2, 0, 2 * Math.PI, false);\n                          ctx.closePath();\n                          ctx.stroke();\n                          ctx.fill();\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n            break;\n          case 1:\n            if (!viewState.getdragBarActive()) {\n              setSelectDrag(event);\n            }\n            break;\n          }\n          scope.$apply();\n        });\n        element.bind('mouseup', function (event) {\n          if (!viewState.getdragBarActive()) {\n            setSelectDrag(event);\n            switchMarkupContext(event);\n          }\n        });\n        // on mouse leave clear markup canvas\n        element.bind('mouseleave', function (event) {\n          if (!$.isEmptyObject(Soundhandlerservice)) {\n            if (!$.isEmptyObject(Soundhandlerservice.wavJSO)) {\n              // if (!$.isEmptyObject(Ssffdataservice.data)) {\n              // if (Ssffdataservice.data.length !== 0) {\n              if (!viewState.getdragBarActive()) {\n                if (viewState.getPermission('labelAction')) {\n                  switchMarkupContext(event, false);\n                }\n              }  // }\n                 // }\n            }\n          }\n        });\n        //\n        ////////////////////\n        function switchMarkupContext(event, leave) {\n          ctx.clearRect(0, 0, canvas.width, canvas.height);\n          // draw current viewport selected\n          if (atts.ssffTrackname == 'OSCI') {\n            Drawhelperservice.drawViewPortTimes(ctx, true);\n            Drawhelperservice.drawCurViewPortSelected(ctx, true);\n          } else if (atts.ssffTrackname == 'SPEC') {\n            Drawhelperservice.drawCurViewPortSelected(ctx, false);\n            Drawhelperservice.drawMinMaxAndName(ctx, '', viewState.spectroSettings.rangeFrom, viewState.spectroSettings.rangeTo, 2);\n          } else {\n            var tr = ConfigProviderService.getSsffTrackConfig(atts.ssffTrackname);\n            var col = Ssffdataservice.getColumnOfTrack(tr.name, tr.columnName);\n            Drawhelperservice.drawCurViewPortSelected(ctx, false);\n            Drawhelperservice.drawMinMaxAndName(ctx, atts.ssffTrackname, col._minVal, col._maxVal, 2);\n          }\n          // draw crossHairs\n          if (leave !== false && ConfigProviderService.vals.restrictions.drawCrossHairs) {\n            Drawhelperservice.drawCrossHairs(ctx, event, viewState.spectroSettings.rangeFrom, viewState.spectroSettings.rangeTo, 'Hz', atts.ssffTrackname);\n          }\n          // draw moving boundary line if moving\n          Drawhelperservice.drawMovingBoundaryLine(ctx);\n        }\n        function setSelectDrag(event) {\n          curMouseSample = Math.round(viewState.getX(event) * viewState.getSamplesPerPixelVal(event) + viewState.curViewPort.sS);\n          if (curMouseSample > dragStartSample) {\n            dragEndSample = curMouseSample;\n            viewState.select(dragStartSample, dragEndSample);\n          } else {\n            dragStartSample = curMouseSample;\n            viewState.select(dragStartSample, dragEndSample);\n          }\n          scope.$apply();\n        }\n      }\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').service('Drawhelperservice', [\n  'viewState',\n  'ConfigProviderService',\n  'Soundhandlerservice',\n  'fontScaleService',\n  'Ssffdataservice',\n  function Drawhelperservice(viewState, ConfigProviderService, Soundhandlerservice, fontScaleService, Ssffdataservice) {\n    //shared service object to be returned\n    var sServObj = {};\n    function getScale(ctx, str, scale) {\n      return ctx.measureText(str).width * scale;\n    }\n    function getScaleWidth(ctx, str1, str2, scaleX) {\n      if (str1.toString().length > str2.toString().length) {\n        return getScale(ctx, str1, scaleX);\n      } else {\n        return getScale(ctx, str2, scaleX);\n      }\n    }\n    /**\n\t\t * drawing method to draw single line between two\n\t\t * envelope points. Is used by drawOsciOnCanvas if\n\t\t * envelope drawing is done\n\t\t * @param index\n\t\t * @param value\n\t\t * @param max\n\t\t * @param prevPeak\n\t\t * @param canvas\n\t\t */\n    function drawFrame(viewState, index, value, max, prevPeak, canvas, config) {\n      var ctx = canvas.getContext('2d');\n      //cur\n      var w = 1;\n      var h = Math.round(value * (canvas.height / max));\n      //rel to max\n      var x = index * w;\n      var y = Math.round((canvas.height - h) / 2);\n      //prev\n      // var prevW = 1;\n      var prevH = Math.round(prevPeak * (canvas.height / max));\n      var prevX = (index - 1) * w;\n      var prevY = Math.round((canvas.height - prevH) / 2);\n      // if (posC >= x) {\n      // \tconsole.error('here...')\n      // \tctx.fillStyle = config.vals.colors.playProgressColor;\n      // \tctx.strokeStyle = config.vals.colors.playProgressColor;\n      // } else {\n      ctx.fillStyle = config.vals.colors.osciColor;\n      ctx.strokeStyle = config.vals.colors.osciColor;\n      // }\n      // ctx.beginPath();\n      ctx.moveTo(prevX, prevY);\n      ctx.lineTo(x, y);  // ctx.stroke();\n    }\n    sServObj.osciPeaks = [];\n    /**\n\t\t * get current peaks to be drawn\n\t\t * if drawing over sample exact -> samples\n\t\t * if multiple samples per pixel -> calculate envelope points\n\t\t */\n    sServObj.calculatePeaks = function (viewState, canvas, data) {\n      var samplePerPx = (viewState.curViewPort.eS + 1 - viewState.curViewPort.sS) / canvas.width;\n      // PCM Samples per new pixel + one to correct for subtraction\n      var numberOfChannels = 1;\n      // hardcode for now...\n      var peaks = [];\n      var minPeak = Infinity;\n      var maxPeak = -Infinity;\n      var relData;\n      if (samplePerPx <= 1) {\n        // check if view at start            \n        if (viewState.curViewPort.sS === 0) {\n          relData = data.subarray(viewState.curViewPort.sS, viewState.curViewPort.eS + 2);  // +2 to compensate for length\n        } else {\n          relData = data.subarray(viewState.curViewPort.sS - 1, viewState.curViewPort.eS + 2);  // +2 to compensate for length\n        }\n        minPeak = Math.min.apply(Math, relData);\n        maxPeak = Math.max.apply(Math, relData);\n        peaks = Array.prototype.slice.call(relData);\n      } else {\n        relData = data.subarray(viewState.curViewPort.sS, viewState.curViewPort.eS);\n        for (var curPxIdx = 0; curPxIdx < canvas.width; curPxIdx++) {\n          var avrVal = 0;\n          for (var c = 0; c < numberOfChannels; c++) {\n            var vals = relData.subarray(curPxIdx * samplePerPx, (curPxIdx + 1) * samplePerPx);\n            // var peak = -Infinity;\n            var sum = 0;\n            for (var p = 0, l = vals.length; p < l; p++) {\n              // if (vals[p] > peak) {\n              // \tpeak = vals[p];\n              // }\n              sum += vals[p];\n            }\n            avrVal += sum / vals.length;\n          }\n          peaks[curPxIdx] = avrVal;\n          if (avrVal > maxPeak) {\n            maxPeak = avrVal;\n          }\n        }\n      }\n      //else\n      return {\n        'peaks': peaks,\n        'minPeak': minPeak,\n        'maxPeak': maxPeak,\n        'samplePerPx': samplePerPx\n      };\n    };\n    /**\n\t\t * @param cps color provider service\n\t\t */\n    sServObj.freshRedrawDrawOsciOnCanvas = function (viewState, canvas, allPeakVals, buffer, config) {\n      var ctx = canvas.getContext('2d');\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      //set font\n      // ctx.font = (this.params.fontPxSize + \"px\" + \" \" + this.params.fontType);\n      if (allPeakVals.peaks && allPeakVals.samplePerPx >= 1) {\n        ctx.beginPath();\n        allPeakVals.peaks.forEach(function (peak, index) {\n          if (index !== 0) {\n            drawFrame(viewState, index, peak, allPeakVals.maxPeak, allPeakVals.peaks[index - 1], canvas, config);\n          }\n        });\n        ctx.stroke();\n      } else if (allPeakVals.samplePerPx < 1) {\n        // console.log(\"at 0 over sample exact\")\n        var hDbS = 1 / allPeakVals.samplePerPx / 2;\n        // half distance between samples\n        var sNr = viewState.curViewPort.sS;\n        // over sample exact\n        ctx.strokeStyle = config.vals.colors.osciColor;\n        ctx.fillStyle = config.vals.colors.osciColor;\n        // ctx.beginPath();\n        var i;\n        if (viewState.curViewPort.sS === 0) {\n          ctx.moveTo(hDbS, (allPeakVals.peaks[0] - allPeakVals.minPeak) / (allPeakVals.maxPeak - allPeakVals.minPeak) * canvas.height);\n          for (i = 0; i < allPeakVals.peaks.length; i++) {\n            ctx.lineTo(i / allPeakVals.samplePerPx + hDbS, (allPeakVals.peaks[i] - allPeakVals.minPeak) / (allPeakVals.maxPeak - allPeakVals.minPeak) * canvas.height);\n          }\n          ctx.stroke();\n          // draw sample dots\n          for (i = 0; i < allPeakVals.peaks.length; i++) {\n            ctx.beginPath();\n            ctx.arc(i / allPeakVals.samplePerPx + hDbS, (allPeakVals.peaks[i] - allPeakVals.minPeak) / (allPeakVals.maxPeak - allPeakVals.minPeak) * canvas.height - 3, 4, 0, 2 * Math.PI, false);\n            ctx.stroke();\n            ctx.fill();\n            if (config.vals.restrictions.drawSampleNrs) {\n              ctx.strokeText(sNr, i / allPeakVals.samplePerPx + hDbS, (allPeakVals.peaks[i] - allPeakVals.minPeak) / (allPeakVals.maxPeak - allPeakVals.minPeak) * canvas.height - 10);\n              sNr = sNr + 1;\n            }\n          }\n        } else {\n          //draw lines\n          ctx.beginPath();\n          ctx.moveTo(-hDbS, canvas.height - (allPeakVals.peaks[0] - allPeakVals.minPeak) / (allPeakVals.maxPeak - allPeakVals.minPeak) * canvas.height);\n          for (i = 1; i <= allPeakVals.peaks.length; i++) {\n            ctx.lineTo(i / allPeakVals.samplePerPx - hDbS, canvas.height - ((allPeakVals.peaks[i] - allPeakVals.minPeak) / (allPeakVals.maxPeak - allPeakVals.minPeak) * canvas.height + 3));\n          }\n          ctx.stroke();\n          // draw sample dots\n          for (i = 1; i <= allPeakVals.peaks.length; i++) {\n            ctx.beginPath();\n            ctx.arc(i / allPeakVals.samplePerPx - hDbS, canvas.height - (allPeakVals.peaks[i] - allPeakVals.minPeak) / (allPeakVals.maxPeak - allPeakVals.minPeak) * canvas.height - 3, 4, 0, 2 * Math.PI, false);\n            ctx.stroke();\n            ctx.fill();\n            if (config.vals.restrictions.drawSampleNrs) {\n              ctx.fillText(sNr, i / allPeakVals.samplePerPx - hDbS, canvas.height - (allPeakVals.peaks[i] - allPeakVals.minPeak) / (allPeakVals.maxPeak - allPeakVals.minPeak) * canvas.height - 10);\n              sNr = sNr + 1;\n            }\n          }\n        }\n      }\n      if (config.vals.restrictions.drawZeroLine) {\n        // draw zero line\n        ctx.strokeStyle = config.vals.colors.zeroLineColor;\n        ctx.fillStyle = config.vals.colors.zeroLineColor;\n        // see if Chrome ->dashed line\n        if (navigator.vendor === 'Google Inc.') {\n          ctx.setLineDash([2]);\n        }\n        if (allPeakVals.samplePerPx >= 1) {\n          ctx.beginPath();\n          ctx.moveTo(0, canvas.height / 2);\n          ctx.lineTo(canvas.width, canvas.height / 2);\n          ctx.stroke();\n          ctx.fillText('0', 5, canvas.height / 2 - 5, canvas.width);\n        } else {\n          var zeroLineY = canvas.height - (0 - allPeakVals.minPeak) / (allPeakVals.maxPeak - allPeakVals.minPeak) * canvas.height;\n          ctx.beginPath();\n          ctx.moveTo(0, zeroLineY);\n          ctx.lineTo(canvas.width, zeroLineY);\n          ctx.stroke();\n          ctx.fill();\n          ctx.fillText('0', 5, canvas.height - (0 - allPeakVals.minPeak) / (allPeakVals.maxPeak - allPeakVals.minPeak) * canvas.height - 5, canvas.width);\n        }\n        // see if Chrome ->dashed line\n        if (navigator.vendor === 'Google Inc.') {\n          ctx.setLineDash([0]);\n        }\n      }\n    };\n    /**\n\t\t * drawing method to drawMovingBoundaryLine\n\t\t */\n    sServObj.drawMovingBoundaryLine = function (ctx) {\n      var xOffset, sDist;\n      sDist = viewState.getSampleDist(ctx.canvas.width);\n      // calc. offset dependant on type of level of mousemove  -> default is sample exact\n      if (viewState.getcurMouseLevelType() === 'SEGMENT') {\n        xOffset = 0;\n      } else {\n        xOffset = sDist / 2;\n      }\n      if (viewState.movingBoundary) {\n        ctx.fillStyle = ConfigProviderService.vals.colors.selectedBoundaryColor;\n        var p = Math.round(viewState.getPos(ctx.canvas.width, viewState.movingBoundarySample));\n        if (viewState.getcurMouseisLast()) {\n          ctx.fillRect(p + sDist, 0, 1, ctx.canvas.height);\n        } else {\n          ctx.fillRect(p + xOffset, 0, 1, ctx.canvas.height);\n        }\n      }\n    };\n    /**\n\t\t * drawing method to drawCurViewPortSelected\n\t\t */\n    sServObj.drawCurViewPortSelected = function (ctx, drawTimeAndSamples) {\n      var xOffset, sDist, space, horizontalText, scaleX;\n      sDist = viewState.getSampleDist(ctx.canvas.width);\n      // calc. offset dependant on type of level of mousemove  -> default is sample exact\n      if (viewState.getcurMouseLevelType() === 'seg') {\n        xOffset = 0;\n      } else {\n        xOffset = sDist / 2;\n      }\n      var posS = viewState.getPos(ctx.canvas.width, viewState.curViewPort.selectS);\n      var posE = viewState.getPos(ctx.canvas.width, viewState.curViewPort.selectE);\n      if (posS === posE) {\n        ctx.fillStyle = ConfigProviderService.vals.colors.selectedBorderColor;\n        ctx.fillRect(posS + xOffset, 0, 2, ctx.canvas.height);\n        if (drawTimeAndSamples) {\n          if (viewState.curViewPort.sS !== viewState.curViewPort.selectS && viewState.curViewPort.selectS !== -1) {\n            scaleX = ctx.canvas.width / ctx.canvas.offsetWidth;\n            space = getScaleWidth(ctx, viewState.curViewPort.selectS, viewState.round(viewState.curViewPort.selectS / Soundhandlerservice.wavJSO.SampleRate, 6), scaleX);\n            horizontalText = fontScaleService.getTextImageTwoLines(ctx, viewState.curViewPort.selectS, viewState.round(viewState.curViewPort.selectS / Soundhandlerservice.wavJSO.SampleRate, 6), ConfigProviderService.vals.font.fontPxSize, ConfigProviderService.vals.font.fontType, ConfigProviderService.vals.colors.labelColor, true);\n            ctx.drawImage(horizontalText, 0, 0, horizontalText.width, horizontalText.height, posE + 5, 0, horizontalText.width, horizontalText.height);\n          }\n        }\n      } else {\n        ctx.fillStyle = ConfigProviderService.vals.colors.selectedAreaColor;\n        ctx.fillRect(posS, 0, posE - posS, ctx.canvas.height);\n        ctx.strokeStyle = ConfigProviderService.vals.colors.selectedBorderColor;\n        ctx.beginPath();\n        ctx.moveTo(posS, 0);\n        ctx.lineTo(posS, ctx.canvas.height);\n        ctx.moveTo(posE, 0);\n        ctx.lineTo(posE, ctx.canvas.height);\n        ctx.closePath();\n        ctx.stroke();\n        if (drawTimeAndSamples) {\n          // start values\n          scaleX = ctx.canvas.width / ctx.canvas.offsetWidth;\n          space = getScaleWidth(ctx, viewState.curViewPort.selectS, viewState.round(viewState.curViewPort.selectS / Soundhandlerservice.wavJSO.SampleRate, 6), scaleX);\n          horizontalText = fontScaleService.getTextImageTwoLines(ctx, viewState.curViewPort.selectS, viewState.round(viewState.curViewPort.selectS / Soundhandlerservice.wavJSO.SampleRate, 6), ConfigProviderService.vals.font.fontPxSize, ConfigProviderService.vals.font.fontType, ConfigProviderService.vals.colors.labelColor, false);\n          ctx.drawImage(horizontalText, 0, 0, horizontalText.width, horizontalText.height, posS - space - 5, 0, horizontalText.width, horizontalText.height);\n          // end values\n          horizontalText = fontScaleService.getTextImageTwoLines(ctx, viewState.curViewPort.selectE, viewState.round(viewState.curViewPort.selectE / Soundhandlerservice.wavJSO.SampleRate, 6), ConfigProviderService.vals.font.fontPxSize, ConfigProviderService.vals.font.fontType, ConfigProviderService.vals.colors.labelColor, true);\n          ctx.drawImage(horizontalText, 0, 0, horizontalText.width, horizontalText.height, posE + 5, 0, horizontalText.width, horizontalText.height);\n          // dur values\n          // check if space\n          space = getScale(ctx, viewState.round((viewState.curViewPort.selectE - viewState.curViewPort.selectS) / Soundhandlerservice.wavJSO.SampleRate, 6), scaleX);\n          if (posE - posS > space) {\n            var str1 = viewState.curViewPort.selectE - viewState.curViewPort.selectS - 1;\n            var str2 = viewState.round((viewState.curViewPort.selectE - viewState.curViewPort.selectS) / Soundhandlerservice.wavJSO.SampleRate, 6);\n            space = getScaleWidth(ctx, str1, str2, scaleX);\n            horizontalText = fontScaleService.getTextImageTwoLines(ctx, str1, str2, ConfigProviderService.vals.font.fontPxSize, ConfigProviderService.vals.font.fontType, ConfigProviderService.vals.colors.labelColor, false);\n            ctx.drawImage(horizontalText, 0, 0, horizontalText.width, horizontalText.height, posS + (posE - posS) / 2 - space / 2, 0, horizontalText.width, horizontalText.height);\n          }\n        }\n      }\n    };\n    /**\n\t\t * drawing method to drawCrossHairs\n\t\t */\n    sServObj.drawCrossHairs = function (ctx, mouseEvt, min, max, unit, trackname) {\n      if (ConfigProviderService.vals.restrictions.drawCrossHairs) {\n        // ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n        ctx.strokeStyle = ConfigProviderService.vals.colors.crossHairsColor;\n        ctx.fillStyle = ConfigProviderService.vals.colors.crossHairsColor;\n        // see if Chrome -> dashed line\n        if (navigator.vendor === 'Google Inc.') {\n          ctx.setLineDash([2]);\n        }\n        // draw lines\n        var mouseX = viewState.getX(mouseEvt);\n        var mouseY = viewState.getY(mouseEvt);\n        if (navigator.vendor === 'Google Inc.') {\n          ctx.setLineDash([0]);\n        }\n        // draw frequency / sample / time\n        ctx.font = ConfigProviderService.vals.font.fontPxSize + 'px' + ' ' + ConfigProviderService.vals.font.fontType;\n        var mouseFreq = viewState.round(max - mouseY / ctx.canvas.height * max, 2);\n        // SIC only uses max\n        var tW = ctx.measureText(mouseFreq + unit).width;\n        var s1 = Math.round(viewState.curViewPort.sS + mouseX / ctx.canvas.width * (viewState.curViewPort.eS - viewState.curViewPort.sS));\n        var s2 = viewState.round(viewState.getViewPortStartTime() + mouseX / ctx.canvas.width * (viewState.getViewPortEndTime() - viewState.getViewPortStartTime()), 6);\n        var horizontalText = fontScaleService.getTextImage(ctx, mouseFreq + unit, ConfigProviderService.vals.font.fontPxSize, ConfigProviderService.vals.font.fontType, ConfigProviderService.vals.colors.crossHairsColor, true);\n        var verticalText = fontScaleService.getTextImageTwoLines(ctx, s1, s2, ConfigProviderService.vals.font.fontPxSize, ConfigProviderService.vals.font.fontType, ConfigProviderService.vals.colors.crossHairsColor, true);\n        if (max !== undefined || min !== undefined) {\n          if (trackname == 'OSCI') {\n            // no horizontal values\t\t\n            ctx.beginPath();\n            //ctx.moveTo(0, mouseY);\n            //ctx.lineTo(5, mouseY + 5);\n            //ctx.moveTo(0, mouseY);\n            //ctx.lineTo(ctx.canvas.width, mouseY);\n            //ctx.lineTo(ctx.canvas.width - 5, mouseY + 5);\n            ctx.moveTo(mouseX, 0);\n            ctx.lineTo(mouseX, ctx.canvas.height);\n            ctx.stroke();\n          } else if (trackname == 'SPEC') {\n            ctx.drawImage(horizontalText, 0, 0, horizontalText.width, horizontalText.height, 5, mouseY, horizontalText.width, horizontalText.height);\n            ctx.drawImage(horizontalText, 0, 0, horizontalText.width, horizontalText.height, ctx.canvas.width - 5 - tW * (ctx.canvas.width / ctx.canvas.offsetWidth), mouseY, horizontalText.width, horizontalText.height);\n            ctx.beginPath();\n            ctx.moveTo(0, mouseY);\n            ctx.lineTo(5, mouseY + 5);\n            ctx.moveTo(0, mouseY);\n            ctx.lineTo(ctx.canvas.width, mouseY);\n            ctx.lineTo(ctx.canvas.width - 5, mouseY + 5);\n            ctx.moveTo(mouseX, 0);\n            ctx.lineTo(mouseX, ctx.canvas.height);\n            ctx.stroke();\n          } else {\n            // draw min max an name of track\n            var tr = ConfigProviderService.getSsffTrackConfig(trackname);\n            var col = Ssffdataservice.getColumnOfTrack(tr.name, tr.columnName);\n            mouseFreq = viewState.round(col._maxVal - mouseY / ctx.canvas.height * col._maxVal, 2);\n            horizontalText = fontScaleService.getTextImage(ctx, mouseFreq, ConfigProviderService.vals.font.fontPxSize, ConfigProviderService.vals.font.fontType, ConfigProviderService.vals.colors.crossHairsColor, true);\n            ctx.drawImage(horizontalText, 0, 0, horizontalText.width, horizontalText.height, 5, mouseY, horizontalText.width, horizontalText.height);\n            ctx.drawImage(horizontalText, 0, 0, horizontalText.width, horizontalText.height, ctx.canvas.width - 5 - tW * (ctx.canvas.width / ctx.canvas.offsetWidth), mouseY, horizontalText.width, horizontalText.height);\n            ctx.beginPath();\n            ctx.moveTo(0, mouseY);\n            ctx.lineTo(5, mouseY + 5);\n            ctx.moveTo(0, mouseY);\n            ctx.lineTo(ctx.canvas.width, mouseY);\n            ctx.lineTo(ctx.canvas.width - 5, mouseY + 5);\n            ctx.moveTo(mouseX, 0);\n            ctx.lineTo(mouseX, ctx.canvas.height);\n            ctx.stroke();\n          }\n        }\n        ctx.drawImage(verticalText, 0, 0, verticalText.width, verticalText.height, mouseX + 5, 0, verticalText.width, verticalText.height);\n      }\n    };\n    /**\n\t\t * drawing method to drawMinMaxAndName\n\t\t * @param ctx is context to be drawn on\n\t\t * @param trackName name of track to be drawn in the center of the canvas (left aligned)\n\t\t * @param min value to be drawn at the bottom of the canvas (left aligned)\n\t\t * @param max value to be drawn at the top of the canvas (left aligned)\n\t\t * @param round value to round to for min/max values (== digits after comma)\n\t\t */\n    sServObj.drawMinMaxAndName = function (ctx, trackName, min, max, round) {\n      // ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n      ctx.strokeStyle = ConfigProviderService.vals.colors.labelColor;\n      ctx.fillStyle = ConfigProviderService.vals.colors.labelColor;\n      // var scaleX = ctx.canvas.width / ctx.canvas.offsetWidth;\n      var scaleY = ctx.canvas.height / ctx.canvas.offsetHeight;\n      var smallFontSize = ConfigProviderService.vals.font.fontPxSize * 3 / 4;\n      var th = smallFontSize * scaleY;\n      // draw corner pointers\n      ctx.beginPath();\n      ctx.moveTo(0, 0);\n      ctx.lineTo(5, 5);\n      ctx.moveTo(0, ctx.canvas.height);\n      ctx.lineTo(5, ctx.canvas.height - 5);\n      ctx.stroke();\n      ctx.closePath();\n      // draw ssffTrackName\n      if (trackName !== '') {\n        ctx.font = ConfigProviderService.vals.font.fontPxSize + 'px' + ' ' + ConfigProviderService.vals.font.fontType;\n        var trackNameImg = fontScaleService.getTextImage(ctx, trackName, ConfigProviderService.vals.font.fontPxSize, ConfigProviderService.vals.font.fontType, ConfigProviderService.vals.colors.labelColor, true);\n        ctx.drawImage(trackNameImg, 0, ctx.canvas.height / 2 - ConfigProviderService.vals.font.fontPxSize * scaleY / 2);\n      }\n      // draw min/max vals\n      if (max !== undefined) {\n        var labelTxtImg = fontScaleService.getTextImage(ctx, 'max: ' + viewState.round(max, round), smallFontSize, ConfigProviderService.vals.font.fontType, ConfigProviderService.vals.colors.endBoundaryColor);\n        ctx.drawImage(labelTxtImg, 5, 5, labelTxtImg.width, labelTxtImg.height);\n      }\n      // draw min/max vals\n      if (min !== undefined) {\n        labelTxtImg = fontScaleService.getTextImage(ctx, 'min: ' + viewState.round(min, round), smallFontSize, ConfigProviderService.vals.font.fontType, ConfigProviderService.vals.colors.endBoundaryColor);\n        ctx.drawImage(labelTxtImg, 5, ctx.canvas.height - th - 5, labelTxtImg.width, labelTxtImg.height);\n      }\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.drawViewPortTimes = function (ctx) {\n      ctx.strokeStyle = ConfigProviderService.vals.colors.labelColor;\n      ctx.fillStyle = ConfigProviderService.vals.colors.labelColor;\n      ctx.font = ConfigProviderService.vals.font.fontPxSize + 'px' + ' ' + ConfigProviderService.vals.font.fontType;\n      // lines to corners\n      ctx.beginPath();\n      ctx.moveTo(0, 0);\n      ctx.lineTo(5, 5);\n      ctx.moveTo(ctx.canvas.width, 0);\n      ctx.lineTo(ctx.canvas.width - 5, 5);\n      ctx.closePath();\n      ctx.stroke();\n      var scaleX = ctx.canvas.width / ctx.canvas.offsetWidth;\n      var scaleY = ctx.canvas.height / ctx.canvas.offsetHeight;\n      var sTime;\n      var eTime;\n      var horizontalText;\n      var space;\n      if (viewState.curViewPort) {\n        //draw time and sample nr\n        sTime = viewState.round(viewState.curViewPort.sS / Soundhandlerservice.wavJSO.SampleRate, 6);\n        eTime = viewState.round(viewState.curViewPort.eS / Soundhandlerservice.wavJSO.SampleRate, 6);\n        horizontalText = fontScaleService.getTextImageTwoLines(ctx, viewState.curViewPort.sS, sTime, ConfigProviderService.vals.font.fontPxSize, ConfigProviderService.vals.font.fontType, ConfigProviderService.vals.colors.labelColor, true);\n        // ctx.drawImage(horizontalText, 0, 0, horizontalText.width, horizontalText.height, 0, 0, horizontalText.width, horizontalText.height);\n        ctx.drawImage(horizontalText, 5, 5);\n        space = getScaleWidth(ctx, viewState.curViewPort.eS, eTime, scaleX);\n        horizontalText = fontScaleService.getTextImageTwoLines(ctx, viewState.curViewPort.eS, eTime, ConfigProviderService.vals.font.fontPxSize, ConfigProviderService.vals.font.fontType, ConfigProviderService.vals.colors.labelColor, false);\n        ctx.drawImage(horizontalText, 0, 0, horizontalText.width, horizontalText.height, ctx.canvas.width - space - 5, 0, horizontalText.width, horizontalText.height);  //draw dot at edge of image\n                                                                                                                                                                         // var spaceW = getScaleWidth(ctx, viewState.curViewPort.eS, eTime, scaleX);\n                                                                                                                                                                         // var startPoint = (Math.PI / 180) * 0;\n                                                                                                                                                                         // var endPoint = (Math.PI / 180) * 360;\n                                                                                                                                                                         // ctx.beginPath();\n                                                                                                                                                                         // ctx.arc(spaceW, config.vals.font.fontPxSize * 2 * scaleY, 10, startPoint, endPoint, true);\n                                                                                                                                                                         // ctx.fill();\n                                                                                                                                                                         // ctx.closePath();\n      }\n    };\n    return sServObj;\n  }\n]);\n'use strict';\nangular.module('emuwebApp').service('HistoryService', [\n  '$log',\n  'Ssffdataservice',\n  'LevelService',\n  'ConfigProviderService',\n  'viewState',\n  'Soundhandlerservice',\n  function HistoryService($log, Ssffdataservice, LevelService, ConfigProviderService, viewState, Soundhandlerservice) {\n    // shared service object\n    var sServObj = {};\n    sServObj.movesAwayFromLastSave = 0;\n    //////////////////////////////////////////\n    // new dual stack implementation\n    //private\n    var undoStack = [];\n    var redoStack = [];\n    var curChangeObj = {};\n    // applyChanges should be called by undo redo functions\n    function applyChange(changeObj, applyOldVal) {\n      Object.keys(changeObj).forEach(function (key) {\n        var cur = changeObj[key];\n        if (cur.type === 'SSFF') {\n          if (applyOldVal) {\n            var tr = ConfigProviderService.getSsffTrackConfig(cur.trackName);\n            var col = Ssffdataservice.getColumnOfTrack(tr.name, tr.columnName);\n            col.values[cur.sampleBlockIdx][cur.sampleIdx] = cur.oldValue;\n          } else {\n            var tr = ConfigProviderService.getSsffTrackConfig(cur.trackName);\n            var col = Ssffdataservice.getColumnOfTrack(tr.name, tr.columnName);\n            col.values[cur.sampleBlockIdx][cur.sampleIdx] = cur.newValue;\n          }\n        } else if (cur.type === 'ESPS') {\n          switch (cur.action) {\n          case 'MOVEBOUNDARY':\n            if (applyOldVal) {\n              LevelService.moveBoundary(cur.name, cur.id, -cur.movedBy, cur.isFirst, cur.isLast);\n            } else {\n              LevelService.moveBoundary(cur.name, cur.id, cur.movedBy, cur.isFirst, cur.isLast);\n            }\n            break;\n          case 'MOVESEGMENT':\n            if (applyOldVal) {\n              LevelService.moveSegment(cur.name, cur.id, cur.length, -cur.movedBy);\n            } else {\n              LevelService.moveSegment(cur.name, cur.id, cur.length, cur.movedBy);\n            }\n            break;\n          case 'MOVEPOINT':\n            if (applyOldVal) {\n              LevelService.movePoint(cur.name, cur.id, -cur.movedBy);\n            } else {\n              LevelService.movePoint(cur.name, cur.id, cur.movedBy);\n            }\n            break;\n          case 'RENAMELABEL':\n            if (applyOldVal) {\n              LevelService.renameLabel(cur.name, cur.id, cur.attrIndex, cur.oldValue);\n            } else {\n              LevelService.renameLabel(cur.name, cur.id, cur.attrIndex, cur.newValue);\n            }\n            break;\n          case 'RENAMELEVEL':\n            if (applyOldVal) {\n              LevelService.renameLevel(cur.newname, cur.name, cur.curPerspectiveIdx);\n            } else {\n              LevelService.renameLevel(cur.name, cur.newname, cur.curPerspectiveIdx);\n            }\n            break;\n          case 'DELETELEVEL':\n            if (applyOldVal) {\n              LevelService.addLevel(cur.level, cur.id, cur.curPerspectiveIdx);\n            } else {\n              LevelService.deleteLevel(cur.id, cur.curPerspectiveIdx);\n            }\n            break;\n          case 'ADDLEVEL':\n            if (applyOldVal) {\n              LevelService.deleteLevel(cur.id, cur.curPerspectiveIdx);\n            } else {\n              LevelService.addLevel(cur.level, cur.id, cur.curPerspectiveIdx);\n            }\n            break;\n          case 'DELETEBOUNDARY':\n            if (applyOldVal) {\n              LevelService.deleteBoundaryInvers(cur.name, cur.id, cur.isFirst, cur.isLast, cur.deletedSegment);\n            } else {\n              LevelService.deleteBoundary(cur.name, cur.id, cur.isFirst, cur.isLast);\n            }\n            break;\n          case 'DELETESEGMENTS':\n            if (applyOldVal) {\n              LevelService.deleteSegmentsInvers(cur.name, cur.id, cur.length, cur.deletedSegment);\n            } else {\n              LevelService.deleteSegments(cur.name, cur.id, cur.length);\n            }\n            break;\n          case 'INSERTSEGMENTS':\n            if (applyOldVal) {\n              LevelService.insertSegmentInvers(cur.name, cur.start, cur.end, cur.segName);\n            } else {\n              LevelService.insertSegment(cur.name, cur.start, cur.end, cur.segName, cur.ids);\n            }\n            break;\n          case 'INSERTPOINT':\n            if (applyOldVal) {\n              LevelService.deletePoint(cur.name, cur.id);\n            } else {\n              LevelService.insertPoint(cur.name, cur.start, cur.pointName, cur.id);\n            }\n            break;\n          case 'DELETEPOINT':\n            if (applyOldVal) {\n              LevelService.insertPoint(cur.name, cur.start, cur.pointName, cur.id);\n            } else {\n              LevelService.deletePoint(cur.name, cur.id);\n            }\n            break;\n          case 'EXPANDSEGMENTS':\n            // ongoing\n            if (applyOldVal) {\n              LevelService.expandSegment(cur.rightSide, cur.item, cur.levelName, -cur.changeTime);\n            } else {\n              LevelService.expandSegment(cur.rightSide, cur.item, cur.levelName, cur.changeTime);\n            }\n            break;\n          }\n        }\n      });\n    }\n    /////////////////////////////////////\n    // public API\n    /**\n\t\t *\n\t\t */\n    sServObj.updateCurChangeObj = function (dataObj) {\n      // console.log(dataObj);\n      var dataKey;\n      if (dataObj.type === 'SSFF') {\n        dataKey = String(dataObj.type + '#' + dataObj.trackName) + '#' + String(dataObj.sampleBlockIdx) + '#' + String(dataObj.sampleIdx);\n        console.log(dataKey);\n        // update curChangeObj\n        if (!curChangeObj[dataKey]) {\n          curChangeObj[dataKey] = dataObj;\n        } else {\n          // console.log('here' + curChangeObj[dataKey].oldValue);\n          // keep init old value\n          dataObj.oldValue = curChangeObj[dataKey].oldValue;\n          curChangeObj[dataKey] = dataObj;\n        }\n      } else if (dataObj.type === 'ESPS') {\n        switch (dataObj.action) {\n        case 'MOVEBOUNDARY':\n        case 'MOVEPOINT':\n        case 'MOVESEGMENT':\n        case 'INSERTPOINT':\n          dataKey = String(dataObj.type + '#' + dataObj.action + '#' + dataObj.name + '#' + dataObj.id);\n          if (!curChangeObj[dataKey]) {\n            curChangeObj[dataKey] = dataObj;\n          } else {\n            dataObj.movedBy += curChangeObj[dataKey].movedBy;\n            curChangeObj[dataKey] = dataObj;\n          }\n          break;\n        }\n      }\n      return curChangeObj;\n    };\n    // addCurChangeObjToUndoStack\n    sServObj.addCurChangeObjToUndoStack = function () {\n      // empty redo stack\n      redoStack = [];\n      // add to undoStack\n      if (!$.isEmptyObject(curChangeObj)) {\n        undoStack.push(curChangeObj);\n        sServObj.movesAwayFromLastSave += 1;\n      }\n      $log.info(curChangeObj);\n      // reset curChangeObj\n      curChangeObj = {};\n    };\n    // addCurChangeObjToUndoStack\n    sServObj.addObjToUndoStack = function (obj) {\n      // empty redo stack\n      redoStack = [];\n      var tmpObj = {};\n      var dataKey = String(obj.type + '#' + obj.action + '#' + obj.name + '#' + obj.id);\n      tmpObj[dataKey] = angular.copy(obj);\n      // add to undoStack\n      if (!$.isEmptyObject(tmpObj)) {\n        undoStack.push(tmpObj);\n        sServObj.movesAwayFromLastSave += 1;\n      }\n      // reset curChangeObj\n      curChangeObj = {};\n    };\n    // undo\n    sServObj.undo = function () {\n      if (undoStack.length > 0) {\n        // add to redo stack\n        var oldChangeObj = angular.copy(undoStack[undoStack.length - 1]);\n        redoStack.push(oldChangeObj);\n        applyChange(oldChangeObj, true);\n        // remove old \n        undoStack.pop();\n        sServObj.movesAwayFromLastSave -= 1;\n      }\n    };\n    // redo\n    sServObj.redo = function () {\n      if (redoStack.length > 0) {\n        var oldChangeObj = angular.copy(redoStack[redoStack.length - 1]);\n        undoStack.push(oldChangeObj);\n        applyChange(oldChangeObj, false);\n        redoStack.pop();\n        sServObj.movesAwayFromLastSave += 1;\n      }\n    };\n    // getNrOfPossibleUndos\n    sServObj.getNrOfPossibleUndos = function () {\n      return undoStack.length;\n    };\n    // return current History Stack\n    sServObj.getCurrentStack = function () {\n      return {\n        'undo': undoStack,\n        'redo': redoStack\n      };\n    };\n    // resetToInitState\n    sServObj.resetToInitState = function () {\n      undoStack = [];\n      redoStack = [];\n      curChangeObj = {};\n      sServObj.movesAwayFromLastSave = 0;\n    };\n    return sServObj;\n  }\n]);\n'use strict';\nangular.module('emuwebApp').service('Wavparserservice', [\n  '$q',\n  function Wavparserservice($q) {\n    // shared service object\n    var sServObj = {};\n    var worker = new Worker('scripts/workers/wavParserWorker.js');\n    var defer;\n    // add event listener to worker to respond to messages\n    worker.addEventListener('message', function (e) {\n      if (e.data.status.type === 'SUCCESS') {\n        defer.resolve(e.data.data);\n      } else {\n        defer.reject(e.data);\n      }\n    }, false);\n    /**\n\t\t * parse buffer containing wav file using webworker\n\t\t * @param buf\n\t\t * @returns promise\n\t\t */\n    sServObj.parseWavArrBuf = function (buf) {\n      defer = $q.defer();\n      worker.postMessage({\n        'cmd': 'parseBuf',\n        'buffer': buf\n      }, [buf]);\n      // Send data to our worker.\n      return defer.promise;\n    };\n    return sServObj;\n  }\n]);\n'use strict';\nangular.module('emuwebApp').service('Textgridparserservice', [\n  '$q',\n  'LevelService',\n  'viewState',\n  'Soundhandlerservice',\n  function Textgridparserservice($q, LevelService, viewState, Soundhandlerservice) {\n    // shared service object\n    var sServObj = {};\n    var worker = new Worker('scripts/workers/textGridParserWorker.js');\n    var defer;\n    // add event listener to worker to respond to messages\n    worker.addEventListener('message', function (e) {\n      if (e.data.status.type === 'SUCCESS') {\n        defer.resolve(e.data);\n      } else {\n        defer.reject(e.data);\n      }\n    }, false);\n    /**\n\t\t * parse level data to Textgrid File\n\t\t * @param level data\n\t\t * @returns promise\n\t\t */\n    sServObj.asyncToTextGrid = function () {\n      defer = $q.defer();\n      worker.postMessage({\n        'cmd': 'toTextGrid',\n        'levels': LevelService.getData().levels,\n        'sampleRate': Soundhandlerservice.wavJSO.SampleRate,\n        'buffLength': Soundhandlerservice.wavJSO.Data.length\n      });\n      // Send data to our worker.\n      return defer.promise;\n    };\n    /**\n\t\t * parse array of ssff file using webworker\n\t\t * @param array of ssff files encoded as base64 stings\n\t\t * @returns promise\n\t\t */\n    sServObj.asyncParseTextGrid = function (textGrid, annotates, name) {\n      defer = $q.defer();\n      worker.postMessage({\n        'cmd': 'parseTG',\n        'textGrid': textGrid,\n        'sampleRate': Soundhandlerservice.wavJSO.SampleRate,\n        'annotates': annotates,\n        'name': name\n      });\n      // Send data to our worker.\n      return defer.promise;\n    };\n    return sServObj;\n  }\n]);\n'use strict';\nangular.module('emuwebApp').factory('uuid', function () {\n  // shared service object\n  var sServObj = {};\n  function rand(s) {\n    var p = (Math.random().toString(16) + '000000000').substr(2, 8);\n    return s ? '-' + p.substr(0, 4) + '-' + p.substr(4, 4) : p;\n  }\n  //\n  sServObj.new = function () {\n    return rand() + rand(true) + rand(true) + rand();\n  };\n  sServObj.newHash = function () {\n    return rand() + rand(true) + rand(true) + rand();\n  };\n  //\n  sServObj.empty = function () {\n    return '00000000-0000-0000-0000-000000000000';\n  };\n  return sServObj;\n});\n'use strict';\nangular.module('emuwebApp').service('fontScaleService', function fontScaleService() {\n  // shared service object\n  var sServObj = {};\n  sServObj.lastTextWidth = null;\n  sServObj.spaceTop = 0;\n  /**\n\t\t *\n\t\t */\n  sServObj.getTextImage = function (ctxOriginal, text, fontPxSize, fontType, color) {\n    var scaleY = ctxOriginal.canvas.height / ctxOriginal.canvas.offsetHeight;\n    var scaleX = ctxOriginal.canvas.width / ctxOriginal.canvas.offsetWidth;\n    fontPxSize = Math.floor(fontPxSize + 2 - scaleY / 2);\n    var img = document.createElement('canvas');\n    img.setAttribute('width', Math.round(scaleX * 200));\n    img.setAttribute('height', Math.round(scaleY * 100));\n    var ctx = img.getContext('2d');\n    ctx.save();\n    ctx.font = fontPxSize + 'px' + ' ' + fontType;\n    ctx.fillStyle = color;\n    ctx.scale(scaleX, scaleY);\n    ctx.fillText(text, 0, fontPxSize + sServObj.spaceTop);\n    sServObj.lastTextWidth = ctx.measureText(text).width * scaleX;\n    // draw frame to see size\n    ctx.restore();\n    // ctx.fillStyle = \"red\";\n    // ctx.strokeStyle = \"red\";\n    // ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    // ctx.stroke();\n    return img;\n  };\n  /**\n\t\t *\n\t\t */\n  sServObj.getLastImageWidth = function () {\n    return sServObj.lastTextWidth;\n  };\n  /**\n\t\t *\n\t\t */\n  sServObj.getTextImageTwoLines = function (ctxOriginal, text, text2, fontPxSize, fontType, color, alignLeft) {\n    var scaleY = ctxOriginal.canvas.height / ctxOriginal.canvas.offsetHeight;\n    var scaleX = ctxOriginal.canvas.width / ctxOriginal.canvas.offsetWidth;\n    fontPxSize = Math.floor(fontPxSize + 2 - scaleY / 2);\n    var img = document.createElement('canvas');\n    img.setAttribute('width', Math.round(scaleX * 200));\n    img.setAttribute('height', Math.round(scaleY * 100));\n    var ctx = img.getContext('2d');\n    ctx.save();\n    ctx.font = fontPxSize + 'px' + ' ' + fontType;\n    ctx.fillStyle = color;\n    ctx.scale(scaleX, scaleY);\n    sServObj.lastTextWidth = ctx.measureText(text).width * scaleX;\n    if (alignLeft) {\n      ctx.fillText(text, 0, fontPxSize + sServObj.spaceTop);\n      ctx.fillText(text2, 0, 2 * fontPxSize + sServObj.spaceTop);\n    } else {\n      var a = ctx.measureText(text).width;\n      var b = ctx.measureText(text2).width;\n      // var c;\n      if (a > b) {\n        ctx.fillText(text, 0, fontPxSize + sServObj.spaceTop);\n        ctx.fillText(text2, a - b, 2 * fontPxSize + sServObj.spaceTop);\n      } else {\n        ctx.fillText(text, b - a, fontPxSize + sServObj.spaceTop);\n        ctx.fillText(text2, 0, 2 * fontPxSize + sServObj.spaceTop);\n      }\n    }\n    // draw frame to see size\n    ctx.restore();\n    // ctx.fillStyle = 'red';\n    // ctx.strokeStyle = 'red';\n    // ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    // ctx.stroke();\n    return img;\n  };\n  return sServObj;\n});\n'use strict';\nangular.module('emuwebApp').service('Espsparserservice', [\n  '$q',\n  'LevelService',\n  'Soundhandlerservice',\n  function Espsparserservice($q, LevelService, Soundhandlerservice) {\n    // shared service object\n    var sServObj = {};\n    var worker = new Worker('scripts/workers/espsParserWorker.js');\n    var defer;\n    // add event listener to worker to respond to messages\n    worker.addEventListener('message', function (e) {\n      if (e.data.status.type === 'SUCCESS') {\n        defer.resolve(e.data);\n      } else {\n        defer.reject(e.data);\n      }\n    }, false);\n    /**\n\t\t * parse ESPS file using webworker\n\t\t * @param esps\n\t\t * @param annotates\n\t\t * @param name\n\t\t * @returns promise\n\t\t */\n    sServObj.asyncParseEsps = function (esps, annotates, name) {\n      defer = $q.defer();\n      worker.postMessage({\n        'cmd': 'parseESPS',\n        'esps': esps,\n        'sampleRate': Soundhandlerservice.wavJSO.SampleRate,\n        'annotates': annotates,\n        'name': name\n      });\n      // Send data to our worker.\n      return defer.promise;\n    };\n    /**\n\t\t * parse JSO data to ESPS file using webworker\n\t\t * @param name\n\t\t * @param sampleRate\n\t\t * @returns promise\n\t\t */\n    sServObj.asyncParseJSO = function (name) {\n      defer = $q.defer();\n      worker.postMessage({\n        'cmd': 'parseJSO',\n        'level': LevelService.getLevelDetails(name).level,\n        'sampleRate': Soundhandlerservice.wavJSO.SampleRate\n      });\n      // Send data to our worker.\n      return defer.promise;\n    };\n    return sServObj;\n  }\n]);\n'use strict';\nangular.module('emuwebApp').controller('LoginCtrl', [\n  '$scope',\n  '$rootScope',\n  '$http',\n  'ConfigProviderService',\n  'Iohandlerservice',\n  'viewState',\n  'dialogService',\n  function ($scope, $rootScope, $http, ConfigProviderService, Iohandlerservice, viewState, dialogService) {\n    $scope.loginData = {\n      'username': '',\n      'password': '',\n      'errorMsg': ''\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.tryLogin = function () {\n      Iohandlerservice.logOnUser($scope.loginData.username, $scope.loginData.password).then(function (res) {\n        if (res === 'LOGGEDON') {\n          dialogService.close(true);\n        } else {\n          $scope.loginData.errorMsg = 'ERROR: ' + res;\n        }\n      });\n    };\n    // FOR DEVELOPMENT\n    // $scope.tryLogin(); // for autologin uncomment and set username + password\n    /**\n\t\t *\n\t\t */\n    $scope.cursorInTextField = function () {\n      viewState.focusInTextField = true;  // console.log(\"CURSOR\");\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.cursorOutOfTextField = function () {\n      viewState.focusInTextField = false;\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.cancel = function () {\n      dialogService.close(false);\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').service('Ssffdataservice', [\n  'viewState',\n  'Soundhandlerservice',\n  function Ssffdataservice(viewState, Soundhandlerservice) {\n    // shared service object\n    var sServObj = {};\n    sServObj.data = [];\n    /**\n\t\t *\n\t\t */\n    sServObj.getColumnOfTrack = function (trackName, columnName) {\n      var res;\n      sServObj.data.forEach(function (tr) {\n        if (tr.ssffTrackName === trackName) {\n          tr.Columns.forEach(function (col) {\n            if (col.name === columnName) {\n              res = col;\n            }\n          });\n        }\n      });\n      if (res !== undefined) {\n        return res;\n      } else {\n        alert('could not getColumnOfTrack of trackname: ' + trackName);\n      }\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.getSampleRateAndStartTimeOfTrack = function (trackName) {\n      var res = {};\n      sServObj.data.forEach(function (tr) {\n        if (tr.ssffTrackName === trackName) {\n          res.sampleRate = tr.sampleRate;\n          res.startTime = tr.startTime;\n        }\n      });\n      if (res !== undefined) {\n        return res;\n      } else {\n        alert('could not getSampleRateAndStartTimeOfTrack of trackname: ' + trackName);\n      }\n    };\n    /**\n\t\t * calculates the closest audio sample of\n\t\t * the passed in column sample nr\n\t\t */\n    sServObj.calculateSamplePosInVP = function (colSampleNr, sampleRate, startTime) {\n      var sampleTime = colSampleNr / sampleRate + startTime;\n      var audioSample = Math.round(sampleTime * Soundhandlerservice.wavJSO.SampleRate);\n      return audioSample;\n    };\n    return sServObj;\n  }\n]);\n'use strict';\nangular.module('emuwebApp').service('LevelService', [\n  '$q',\n  'ConfigProviderService',\n  'Soundhandlerservice',\n  'viewState',\n  'Ssffdataservice',\n  'ArrayHelperService',\n  function LevelService($q, ConfigProviderService, Soundhandlerservice, viewState, Ssffdataservice, ArrayHelperService) {\n    // shared service object\n    var sServObj = {};\n    sServObj.data = {};\n    // holding level data\n    sServObj.maxItemID = 0;\n    // max currently loaded level data Id\n    sServObj.lasteditArea = null;\n    // holding current edit area\n    sServObj.lasteditAreaElem = null;\n    // holding current edit area element\n    /**\n\t\t * search for the according label field in labels\n\t\t * and return its index\n\t\t *    @param attrDefName\n\t\t *    @param labels\n\t\t */\n    function getLabelIdx(attrDefName, labels) {\n      var labelIdx;\n      angular.forEach(labels, function (l, idx) {\n        if (l.name === attrDefName) {\n          labelIdx = idx;\n        }\n      });\n      return labelIdx;\n    }\n    ///////////////////////////////\n    // public api\n    sServObj.getData = function () {\n      return sServObj.data;\n    };\n    /**\n\t\t * sets annotation data and sets maxItemID by parsing id in elements\n\t\t */\n    sServObj.setData = function (data) {\n      angular.copy(data, sServObj.data);\n      angular.forEach(sServObj.data.levels, function (level) {\n        level.items.forEach(function (item) {\n          if (item.id > sServObj.maxItemID) {\n            sServObj.maxItemID = item.id;\n          }\n        });\n      });\n    };\n    /**\n\t\t * called externally by handlekeystrokes\n\t\t */\n    sServObj.getNewId = function () {\n      sServObj.maxItemID += 1;\n      return sServObj.maxItemID;\n    };\n    /**\n\t\t * called internally by functions\n\t\t */\n    sServObj.raiseId = function (amount) {\n      sServObj.maxItemID += amount;\n    };\n    /**\n\t\t * called internally by functions\n\t\t */\n    sServObj.lowerId = function (amount) {\n      sServObj.maxItemID -= amount;\n    };\n    /**\n\t\t * returns level details (level object and sorting id) by passing in level Name\n\t\t */\n    sServObj.getLevelDetails = function (name) {\n      var curLevel = null;\n      var id = null;\n      angular.forEach(sServObj.data.levels, function (level, num) {\n        if (level.name === name) {\n          curLevel = level;\n          id = num;\n        }\n      });\n      return {\n        level: curLevel,\n        id: id\n      };\n    };\n    /**\n\t\t * gets element order by passing in elemtent id\n\t\t */\n    sServObj.getOrderById = function (name, eid) {\n      var ret = undefined;\n      angular.forEach(sServObj.data.levels, function (level) {\n        if (level.name === name) {\n          level.items.forEach(function (e, num) {\n            if (e.id === eid) {\n              ret = num;\n            }\n          });\n        }\n      });\n      return ret;\n    };\n    /**\n\t\t * gets element id by passing in element order\n\t\t */\n    sServObj.getIdByOrder = function (name, order) {\n      var ret = null;\n      angular.forEach(sServObj.data.levels, function (level) {\n        if (level.name === name) {\n          level.items.forEach(function (element, num) {\n            if (num == order) {\n              ret = element.id;\n            }\n          });\n        }\n      });\n      return ret;\n    };\n    /**\n\t\t * gets item details by passing in levelName and item order\n\t\t */\n    sServObj.getItemDetails = function (name, order) {\n      var details = null;\n      angular.forEach(sServObj.data.levels, function (level) {\n        if (level.name === name) {\n          level.items.forEach(function (element, num) {\n            if (num == order) {\n              details = element;\n            }\n          });\n        }\n      });\n      return details;\n    };\n    /**\n\t\t * gets element details by passing in levelName and elemtent order\n\t\t */\n    sServObj.getLastItem = function (name) {\n      var details = null;\n      angular.forEach(sServObj.data.levels, function (level) {\n        if (level.name === name) {\n          details = level.items[level.items.length - 1];\n        }\n      });\n      return details;\n    };\n    /**\n\t\t * get next Element in order\n\t\t */\n    sServObj.getNextItem = function (name, id) {\n      var details = null;\n      angular.forEach(sServObj.data.levels, function (level) {\n        if (level.name === name) {\n          level.items.forEach(function (element, num) {\n            if (element.id == id) {\n              details = level.items[num + 1];\n            }\n          });\n        }\n      });\n      return details;\n    };\n    /**\n\t\t * gets item from leve by passing in levelName and item id\n\t\t *\n\t\t * @return item\n\t\t */\n    sServObj.getItemFromLevelById = function (levelName, id) {\n      var foundItm = null;\n      angular.forEach(sServObj.data.levels, function (level) {\n        if (level.name === levelName) {\n          level.items.forEach(function (element) {\n            if (element.id == id) {\n              foundItm = element;\n            }\n          });\n        }\n      });\n      return foundItm;\n    };\n    /**\n\t\t * Getter for last edit Area Element\n\t\t *   @return lasteditAreaElem last edit Area Element\n\t\t */\n    sServObj.getlasteditAreaElem = function () {\n      return sServObj.lasteditAreaElem;\n    };\n    /**\n\t\t * Setter for last edit Area Element\n\t\t *   @param lasteditAreaElem last edit Area Element\n\t\t */\n    sServObj.setlasteditAreaElem = function (e) {\n      sServObj.lasteditAreaElem = e;\n    };\n    /**\n\t\t * Setter for last edit Area\n\t\t *   @param lasteditAreaElem last edit Area\n\t\t */\n    sServObj.setlasteditArea = function (name) {\n      sServObj.lasteditArea = name;\n    };\n    /**\n\t\t * Getter for last edit Area\n\t\t *   @return lasteditAreaElem last edit Area\n\t\t */\n    sServObj.getlasteditArea = function () {\n      return sServObj.lasteditArea;\n    };\n    /**\n\t\t * Getter for id of last edited Element\n\t\t *   @return lasteditAreaElem last edit Area\n\t\t */\n    sServObj.getlastID = function () {\n      return sServObj.lasteditArea.substr(1);\n    };\n    /**\n\t\t * Remove currently open html textarea (if there is a textarea open)\n\t\t * and set viewState.editing to false.\n\t\t */\n    sServObj.deleteEditArea = function () {\n      if (null !== sServObj.getlasteditArea()) {\n        $('.' + sServObj.getlasteditArea()).remove();\n      }\n      viewState.editing = false;\n    };\n    /**\n\t\t * Calculate values (x,y,width,height) for textarea to open\n\t\t * depending on the current Level type, the current canvas\n\t\t * and the current clicked Element\n\t\t *   @param lastEventClick the current clicked Level Element\n\t\t *   @param element the current html Element to get canvas from\n\t\t *   @param type the current Level type\n\t\t */\n    sServObj.openEditArea = function (lastEventClick, element, type) {\n      var levelName = viewState.getcurClickLevelName();\n      var attrDefName = viewState.getCurAttrDef(levelName);\n      // find labelIdx\n      var labelIdx = getLabelIdx(attrDefName, lastEventClick.labels);\n      var elem = element.find('canvas').context.getContext('2d');\n      var clientWidth = elem.canvas.clientWidth;\n      var clientOffset = elem.canvas.offsetLeft;\n      var top = elem.canvas.offsetTop;\n      var height = elem.canvas.clientHeight - 1;\n      var len = 10;\n      if (labelIdx !== undefined) {\n        if (lastEventClick.labels[labelIdx].value.length > 0) {\n          len = lastEventClick.labels[labelIdx].value.length * 7;\n        }\n      }\n      var editText = '';\n      if (lastEventClick.labels.length > 0) {\n        editText = lastEventClick.labels[labelIdx].value;\n      }\n      if (type === 'SEGMENT') {\n        var start = Math.floor(viewState.getPos(clientWidth, lastEventClick.sampleStart) + clientOffset);\n        var end = Math.ceil(viewState.getPos(clientWidth, lastEventClick.sampleStart + lastEventClick.sampleDur + 1) + clientOffset);\n        var width = end - start;\n        if (width < 2 * len) {\n          var zoom = viewState.curViewPort.eS - viewState.curViewPort.sS;\n          console.log(zoom);\n          if (zoom <= 10) {\n            // if already zoomed in but text is still too long\n            sServObj.createEditArea(element, start, top, end - start, height, lastEventClick.labels[labelIdx].value, lastEventClick.id);\n          } else {\n            viewState.zoomViewPort(true, this);\n            sServObj.openEditArea(lastEventClick, element, type);\n            return;\n          }\n        }\n        sServObj.createEditArea(element, start, top, end - start, height, editText, lastEventClick.id);\n      } else {\n        var start = viewState.getPos(clientWidth, lastEventClick.samplePoint) + clientOffset - len / 2;\n        var end = viewState.getPos(clientWidth, lastEventClick.samplePoint) + clientOffset + len / 2;\n        var width = end - start;\n        if (width < 2 * len) {\n          width = 2 * len;\n        }\n        sServObj.createEditArea(element, start, top, width, height, editText, lastEventClick.id);\n      }\n      sServObj.createSelection(element.find('textarea')[0], 0, editText.length);\n    };\n    /**\n\t\t * Create a Text Selection in a html Textarea\n\t\t *   @param field the textarea element\n\t\t *   @param start the starting character position as int\n\t\t *   @param end the ending character position as int\n\t\t */\n    sServObj.createSelection = function (field, start, end) {\n      if (field.createTextRange) {\n        var selRange = field.createTextRange();\n        selRange.collapse(true);\n        selRange.moveStart('character', start);\n        selRange.moveEnd('character', end);\n        selRange.select();\n      } else if (field.setSelectionRange) {\n        field.setSelectionRange(start, end);\n      } else if (field.selectionStart) {\n        field.selectionStart = start;\n        field.selectionEnd = end;\n      }\n      field.focus();\n    };\n    /**\n\t\t * create a html textarea element at given\n\t\t *   @param x the x Position\n\t\t *   @param y the y Position\n\t\t *   @param width the Width\n\t\t *   @param height the Height\n\t\t *   @param label the Text Content of the Textarea\n\t\t *   @param labelid the id of the element\n\t\t */\n    sServObj.createEditArea = function (element, x, y, width, height, label, labelid) {\n      var textid = '_' + labelid;\n      element.prepend($('<textarea>').attr({\n        id: textid,\n        'class': textid + ' emuwebapp-labelEdit',\n        'ng-model': 'message',\n        'autofocus': 'true'\n      }).css({\n        'left': Math.round(x + 2) + 'px',\n        'top': Math.round(y) + 'px',\n        'width': Math.round(width) - 4 + 'px',\n        'height': Math.round(height) - 1 + 'px',\n        'padding-top': Math.round(height / 3 + 1) + 'px'\n      }).text(label));\n    };\n    /**\n\t\t * insert a new Item with id labelname start and duration at position on level\n\t\t */\n    sServObj.insertItemDetails = function (id, levelname, position, labelname, start, duration) {\n      var attrdefs = ConfigProviderService.getLevelDefinition(levelname).attributeDefinitions;\n      var curAttrDef = viewState.getCurAttrDef(levelname);\n      var newElement;\n      angular.forEach(sServObj.data.levels, function (level) {\n        if (level.name === levelname) {\n          if (level.type == 'SEGMENT') {\n            newElement = {\n              id: id,\n              sampleStart: start,\n              sampleDur: duration,\n              labels: []\n            };\n            if (attrdefs.length > 0) {\n              for (var i = 0; i < attrdefs.length; i++) {\n                if (attrdefs[i].name === curAttrDef) {\n                  newElement.labels.push({\n                    name: levelname,\n                    value: labelname\n                  });\n                } else {\n                  newElement.labels.push({\n                    name: attrdefs[i].name,\n                    value: ''\n                  });\n                }\n              }\n            } else {\n              newElement.labels.push({\n                name: levelname,\n                value: labelname\n              });\n            }\n          } else if (level.type == 'EVENT') {\n            newElement = {\n              id: id,\n              samplePoint: start,\n              labels: []\n            };\n            for (var i = 0; i < attrdefs.length; i++) {\n              if (attrdefs[i].name === curAttrDef) {\n                newElement.labels.push({\n                  name: levelname,\n                  value: labelname\n                });\n              } else {\n                newElement.labels.push({\n                  name: attrdefs[i].name,\n                  value: ''\n                });\n              }\n            }\n          }\n          level.items.splice(position, 0, newElement);\n        }\n      });\n    };\n    /**\n\t\t * sets element details by passing in levelName and elemtent id\n\t\t */\n    sServObj.updateSegItemInLevel = function (levelname, id, labelname, labelIdx, start, duration) {\n      angular.forEach(sServObj.data.levels, function (level) {\n        if (level.name === levelname) {\n          level.items.forEach(function (element) {\n            if (element.id == id) {\n              if (start !== undefined) {\n                element.sampleStart = start;\n              }\n              if (duration !== undefined) {\n                element.sampleDur = duration;\n              }\n              if (labelname !== undefined) {\n                element.labels[labelIdx].value = labelname;\n              }\n            }\n          });\n        }\n      });\n    };\n    /**\n\t\t * sets element details by passing in levelName and elemtent id\n\t\t */\n    sServObj.setPointDetails = function (levelname, id, labelname, start) {\n      angular.forEach(sServObj.data.levels, function (level) {\n        if (level.name === levelname) {\n          level.items.forEach(function (element) {\n            if (element.id == id) {\n              element.samplePoint = start;\n              element.labels[0].value = labelname;\n            }\n          });\n        }\n      });\n    };\n    /**\n\t\t * gets item details by passing in levelName and item id's\n\t\t */\n    sServObj.getItemNeighboursFromLevel = function (levelName, firstid, lastid) {\n      var left = undefined;\n      var right = undefined;\n      angular.forEach(sServObj.data.levels, function (level) {\n        if (level.name === levelName) {\n          level.items.forEach(function (itm, num) {\n            if (itm.id == firstid) {\n              left = level.items[num - 1];\n            }\n            if (itm.id == lastid) {\n              right = level.items[num + 1];\n            }\n          });\n        }\n      });\n      return {\n        left: left,\n        right: right\n      };\n    };\n    /**\n\t\t * get item details by passing in level, sampleNr and maximum pcm\n\t\t *\n\t\t * @param level\n\t\t * @param sampleNr\n\t\t * @param maximum \n\t\t * @returns object of the form {current: item, nearest: item, isFirst: boolean, isLast: boolean} where \n\t\t * - current is the actual item where the mouse is\n\t\t * - nearest is the item next to the current one depending on where the mouse is (ie if over 50% right element, under 50% left element)\n\t\t * - isFirst is true if the mouse is before the first item\n\t\t * - isLast is true if the mouse is after the last item\n\t\t *          \n\t\t */\n    sServObj.getClosestItem = function (sampleNr, levelname, maximum) {\n      var level = sServObj.getLevelDetails(levelname).level;\n      var current = undefined;\n      var nearest = undefined;\n      var isFirst = undefined;\n      var isLast = undefined;\n      if (level.items.length > 0) {\n        current = nearest = level.items[0];\n        isFirst = true;\n        isLast = false;\n        if (level.type === 'SEGMENT') {\n          angular.forEach(level.items, function (itm, index) {\n            if (sampleNr >= itm.sampleStart - 0.5) {\n              // 0.5 sample correction\n              if (sampleNr <= itm.sampleStart + itm.sampleDur + 0.5) {\n                // 0.5 sample correction\n                if (sampleNr - itm.sampleStart >= itm.sampleDur / 2) {\n                  if (level.items[index + 1] !== undefined) {\n                    current = level.items[index];\n                    nearest = level.items[index + 1];\n                    isLast = false;\n                  } else {\n                    isLast = true;\n                    current = nearest = level.items[level.items.length - 1];\n                  }\n                } else {\n                  isLast = false;\n                  current = nearest = level.items[index];\n                }\n              }\n              isFirst = false;\n            }\n            if (sampleNr >= itm.sampleStart - 0.5) {\n              if (sampleNr <= itm.sampleStart + itm.sampleDur + 0.5) {\n                // 0.5 sample correction\n                current = itm;\n              } else {\n                isLast = true;\n                current = nearest = level.items[level.items.length - 1];\n              }\n            }\n          });\n        } else {\n          var spaceLower = 0;\n          var spaceHigher = 0;\n          isFirst = false;\n          isLast = false;\n          angular.forEach(level.items, function (evt, index) {\n            if (index < level.items.length - 1) {\n              spaceHigher = evt.samplePoint + (level.items[index + 1].samplePoint - level.items[index].samplePoint) / 2;\n            } else {\n              spaceHigher = maximum;\n            }\n            if (index > 0) {\n              spaceLower = evt.samplePoint - (level.items[index].samplePoint - level.items[index - 1].samplePoint) / 2;\n            } else {\n              spaceLower = 0;\n            }\n            if (sampleNr <= spaceHigher && sampleNr >= spaceLower) {\n              current = nearest = evt;\n            }\n          });\n        }\n      }\n      return {\n        current: current,\n        nearest: nearest,\n        isFirst: isFirst,\n        isLast: isLast\n      };\n    };\n    /**\n\t\t * deletes a level by its name\n\t\t */\n    sServObj.deleteLevel = function (levelIndex, curPerspectiveIdx) {\n      var lvl = sServObj.data.levels[levelIndex];\n      sServObj.data.levels.splice(levelIndex, 1);\n      ConfigProviderService.vals.perspectives[curPerspectiveIdx].levelCanvases.order.splice(levelIndex, 1);\n      return lvl;\n    };\n    /**\n\t\t * adds a level by its name\n\t\t */\n    sServObj.addLevel = function (originalLevel, levelIndex, curPerspectiveIdx) {\n      if (sServObj.data.levels !== undefined) {\n        sServObj.data.levels.splice(levelIndex, 0, originalLevel);\n        ConfigProviderService.vals.perspectives[curPerspectiveIdx].levelCanvases.order.splice(levelIndex, 0, originalLevel.name);\n      } else {\n        sServObj.data.levels = [];\n        sServObj.data.levels.splice(levelIndex, 0, originalLevel);\n        ConfigProviderService.vals.perspectives[curPerspectiveIdx].levelCanvases.order.splice(levelIndex, 0, originalLevel.name);\n      }\n    };\n    /**\n\t\t * rename the label of an element by passing in level name and id\n\t\t */\n    sServObj.renameLabel = function (levelName, id, attrIndex, newLabelName) {\n      sServObj.updateSegItemInLevel(levelName, id, newLabelName, attrIndex);\n    };\n    /**\n\t\t * rename the label of a level by passing in level name and id\n\t\t */\n    sServObj.renameLevel = function (oldname, newname, curPerspectiveIdx) {\n      //rename level name\n      angular.forEach(sServObj.data.levels, function (level) {\n        if (level.name === oldname) {\n          level.name = newname;\n          // rename all first label names to match new \n          angular.forEach(level.items, function (item) {\n            item.labels[0].name = newname;\n          });\n        }\n      });\n      // update order name as well\n      ConfigProviderService.vals.perspectives[curPerspectiveIdx].levelCanvases.order[ConfigProviderService.vals.perspectives[curPerspectiveIdx].levelCanvases.order.indexOf(oldname)] = newname;\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.deleteSegmentsInvers = function (name, id, length, deletedSegment) {\n      var attrDefName = viewState.getCurAttrDef(name);\n      var labelIdx;\n      var x, insertPoint;\n      insertPoint = 0;\n      angular.forEach(sServObj.data.levels, function (level) {\n        if (level.name === name) {\n          insertPoint = deletedSegment.order;\n          for (x in deletedSegment.segments) {\n            level.items.splice(insertPoint++, 0, deletedSegment.segments[x]);\n          }\n        }\n      });\n      var lastNeighbours = sServObj.getItemNeighboursFromLevel(name, deletedSegment.segments[0].id, deletedSegment.segments[deletedSegment.segments.length - 1].id);\n      if (lastNeighbours.left !== undefined && lastNeighbours.right === undefined) {\n        labelIdx = getLabelIdx(attrDefName, lastNeighbours.left.labels);\n        sServObj.updateSegItemInLevel(name, lastNeighbours.left.id, lastNeighbours.left.labels[labelIdx].value, labelIdx, lastNeighbours.left.sampleStart, lastNeighbours.left.sampleDur - deletedSegment.timeRight);\n      } else if (lastNeighbours.left === undefined && lastNeighbours.right !== undefined) {\n        labelIdx = getLabelIdx(attrDefName, lastNeighbours.right.labels);\n        sServObj.updateSegItemInLevel(name, lastNeighbours.right.id, lastNeighbours.right.labels[labelIdx].value, labelIdx, lastNeighbours.right.sampleStart + deletedSegment.timeLeft, lastNeighbours.right.sampleDur - deletedSegment.timeLeft);\n      } else if (lastNeighbours.left === undefined && lastNeighbours.right === undefined) {\n      } else {\n        labelIdx = getLabelIdx(attrDefName, lastNeighbours.left.labels);\n        sServObj.updateSegItemInLevel(name, lastNeighbours.left.id, lastNeighbours.left.labels[labelIdx].value, labelIdx, lastNeighbours.left.sampleStart, lastNeighbours.left.sampleDur - deletedSegment.timeLeft);\n        sServObj.updateSegItemInLevel(name, lastNeighbours.right.id, lastNeighbours.right.labels[labelIdx].value, labelIdx, lastNeighbours.right.sampleStart + deletedSegment.timeRight, lastNeighbours.right.sampleDur - deletedSegment.timeRight);\n      }\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.deleteSegments = function (name, id, length) {\n      var firstSegment = sServObj.getItemFromLevelById(name, id);\n      var firstOrder = sServObj.getOrderById(name, id);\n      var lastSegment = sServObj.getItemDetails(name, firstOrder + length - 1);\n      var neighbours = sServObj.getItemNeighboursFromLevel(name, firstSegment.id, lastSegment.id);\n      var timeLeft = 0;\n      var timeRight = 0;\n      var deleteOrder = null;\n      var deletedSegment = null;\n      var clickSeg = null;\n      var attrDefName = viewState.getCurAttrDef(name);\n      var labelIdx = getLabelIdx(attrDefName, firstSegment.labels);\n      for (var i = firstOrder; i < firstOrder + length; i++) {\n        timeLeft += sServObj.getItemDetails(name, i).sampleDur + 1;\n      }\n      if (timeLeft % 2 == 0) {\n        timeLeft = timeLeft / 2;\n        timeRight = timeLeft;\n      } else {\n        timeLeft = Math.ceil(timeLeft / 2);\n        timeRight = timeLeft - 1;\n      }\n      angular.forEach(sServObj.data.levels, function (level) {\n        if (level.name === name) {\n          angular.forEach(level.items, function (evt, order) {\n            if (evt.id == id) {\n              deleteOrder = order;\n              deletedSegment = level.items.splice(deleteOrder, length);\n            }\n          });\n        }\n      });\n      if (neighbours.left !== undefined && neighbours.right === undefined) {\n        sServObj.updateSegItemInLevel(name, neighbours.left.id, undefined, labelIdx, neighbours.left.sampleStart, neighbours.left.sampleDur + timeRight);\n        clickSeg = neighbours.left;\n      } else if (neighbours.left === undefined && neighbours.right !== undefined) {\n        sServObj.updateSegItemInLevel(name, neighbours.right.id, undefined, labelIdx, neighbours.right.sampleStart - timeLeft, neighbours.right.sampleDur + timeLeft);\n        clickSeg = neighbours.right;\n      } else if (neighbours.left === undefined && neighbours.right === undefined) {\n        // nothing left to do level empty now\n        viewState.setcurMouseSegment(undefined, undefined, undefined);\n      } else {\n        sServObj.updateSegItemInLevel(name, neighbours.left.id, undefined, labelIdx, neighbours.left.sampleStart, neighbours.left.sampleDur + timeLeft);\n        sServObj.updateSegItemInLevel(name, neighbours.right.id, undefined, labelIdx, neighbours.right.sampleStart - timeRight, neighbours.right.sampleDur + timeRight);\n        clickSeg = neighbours.left;\n      }\n      return {\n        order: deleteOrder,\n        segments: deletedSegment,\n        timeLeft: timeLeft,\n        timeRight: timeRight,\n        clickSeg: clickSeg\n      };\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.insertSegmentInvers = function (name, start, end, newLabel) {\n      var ret = true;\n      var diff, diff2;\n      angular.forEach(sServObj.data.levels, function (t) {\n        if (t.name === name) {\n          if (start == end) {\n            var startOrder = -1;\n            angular.forEach(t.items, function (evt, order) {\n              if (start == evt.sampleStart) {\n                startOrder = order;\n                ret = true;\n              }\n            });\n            if (ret) {\n              var diff = 0;\n              if (t.items[startOrder] !== undefined) {\n                diff = t.items[startOrder].sampleDur + 1;\n              }\n              if (t.items[startOrder - 1] !== undefined) {\n                // if not leftmost item\n                t.items[startOrder - 1].sampleDur += diff;\n              }\n              t.items.splice(startOrder, 1);\n            }\n          } else {\n            var startOrder = -1;\n            angular.forEach(t.items, function (evt, order) {\n              if (start == evt.sampleStart) {\n                startOrder = order;\n                ret = true;\n              }\n            });\n            if (ret) {\n              if (t.items[startOrder + 1] === undefined) {\n                // if rightmost item\n                t.items.splice(startOrder - 1, 2);\n              } else if (t.items[startOrder - 1] === undefined) {\n                // if leftmost item\n                t.items.splice(startOrder, 2);\n              } else {\n                // in the middle\n                diff = t.items[startOrder].sampleDur + 1;\n                diff2 = t.items[startOrder + 1].sampleDur + 1;\n                t.items[startOrder - 1].sampleDur += diff + diff2;\n                t.items.splice(startOrder, 2);  //sServObj.lowerId(2);\t    \n              }\n            }\n          }\n        }\n      });\n      return ret;\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.insertSegment = function (name, start, end, newLabel, ids) {\n      var ret = true;\n      angular.forEach(sServObj.data.levels, function (level) {\n        if (level.name === name) {\n          if (start == end) {\n            if (level.items.length == 0) {\n              // if on an empty level\n              return {\n                ret: false,\n                ids: ids\n              };\n            } else {\n              // if not on an empty level\n              if (ids === undefined) {\n                ids = [];\n                ids[0] = sServObj.getNewId();\n              }\n              var startID = -1;\n              if (start < level.items[0].sampleStart) {\n                // before first segment\n                var diff = level.items[0].sampleStart - start;\n                sServObj.insertItemDetails(ids[0], name, 0, newLabel, start, diff - 1);\n              } else if (start > level.items[level.items.length - 1].sampleStart + level.items[level.items.length - 1].sampleDur) {\n                // after last segment\n                var newStart = level.items[level.items.length - 1].sampleStart + level.items[level.items.length - 1].sampleDur + 1;\n                sServObj.insertItemDetails(ids[0], name, level.items.length, newLabel, newStart, start - newStart);\n              } else {\n                angular.forEach(level.items, function (evt, id) {\n                  if (start >= evt.sampleStart && start <= evt.sampleStart + evt.sampleDur) {\n                    startID = id;\n                  }\n                  if (evt.sampleStart == start) {\n                    ret = false;\n                  }\n                  if (evt.sampleStart + evt.sampleDur + 1 == start) {\n                    ret = false;\n                  }\n                });\n                if (ret) {\n                  var diff = start - level.items[startID].sampleStart - 1;\n                  sServObj.insertItemDetails(ids[0], name, startID + 1, newLabel, start, level.items[startID].sampleDur - diff - 1);\n                  level.items[startID].sampleDur = diff;\n                }\n              }\n            }\n          } else {\n            if (ids === undefined) {\n              ids = [];\n              ids[0] = sServObj.getNewId();\n              ids[1] = sServObj.getNewId();\n            }\n            if (level.items.length == 0) {\n              // if on an empty level\n              sServObj.insertItemDetails(ids[0], name, 0, newLabel, start, end - start - 1);\n            } else {\n              // if not on an empty level\t\t\t\t\n              if (end < level.items[0].sampleStart) {\n                // before first segment\n                var diff = level.items[0].sampleStart - end - 1;\n                var diff2 = end - start - 1;\n                sServObj.insertItemDetails(ids[0], name, 0, newLabel, end, diff);\n                sServObj.insertItemDetails(ids[1], name, 0, newLabel, start, diff2);\n              } else if (start > level.items[level.items.length - 1].sampleStart + level.items[level.items.length - 1].sampleDur) {\n                // after last segment\n                var diff = start - (level.items[level.items.length - 1].sampleStart + level.items[level.items.length - 1].sampleDur) - 1;\n                var diff2 = end - start - 1;\n                var len = level.items.length;\n                sServObj.insertItemDetails(ids[0], name, len, newLabel, level.items[level.items.length - 1].sampleStart + level.items[level.items.length - 1].sampleDur, diff);\n                sServObj.insertItemDetails(ids[1], name, len + 1, newLabel, start, diff2);\n              } else {\n                // in the middle\t\t\t\n                var startID = -1;\n                var endID = -1;\n                angular.forEach(level.items, function (evt, id) {\n                  if (start >= evt.sampleStart && start <= evt.sampleStart + evt.sampleDur) {\n                    startID = id;\n                  }\n                  if (end >= evt.sampleStart && end <= evt.sampleStart + evt.sampleDur) {\n                    endID = id;\n                  }\n                });\n                ret = startID === endID;\n                if (ret && startID !== -1) {\n                  var diff = start - level.items[startID].sampleStart - 1;\n                  var diff2 = end - start - 1;\n                  sServObj.insertItemDetails(ids[0], name, startID + 1, newLabel, start, diff2);\n                  sServObj.insertItemDetails(ids[1], name, startID + 2, newLabel, end, level.items[startID].sampleDur - diff - 1 - diff2 - 1);\n                  level.items[startID].sampleDur = diff;\n                }\n              }\n            }\n          }\n        }\n      });\n      return {\n        ret: ret,\n        ids: ids\n      };\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.insertPoint = function (name, start, pointName, id) {\n      var ret = false;\n      var alreadyExists = false;\n      var pos = undefined;\n      angular.forEach(sServObj.data.levels, function (level) {\n        if (level.name === name && level.type === 'EVENT') {\n          var last = level.items[0].samplePoint;\n          angular.forEach(level.items, function (evt, order) {\n            if (Math.floor(start) === Math.floor(evt.samplePoint)) {\n              alreadyExists = true;\n            }\n            if (start > evt.samplePoint) {\n              pos = order + 1;\n            }\n          });\n        }\n      });\n      if (!alreadyExists) {\n        if (id === undefined) {\n          id = sServObj.getNewId();\n        }\n        sServObj.insertItemDetails(id, name, pos, pointName, start);\n      }\n      return {\n        alreadyExists: alreadyExists,\n        id: id\n      };\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.deletePoint = function (name, id) {\n      var ret = false;\n      angular.forEach(sServObj.data.levels, function (t) {\n        if (t.name === name && t.type == 'EVENT') {\n          var last = 0;\n          angular.forEach(t.items, function (evt, order) {\n            if (!ret) {\n              if (id == evt.id) {\n                ret = evt;\n                t.items.splice(order, 1);\n              }\n            }\n          });\n        }\n      });\n      return ret;\n    };\n    /**\n\t\t *   delete a single boundary between items\n\t\t *   @param toDelete\n\t\t *   @param name\n\t\t *   @param levelType\n\t\t */\n    sServObj.deleteBoundary = function (name, id, isFirst, isLast) {\n      var toDelete = sServObj.getItemFromLevelById(name, id);\n      var last = null;\n      var retOrder = null;\n      var retEvt = null;\n      var clickSeg = null;\n      angular.forEach(sServObj.data.levels, function (level) {\n        if (level.name === name) {\n          last = level.items[0];\n          angular.forEach(level.items, function (evt, order) {\n            if (level.type === 'SEGMENT') {\n              if (toDelete.sampleStart == evt.sampleStart && toDelete.sampleDur == evt.sampleDur) {\n                if (order === 0 && isFirst) {\n                  level.items.splice(order, 1);\n                  retOrder = order;\n                  retEvt = evt;\n                  clickSeg = level.items[0];\n                } else if (order === level.items.length - 1 && isLast) {\n                  level.items.splice(order, 1);\n                  retOrder = order;\n                  retEvt = evt;\n                  clickSeg = level.items[level.items.length - 1];\n                } else {\n                  last.labels[0].value += evt.labels[0].value;\n                  last.sampleDur += evt.sampleDur + 1;\n                  level.items.splice(order, 1);\n                  retOrder = order;\n                  retEvt = evt;\n                  clickSeg = last;\n                }\n              }\n            }\n            last = evt;\n          });\n          if (clickSeg == null) {\n            clickSeg = level.items[0];\n          }\n        }\n      });\n      return {\n        order: retOrder,\n        event: retEvt,\n        clickSeg: clickSeg\n      };\n    };\n    /**\n\t\t *   restore a single boundary between items\n\t\t *   @param toDelete\n\t\t *   @param name\n\t\t *   @param levelType\n\t\t */\n    sServObj.deleteBoundaryInvers = function (name, id, isFirst, isLast, deletedSegment) {\n      angular.forEach(sServObj.data.levels, function (level) {\n        if (level.name === name) {\n          level.items.splice(deletedSegment.order, 0, deletedSegment.event);\n          var oldName = deletedSegment.event.labels[0].value;\n          if (!isFirst && !isLast) {\n            oldName = level.items[deletedSegment.order - 1].labels[0].value.slice(0, level.items[deletedSegment.order - 1].labels[0].value.length - deletedSegment.event.labels[0].value.length);\n            level.items[deletedSegment.order - 1].labels[0].value = oldName;\n            level.items[deletedSegment.order - 1].sampleDur -= deletedSegment.event.sampleDur + 1;\n          }\n        }\n      });\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.snapBoundary = function (toTop, levelName, segment, neighbor, type) {\n      var neighTd;\n      var neighTdIdx;\n      var absMinDist = Infinity;\n      var absDist;\n      var minDist = undefined;\n      var sample;\n      var sampleTarget;\n      if (type == 'SEGMENT') {\n        sample = segment.sampleStart;\n      } else if (type == 'EVENT') {\n        sample = segment.samplePoint;\n      }\n      angular.forEach(sServObj.data.levels, function (thisTd, tIdx) {\n        if (thisTd.name === levelName) {\n          if (toTop) {\n            if (tIdx >= 1) {\n              neighTd = sServObj.data.levels[tIdx - 1];\n            } else {\n              return false;\n            }\n          } else {\n            if (tIdx < sServObj.data.levels.length - 1) {\n              neighTd = sServObj.data.levels[tIdx + 1];\n            } else {\n              return false;\n            }\n          }\n          neighTd.items.forEach(function (itm, order) {\n            if (neighTd.type == 'SEGMENT') {\n              sampleTarget = itm.sampleStart;\n            } else if (neighTd.type == 'EVENT') {\n              sampleTarget = itm.samplePoint;\n            }\n            absDist = Math.abs(sample - sampleTarget);\n            if (absDist < absMinDist) {\n              absMinDist = absDist;\n              minDist = sampleTarget - sample;\n            }\n          });\n        }\n      });\n      if (minDist !== undefined) {\n        if (type == 'SEGMENT') {\n          this.moveBoundary(levelName, segment.id, minDist, 0);\n        } else if (type == 'EVENT') {\n          this.movePoint(levelName, segment.id, minDist);\n        }\n        return minDist;\n      } else {\n        return false;\n      }\n    };\n    /**\n\t\t *  moves a boundary of a given segment\n\t\t *\n\t\t *  @param {string} name The name of the level in which the segment lies.\n\t\t *  @param {number} id The id of the segment.\n\t\t *  @param {number} changeTime The time to add or substract.\n\t\t *  @param {isFirst} if item is first\n\t\t *  @param {isLast} if item is last\n\t\t *\n\t\t */\n    sServObj.moveBoundary = function (levelName, id, changeTime, isFirst, isLast) {\n      var orig = sServObj.getItemFromLevelById(levelName, id);\n      var attrDefName = viewState.getCurAttrDef(levelName);\n      var labelIdx = getLabelIdx(attrDefName, orig.labels);\n      var ln = sServObj.getItemNeighboursFromLevel(levelName, id, id);\n      if (isFirst) {\n        // before first item\n        var origRight = ln.right;\n        if (origRight !== undefined) {\n          if (orig.sampleStart + changeTime >= 0 && orig.sampleStart + changeTime < origRight.sampleStart) {\n            sServObj.updateSegItemInLevel(levelName, orig.id, undefined, labelIdx, orig.sampleStart + changeTime, orig.sampleDur - changeTime);\n          }\n        } else {\n          if (orig.sampleStart + changeTime >= 0 && orig.sampleDur - changeTime >= 0 && orig.sampleStart + orig.sampleDur + changeTime <= Soundhandlerservice.wavJSO.Data.length) {\n            sServObj.updateSegItemInLevel(levelName, orig.id, undefined, labelIdx, orig.sampleStart + changeTime, orig.sampleDur - changeTime);\n          }\n        }\n      } else if (isLast) {\n        // after last item\n        if (orig.sampleDur + changeTime >= 0 && orig.sampleDur + orig.sampleStart + changeTime <= Soundhandlerservice.wavJSO.Data.length) {\n          sServObj.updateSegItemInLevel(levelName, orig.id, undefined, labelIdx, orig.sampleStart, orig.sampleDur + changeTime);\n        }\n      } else {\n        if (ln.left === undefined) {\n          var origRight = ln.right;\n          if (origRight !== undefined) {\n            if (orig.sampleStart + changeTime >= 0 && orig.sampleStart + changeTime < origRight.sampleStart) {\n              sServObj.updateSegItemInLevel(levelName, orig.id, undefined, labelIdx, orig.sampleStart + changeTime, orig.sampleDur - changeTime);\n            }\n          } else {\n            if (orig.sampleStart + changeTime >= 0 && orig.sampleStart + orig.sampleDur + changeTime <= Soundhandlerservice.wavJSO.Data.length) {\n              sServObj.updateSegItemInLevel(levelName, orig.id, undefined, labelIdx, orig.sampleStart + changeTime, orig.sampleDur - changeTime);\n            }\n          }\n        } else {\n          var origLeft = ln.left;\n          if (origLeft.sampleDur + changeTime >= 0 && orig.sampleStart + changeTime >= 0 && orig.sampleDur - changeTime >= 0) {\n            sServObj.updateSegItemInLevel(levelName, ln.left.id, undefined, labelIdx, origLeft.sampleStart, origLeft.sampleDur + changeTime);\n            sServObj.updateSegItemInLevel(levelName, orig.id, undefined, labelIdx, orig.sampleStart + changeTime, orig.sampleDur - changeTime);\n          }\n        }\n      }\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.movePoint = function (name, id, changeTime) {\n      var orig = sServObj.getItemFromLevelById(name, id);\n      if (orig.samplePoint + changeTime > 0 && orig.samplePoint + changeTime <= Soundhandlerservice.wavJSO.Data.length) {\n        sServObj.setPointDetails(name, orig.id, orig.labels[0].value, orig.samplePoint + changeTime);\n      }\n      //resort Points after moving\n      angular.forEach(sServObj.data.levels, function (t) {\n        if (t.name === name) {\n          t.items.sort(sServObj.orderPoints);\n        }\n      });\n    };\n    /**\n\t\t * reorder points on Event level after moving them. This is needed when Points are moved before or after each other\n\t\t *\n\t\t */\n    sServObj.orderPoints = function (a, b) {\n      //Compare \"a\" and \"b\" in some fashion, and return -1, 0, or 1\n      if (a.samplePoint > b.samplePoint)\n        return 1;\n      if (a.samplePoint < b.samplePoint)\n        return -1;\n      return 0;\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.moveSegment = function (name, id, length, changeTime) {\n      var firstOrder = sServObj.getOrderById(name, id);\n      var firstSegment = sServObj.getItemDetails(name, firstOrder);\n      var lastSegment = sServObj.getItemDetails(name, firstOrder + length - 1);\n      var lastNeighbours = sServObj.getItemNeighboursFromLevel(name, firstSegment.id, lastSegment.id);\n      var attrDefName = viewState.getCurAttrDef(name);\n      var labelIdx = getLabelIdx(attrDefName, firstSegment.labels);\n      if (lastNeighbours.left === undefined && lastNeighbours.right !== undefined) {\n        var right = sServObj.getItemFromLevelById(name, lastNeighbours.right.id);\n        if (firstSegment.sampleStart + changeTime > 0 && lastNeighbours.right.sampleDur - changeTime >= 0) {\n          sServObj.updateSegItemInLevel(name, right.id, undefined, labelIdx, right.sampleStart + changeTime, right.sampleDur - changeTime);\n          for (var i = firstOrder; i < firstOrder + length; i++) {\n            var orig = sServObj.getItemDetails(name, i);\n            sServObj.updateSegItemInLevel(name, orig.id, undefined, labelIdx, orig.sampleStart + changeTime, orig.sampleDur);\n          }\n        }\n      } else if (lastNeighbours.right === undefined && lastNeighbours.left !== undefined) {\n        var left = sServObj.getItemFromLevelById(name, lastNeighbours.left.id);\n        if (lastNeighbours.left.sampleDur + changeTime >= 0) {\n          if (lastSegment.sampleStart + lastSegment.sampleDur + changeTime < Soundhandlerservice.wavJSO.Data.length) {\n            sServObj.updateSegItemInLevel(name, left.id, undefined, labelIdx, left.sampleStart, left.sampleDur + changeTime);\n            for (var i = firstOrder; i < firstOrder + length; i++) {\n              var orig = sServObj.getItemDetails(name, i);\n              sServObj.updateSegItemInLevel(name, orig.id, undefined, labelIdx, orig.sampleStart + changeTime, orig.sampleDur);\n            }\n          }\n        }\n      } else if (lastNeighbours.right !== undefined && lastNeighbours.left !== undefined) {\n        var origLeft = sServObj.getItemFromLevelById(name, lastNeighbours.left.id);\n        var origRight = sServObj.getItemFromLevelById(name, lastNeighbours.right.id);\n        if (origLeft.sampleDur + changeTime >= 0 && origRight.sampleDur - changeTime >= 0) {\n          sServObj.updateSegItemInLevel(name, origLeft.id, undefined, labelIdx, origLeft.sampleStart, origLeft.sampleDur + changeTime);\n          sServObj.updateSegItemInLevel(name, origRight.id, undefined, labelIdx, origRight.sampleStart + changeTime, origRight.sampleDur - changeTime);\n          for (var i = firstOrder; i < firstOrder + length; i++) {\n            var orig = sServObj.getItemDetails(name, i);\n            sServObj.updateSegItemInLevel(name, orig.id, undefined, labelIdx, orig.sampleStart + changeTime, orig.sampleDur);\n          }\n        }\n      } else if (lastNeighbours.right === undefined && lastNeighbours.left === undefined) {\n        var first = sServObj.getItemDetails(name, firstOrder);\n        var last = sServObj.getItemDetails(name, firstOrder + length - 1);\n        if (first.sampleStart + changeTime > 0 && last.sampleDur + last.sampleStart + changeTime < Soundhandlerservice.wavJSO.Data.length) {\n          for (var i = firstOrder; i < firstOrder + length; i++) {\n            var orig = sServObj.getItemDetails(name, i);\n            sServObj.updateSegItemInLevel(name, orig.id, undefined, labelIdx, orig.sampleStart + changeTime, orig.sampleDur);\n          }\n        }\n      }\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.expandSegment = function (rightSide, segments, name, changeTime) {\n      var startTime = 0;\n      var neighbours = sServObj.getItemNeighboursFromLevel(name, segments[0].id, segments[segments.length - 1].id);\n      var segTime = changeTime * segments.length;\n      var attrDefName = viewState.getCurAttrDef(name);\n      var labelIdx = getLabelIdx(attrDefName, segments[0].labels);\n      var tempItem;\n      var allow = true;\n      if (rightSide) {\n        // if expand or shrink on RIGHT side\n        if (neighbours.right === undefined) {\n          // last element\n          var lastLength = segments[segments.length - 1].sampleStart + segments[segments.length - 1].sampleDur + changeTime * segments.length;\n          if (lastLength <= Soundhandlerservice.wavJSO.Data.length) {\n            angular.forEach(segments, function (seg) {\n              tempItem = sServObj.getItemFromLevelById(name, seg.id);\n              sServObj.updateSegItemInLevel(name, tempItem.id, undefined, labelIdx, tempItem.sampleStart + startTime, tempItem.sampleDur + changeTime);\n              startTime += changeTime;\n            });\n          }\n        } else {\n          angular.forEach(segments, function (seg) {\n            if (seg.sampleDur + 1 + changeTime < 0) {\n              allow = false;\n            }\n          });\n          if (allow && neighbours.right.sampleDur - changeTime * segments.length > 0) {\n            angular.forEach(segments, function (seg) {\n              tempItem = sServObj.getItemFromLevelById(name, seg.id);\n              sServObj.updateSegItemInLevel(name, tempItem.id, undefined, labelIdx, tempItem.sampleStart + startTime, tempItem.sampleDur + changeTime);\n              startTime += changeTime;\n            });\n            sServObj.updateSegItemInLevel(name, neighbours.right.id, undefined, labelIdx, neighbours.right.sampleStart + startTime, neighbours.right.sampleDur - startTime);\n          }\n        }\n      } else {\n        // if expand or shrink on LEFT side\n        if (neighbours.left === undefined) {\n          // first element\n          var first = sServObj.getItemDetails(name, 0);\n          if (first.sampleStart + changeTime * (segments.length + 1) > 0) {\n            angular.forEach(segments, function (seg) {\n              tempItem = sServObj.getItemFromLevelById(name, seg.id);\n              sServObj.updateSegItemInLevel(name, tempItem.id, undefined, tempItem.sampleStart - changeTime, labelIdx, tempItem.sampleDur + changeTime);\n            });\n          }\n        } else {\n          angular.forEach(segments, function (seg) {\n            if (seg.sampleDur + 1 + changeTime < 0) {\n              allow = false;\n            }\n          });\n          if (allow && neighbours.left.sampleDur - changeTime * segments.length > 0) {\n            startTime = 0;\n            angular.forEach(segments, function (seg, i) {\n              tempItem = sServObj.getItemFromLevelById(name, seg.id);\n              startTime = -(segments.length - i) * changeTime;\n              sServObj.updateSegItemInLevel(name, tempItem.id, undefined, labelIdx, tempItem.sampleStart + startTime, tempItem.sampleDur + changeTime);\n            });\n            sServObj.updateSegItemInLevel(name, neighbours.left.id, undefined, labelIdx, neighbours.left.sampleStart, neighbours.left.sampleDur - segments.length * changeTime);\n          }\n        }\n      }\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.calcDistanceToNearestZeroCrossing = function (sample) {\n      // walk right\n      var distRight;\n      for (var i = sample; i < Soundhandlerservice.wavJSO.Data.length - 1; i++) {\n        if (Soundhandlerservice.wavJSO.Data[i] >= 0 && Soundhandlerservice.wavJSO.Data[i + 1] < 0 || Soundhandlerservice.wavJSO.Data[i] < 0 && Soundhandlerservice.wavJSO.Data[i + 1] >= 0) {\n          distRight = i - sample;\n          break;\n        }\n      }\n      // walk left\n      var distLeft;\n      for (var i = sample; i > 1; i--) {\n        if (Soundhandlerservice.wavJSO.Data[i] >= 0 && Soundhandlerservice.wavJSO.Data[i - 1] < 0 || Soundhandlerservice.wavJSO.Data[i] < 0 && Soundhandlerservice.wavJSO.Data[i - 1] >= 0) {\n          distLeft = i - sample;\n          break;\n        }\n      }\n      var res;\n      if (Math.abs(distLeft) < Math.abs(distRight)) {\n        res = distLeft;\n      } else {\n        res = distRight + 1;\n      }\n      return res;\n    };\n    /**\n\t\t * get all labels (curAttr def applies) of a level and\n\t\t * return them as a flat array\n\t\t * @param levelName\n\t\t * @return array containing all labels (form==['x','y','z'])\n\t\t */\n    sServObj.getAllLabelsOfLevel = function (levelDetails) {\n      // console.log(levelDetails);\n      var curAttrDef = viewState.getCurAttrDef(levelDetails.level.name);\n      var labels = [];\n      for (var i = 0; i < levelDetails.level.items.length; i++) {\n        for (var j = 0; j < levelDetails.level.items[i].labels.length; j++) {\n          if (levelDetails.level.items[i].labels[j].name === curAttrDef) {\n            labels.push(levelDetails.level.items[i].labels[j].value);\n          }\n        }\n      }\n      return labels;\n    };\n    /////////////////////// handle hierarchy links (probably better in other service)/////////////////////\n    /**\n\t\t * adds links to sServObj.data.links \n\t\t * by pairing all childIds with the parent \n\t\t * id (form=={'fromID':parentID, 'toID':childId})\n\t\t */\n    sServObj.addLinkToParent = function (parentId, childIds) {\n      angular.forEach(childIds, function (chId) {\n        sServObj.data.links.push({\n          'fromID': parentId,\n          'toID': chId\n        });\n      });\n    };\n    /**\n\t\t * removes links from sServObj.data.links \n\t\t * that match the form {'fromID':parentID, 'toID':childId}\n\t\t */\n    sServObj.inverseAddLinkToParent = function (parentId, childIds) {\n      angular.forEach(sServObj.data.links, function (link, linkIdx) {\n        if (link.fromID === parentId && childIds.indexOf(link.toID) !== -1) {\n          sServObj.data.links.splice(linkIdx);\n        }\n        ;\n      });  // console.log(sServObj.data.links);\n    };\n    return sServObj;\n  }\n]);\n'use strict';\nangular.module('emuwebApp').service('Websockethandler', [\n  '$q',\n  '$rootScope',\n  '$location',\n  '$timeout',\n  'HistoryService',\n  'Ssffparserservice',\n  'ConfigProviderService',\n  'viewState',\n  'Wavparserservice',\n  'Soundhandlerservice',\n  'Espsparserservice',\n  'uuid',\n  'Binarydatamaniphelper',\n  'Ssffdataservice',\n  'dialogService',\n  function Websockethandler($q, $rootScope, $location, $timeout, HistoryService, Ssffparserservice, ConfigProviderService, viewState, Wavparserservice, Soundhandlerservice, Espsparserservice, uuid, Binarydatamaniphelper, Ssffdataservice, dialogService) {\n    // shared service object\n    var sServObj = {};\n    // Keep all pending requests here until they get responses\n    var callbacks = {};\n    // Create our websocket object with the address to the websocket\n    var ws = {};\n    // empty promise object to be resolved when connection is up\n    var conPromise = {};\n    var connected = false;\n    ////////////////////////////\n    // ws function\n    // broadcast on open\n    function wsonopen(message) {\n      connected = true;\n      $rootScope.$apply(conPromise.resolve(message));\n    }\n    function wsonmessage(message) {\n      listener(angular.fromJson(message.data));\n    }\n    function wsonerror(message) {\n      // console.log(message);\n      console.error('WEBSOCKET ERROR!!!!!');\n      $rootScope.$apply(conPromise.resolve(message));\n    }\n    function wsonclose(message) {\n      console.log(message);\n      if (!message.wasClean && connected) {\n        // show no clean disconnect error\n        dialogService.open('views/error.html', 'ModalCtrl', 'A non clean diconnect to the server occurred! This probably means that the server is down. Please check the server and reconnect!').then(function (argument) {\n          console.log('pushed cancel');\n          $rootScope.$broadcast('connectionDisrupted');\n        });\n      }\n      connected = false;\n      console.log('WEBSOCKET closed!!!!!');\n    }\n    function sendRequest(request) {\n      var defer = $q.defer();\n      var callbackId = getCallbackId();\n      callbacks[callbackId] = {\n        time: new Date(),\n        cb: defer\n      };\n      request.callbackID = callbackId;\n      ws.send(angular.toJson(request));\n      // timeout request if not answered\n      $timeout(function () {\n        var tOutResp = {\n            'callbackID': callbackId,\n            'status': {\n              'type': 'ERROR:TIMEOUT',\n              'message': 'Sent request of type: ' + request.type + ' timed out after ' + ConfigProviderService.vals.main.serverTimeoutInterval + 'ms!  Please check the server...'\n            }\n          };\n        listener(tOutResp);\n      }, ConfigProviderService.vals.main.serverTimeoutInterval);\n      return defer.promise;\n    }\n    function listener(data) {\n      var messageObj = data;\n      // console.log(\"Received data from websocket: \", messageObj);\n      // If an object exists with callbackID in our callbacks object, resolve it\n      if (callbacks.hasOwnProperty(messageObj.callbackID)) {\n        // console.log(callbacks[messageObj.callbackID]);\n        // console.log('resolving callback: ' + messageObj.type + ' Nr.: ' + messageObj.callbackID);\n        switch (messageObj.type) {\n        case 'getESPSfile':\n          handleReceivedESPS(messageObj.fileName, messageObj.data);\n          break;\n        case 'getSSFFfile':\n          alert('esps');\n          handleReceivedSSFF(messageObj.fileName, messageObj.data);\n          break;\n        }\n        // resolve promise with data only\n        if (messageObj.status.type === 'SUCCESS') {\n          $rootScope.$apply(callbacks[messageObj.callbackID].cb.resolve(messageObj.data));\n        } else {\n          // show protocol error and disconnect from server\n          dialogService.open('views/error.html', 'ModalCtrl', 'Communication error with server! Error message is: ' + messageObj.status.message);\n        }\n        delete callbacks[messageObj.callbackID];\n      } else {\n        if (messageObj.status.type === 'ERROR:TIMEOUT') {\n        } else {\n          dialogService.open('views/error.html', 'ModalCtrl', 'What just happened? You should not be here...');\n        }\n      }\n    }\n    // This creates a new callback ID for a request\n    function getCallbackId() {\n      var newUUID = uuid.new();\n      return newUUID;\n    }\n    ///////////////////////////////////////////\n    // public api\n    sServObj.initConnect = function (url) {\n      var defer = $q.defer();\n      ws = new WebSocket(url);\n      ws.onopen = wsonopen;\n      ws.onmessage = wsonmessage;\n      ws.onerror = wsonerror;\n      ws.onclose = wsonclose;\n      conPromise = defer;\n      return defer.promise;\n    };\n    //\n    sServObj.isConnected = function () {\n      return connected;\n    };\n    // close connection with ws\n    sServObj.closeConnect = function () {\n      ws.onclose = function () {\n      };\n      ws.close();\n    };\n    ////////////////////////////\n    // EMU-webApp protocol begins here\n    //\n    // ws getProtocol\n    sServObj.getProtocol = function () {\n      var request = { type: 'GETPROTOCOL' };\n      // Storing in a variable for clarity on what sendRequest returns\n      var promise = sendRequest(request);\n      return promise;\n    };\n    // ws getProtocol\n    sServObj.getDoUserManagement = function () {\n      var request = { type: 'GETDOUSERMANAGEMENT' };\n      // Storing in a variable for clarity on what sendRequest returns\n      var promise = sendRequest(request);\n      return promise;\n    };\n    // ws logOnUser\n    sServObj.logOnUser = function (name, pwd) {\n      var request = {\n          type: 'LOGONUSER',\n          userName: name,\n          pwd: pwd\n        };\n      // Storing in a variable for clarity on what sendRequest returns\n      var promise = sendRequest(request);\n      return promise;\n    };\n    // ws getConfigFile\n    sServObj.getDBconfigFile = function () {\n      var request = { type: 'GETGLOBALDBCONFIG' };\n      // Storing in a variable for clarity on what sendRequest returns\n      var promise = sendRequest(request);\n      return promise;\n    };\n    // ws getBundleList\n    sServObj.getBundleList = function () {\n      var request = { type: 'GETBUNDLELIST' };\n      // Storing in a variable for clarity on what sendRequest returns\n      var promise = sendRequest(request);\n      return promise;\n    };\n    // ws  getBundle\n    sServObj.getBundle = function (name) {\n      var request = {\n          type: 'GETBUNDLE',\n          name: name\n        };\n      // Storing in a variable for clarity on what sendRequest returns\n      var promise = sendRequest(request);\n      return promise;\n    };\n    // ws  saveBundle\n    sServObj.saveBundle = function (bundleData) {\n      var request = {\n          type: 'SAVEBUNDLE',\n          data: bundleData\n        };\n      // Storing in a variable for clarity on what sendRequest returns\n      var promise = sendRequest(request);\n      return promise;\n    };\n    // ws  disconnecting\n    sServObj.disconnectWarning = function () {\n      var request = { type: 'DISCONNECTWARNING' };\n      // Storing in a variable for clarity on what sendRequest returns\n      var promise = sendRequest(request);\n      return promise;\n    };\n    //\n    // EMU-webApp protocol ends here\n    ////////////////////////////\n    return sServObj;\n  }\n]);\n'use strict';\nangular.module('emuwebApp').controller('WsconnectionCtrl', [\n  '$scope',\n  'ConfigProviderService',\n  'Iohandlerservice',\n  'viewState',\n  'dialogService',\n  function ($scope, ConfigProviderService, Iohandlerservice, viewState, dialogService) {\n    $scope.serverInfos = {};\n    $scope.serverInfos.Url = ConfigProviderService.vals.main.serverUrl;\n    $scope.connectionError = '';\n    viewState.focusInTextField = true;\n    $scope.tryConnection = function () {\n      dialogService.close($scope.serverInfos.Url);\n    };\n    $scope.cancel = function () {\n      dialogService.close(false);\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').service('Binarydatamaniphelper', function Binarydatamaniphelper() {\n  // shared service object\n  var sServObj = {};\n  /**\n\t\t *\n\t\t */\n  sServObj.base64ToArrayBuffer = function (stringBase64) {\n    var binaryString = window.atob(stringBase64);\n    var len = binaryString.length;\n    var bytes = new Uint8Array(len);\n    for (var i = 0; i < len; i++) {\n      var ascii = binaryString.charCodeAt(i);\n      bytes[i] = ascii;\n    }\n    return bytes.buffer;\n  };\n  /**\n\t\t *\n\t\t */\n  sServObj.arrayBufferToBase64 = function (buffer) {\n    var binary = '';\n    var bytes = new Uint8Array(buffer);\n    var len = bytes.byteLength;\n    for (var i = 0; i < len; i++) {\n      binary += String.fromCharCode(bytes[i]);\n    }\n    return window.btoa(binary);\n  };\n  /**\n\t\t *\n\t\tsServObj.stringToArrayBuffer = function (str) {\n\t\t\tvar ab = new ArrayBuffer(str.length);\n\t\t\tvar view = new Uint8Array(ab);\n\t\t\tfor (var i = 0; i < str.length; ++i) {\n\t\t\t\tview[i] = str.charCodeAt(i);\n\t\t\t}\n\t\t\treturn ab;\n\t\t};\n\t\t */\n  return sServObj;\n});\n'use strict';\nangular.module('emuwebApp').service('dialogService', [\n  '$modal',\n  'viewState',\n  function dialogService($modal, viewState) {\n    // shared service object\n    var sServObj = {};\n    var modalInstance = {};\n    /**\n\t\t *\n\t\t */\n    sServObj.open = function (templatefile, argCtrl, passedIn) {\n      viewState.setState('modalShowing');\n      modalInstance = $modal.open({\n        backdrop: 'static',\n        keyboard: false,\n        templateUrl: templatefile,\n        controller: argCtrl,\n        resolve: {\n          passedInTxt: function () {\n            return passedIn;\n          },\n          passedInOpts: function () {\n            return passedIn;\n          }\n        }\n      });\n      return modalInstance.result;\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.openExport = function (templatefile, argCtrl, data, txt) {\n      viewState.setState('modalShowing');\n      modalInstance = $modal.open({\n        backdrop: 'static',\n        keyboard: false,\n        templateUrl: templatefile,\n        controller: argCtrl,\n        resolve: {\n          exportData: function () {\n            return data;\n          },\n          exportName: function () {\n            return txt;\n          }\n        }\n      });\n      return modalInstance.result;\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.close = function (res) {\n      viewState.focusInTextField = false;\n      viewState.setState(viewState.prevState);\n      modalInstance.close(res);\n    };\n    return sServObj;\n  }\n]);\n'use strict';\nangular.module('emuwebApp').controller('WaitCtrl', [\n  '$scope',\n  'viewState',\n  function ($scope, viewState) {\n    $scope.vs = viewState;\n  }\n]);\n'use strict';\nangular.module('emuwebApp').service('Appcachehandler', [\n  '$http',\n  'dialogService',\n  function Appcachehandler($http, dialogService) {\n    // shared service object\n    var sServObj = {};\n    var appCache = window.applicationCache;\n    // var cacheProperties = {\n    // \tfilesDownloaded: 0,\n    // \ttotalFiles: 0\n    // };\n    // function getTotalFiles() {\n    // \t// First, reset the total file count and download count.\n    // \tcacheProperties.filesDownloaded = 0;\n    // \tcacheProperties.totalFiles = 0;\n    // \t$http.get('manifest.appcache').success(function (content) {\n    // \t\t// console.log(content);\n    // \t\tcontent = content.replace(\n    // \t\t\tnew RegExp(\n    // \t\t\t\t'(NETWORK|FALLBACK):' +\n    // \t\t\t\t'((?!(NETWORK|FALLBACK|CACHE):)[\\\\w\\\\W]*)',\n    // \t\t\t\t'gi'\n    // \t\t\t),\n    // \t\t\t''\n    // \t\t);\n    // \t\t// Strip out all comments.\n    // \t\tcontent = content.replace(\n    // \t\t\tnew RegExp('#[^\\\\r\\\\n]*(\\\\r\\\\n?|\\\\n)', 'g'),\n    // \t\t\t''\n    // \t\t);\n    // \t\t// Strip out the cache manifest header and\n    // \t\t// trailing slashes.\n    // \t\tcontent = content.replace(\n    // \t\t\tnew RegExp('CACHE MANIFEST\\\\s*|\\\\s*$', 'g'),\n    // \t\t\t''\n    // \t\t);\n    // \t\t// Strip out extra line breaks and replace with\n    // \t\t// a hash sign that we can break on.\n    // \t\tcontent = content.replace(\n    // \t\t\tnew RegExp('[\\\\r\\\\n]+', 'g'),\n    // \t\t\t'#'\n    // \t\t);\n    // \t\t// Get the total number of files.\n    // \t\tvar totalFiles = content.split('#').length;\n    // \t\t// Store the total number of files. Here, we are\n    // \t\t// adding one for *THIS* file, which is cached\n    // \t\t// implicitly as it points to the manifest.\n    // \t\tcacheProperties.totalFiles = (totalFiles + 1);\n    // \t\t// console.log('##########################');\n    // \t\t// alert('INFO: appcache update of: ' + cacheProperties.totalFiles + ' files');\n    // \t});\n    // }\n    // function handleCheckingEvent(e) {\n    // \tconsole.log('###### handleCheckingEvent ##########');\n    // \tconsole.log(e);\n    // }\n    // function handleNoupdateEvent(e) {\n    // \tconsole.log('###### handleNoupdateEvent ##########');\n    // \tconsole.log(e);\n    // }\n    // function handleDownloadingEvent(e) {\n    // \tconsole.log('######## handleDownloadingEvent ##########');\n    // \tconsole.log(e);\n    // \tgetTotalFiles();\n    // }\n    // function handleProgressEvent(e) {\n    // \tconsole.log('###### handleProgressEvent ##########');\n    // \tconsole.log(e);\n    // }\n    /**\n\t\t *\n\t\t */\n    // function handleCachedEvent(e) {\n    // \tconsole.log('###### handleCachedEvent ##########');\n    // \tconsole.log(e);\n    // }\n    /**\n\t\t *\n\t\t */\n    function handleUpdatereadyEvent(e) {\n      console.log('###### handleUpdatereadyEvent ##########');\n      dialogService.open('views/confirmModal.html', 'ConfirmmodalCtrl', 'A new version of the EMU-WebApp is available and has already been downloaded and cached in your browser. Would you like to use it? CAUTION: A reload will delete all current changes... TIP: the next time you use the EMU-webApp you will automatically use the updated version)').then(function (res) {\n        if (res) {\n          appCache.swapCache();\n          window.location.reload();\n        }\n      });\n    }\n    // function handleObsoleteEvent(e) {\n    // \tconsole.log('###### handleObsoleteEvent ##########');\n    // \tconsole.log(e);\n    // }\n    // function handleErrorEvent(e) {\n    // \tconsole.log('###### handleErrorEvent ##########');\n    // \tconsole.log(e);\n    // }\n    // // bind evts\n    // // appCache.addEventListener('progress', handleProgressEvent, false);\n    // appCache.addEventListener('checking', handleCheckingEvent, false);\n    // appCache.addEventListener('noupdate', handleNoupdateEvent, false);\n    // appCache.addEventListener('downloading', handleDownloadingEvent, false);\n    // appCache.addEventListener('progress', handleProgressEvent, false);\n    // appCache.addEventListener('cached', handleCachedEvent, false);\n    appCache.addEventListener('updateready', handleUpdatereadyEvent, false);\n    // appCache.addEventListener('obsolete', handleObsoleteEvent, false);\n    // appCache.addEventListener('error', handleErrorEvent, false);\n    // /////////////////////////////////////////////////\n    // // public api\n    sServObj.checkForNewVersion = function () {\n      // console.log('check for new version');\n      if (appCache.status !== 0 && appCache.status !== 3) {\n        // uncached == 0 & downloading == 3\n        console.log('INFO: appCache.status: ' + appCache.status);\n        appCache.update();\n      }\n    };\n    return sServObj;\n  }\n]);\n'use strict';\nangular.module('emuwebApp').controller('AboutCtrl', [\n  '$scope',\n  'ConfigProviderService',\n  'dialogService',\n  function ($scope, ConfigProviderService, dialogService) {\n    $scope.cps = ConfigProviderService;\n    $scope.getStrRep = function (code) {\n      var str;\n      switch (code) {\n      case 8:\n        str = 'BACKSPACE';\n        break;\n      case 9:\n        str = 'TAB';\n        break;\n      case 13:\n        str = 'ENTER';\n        break;\n      case 16:\n        str = 'SHIFT';\n        break;\n      case 18:\n        str = 'ALT';\n        break;\n      case 32:\n        str = 'SPACE';\n        break;\n      case 37:\n        str = '\\u2190';\n        break;\n      case 39:\n        str = '\\u2192';\n        break;\n      case 38:\n        str = '\\u2191';\n        break;\n      case 40:\n        str = '\\u2193';\n        break;\n      case 42:\n        str = '+';\n        break;\n      case 43:\n        str = '+';\n        break;\n      case 45:\n        str = '-';\n        break;\n      case 95:\n        str = '-';\n        break;\n      default:\n        str = String.fromCharCode(code);\n      }\n      return str;\n    };\n    $scope.cancel = function () {\n      dialogService.close();\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').controller('spectSettingsCtrl', [\n  '$scope',\n  'dialogService',\n  'viewState',\n  'LevelService',\n  function ($scope, dialogService, viewState, LevelService) {\n    $scope.vs = viewState;\n    $scope.options = Object.keys($scope.vs.getWindowFunctions());\n    $scope.selWindowInfo = {};\n    $scope.selWindowInfo.name = Object.keys($scope.vs.getWindowFunctions())[$scope.vs.spectroSettings.window - 1];\n    // console.log(Object.keys($scope.vs.getWindowFunctions())[$scope.vs.spectroSettings.window - 1]);\n    $scope.windowLengths = [\n      32,\n      64,\n      128,\n      256,\n      512,\n      1024,\n      2048\n    ];\n    $scope.modalVals = {\n      'rangeFrom': $scope.vs.spectroSettings.rangeFrom,\n      'rangeTo': $scope.vs.spectroSettings.rangeTo,\n      'dynamicRange': $scope.vs.spectroSettings.dynamicRange,\n      'windowLength': $scope.vs.spectroSettings.windowLength,\n      'window': $scope.vs.spectroSettings.window,\n      'drawHeatMapColors': $scope.vs.spectroSettings.drawHeatMapColors,\n      'preEmphasisFilterFactor': $scope.vs.spectroSettings.preEmphasisFilterFactor,\n      'heatMapColorAnchors': viewState.spectroSettings.heatMapColorAnchors\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.cursorInTextField = function () {\n      viewState.focusInTextField = true;\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.cursorOutOfTextField = function () {\n      viewState.focusInTextField = false;\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.getColorOfAnchor = function (anchorNr) {\n      var curStyle = {\n          'background-color': 'rgb(' + $scope.modalVals.heatMapColorAnchors[anchorNr][0] + ',' + $scope.modalVals.heatMapColorAnchors[anchorNr][1] + ',' + $scope.modalVals.heatMapColorAnchors[anchorNr][2] + ')',\n          'width': '10px',\n          'height': '10px'\n        };\n      return curStyle;\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.saveSpectroSettings = function () {\n      if ($scope.modalVals.dynamicRange % 1 === 0) {\n        if ($scope.modalVals.rangeFrom % 1 === 0) {\n          if ($scope.modalVals.rangeTo % 1 === 0) {\n            if ($scope.modalVals.rangeFrom >= 0) {\n              if ($scope.modalVals.rangeTo <= LevelService.data.sampleRate / 2) {\n                viewState.setspectroSettings($scope.modalVals.windowLength, $scope.modalVals.rangeFrom, $scope.modalVals.rangeTo, $scope.modalVals.dynamicRange, $scope.selWindowInfo.name, $scope.modalVals.drawHeatMapColors, $scope.modalVals.preEmphasisFilterFactor, $scope.modalVals.heatMapColorAnchors);\n                $scope.cancel();\n              } else {\n                $scope.error('View Range (Hz) upper boundary is a value bigger than ' + LevelService.data.sampleRate / 2);\n              }\n            } else {\n              $scope.error('View Range (Hz) lower boundary is a value below zero');\n            }\n          } else {\n            $scope.error('View Range (Hz) upper boundary has to be an Integer value.');\n          }\n        } else {\n          $scope.error('View Range (Hz) lower boundary has to be an Integer value.');\n        }\n      } else {\n        $scope.error('Dynamic Range has to be an Integer value.');\n      }\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.error = function (errorMsg) {\n      dialogService.close();\n      dialogService.open('views/error.html', 'ModalCtrl', 'Sorry: ' + errorMsg);\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.cancel = function () {\n      dialogService.close();\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').controller('ConfirmmodalCtrl', [\n  '$scope',\n  'dialogService',\n  'passedInTxt',\n  function ($scope, dialogService, passedInTxt) {\n    $scope.passedInTxt = passedInTxt;\n    $scope.confirm = function () {\n      dialogService.close(true);\n    };\n    $scope.cancel = function () {\n      dialogService.close(false);\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').controller('SelectThresholdModalCtrl', [\n  '$scope',\n  'dialogService',\n  'passedInOpts',\n  'ArrayHelperService',\n  function ($scope, dialogService, passedInOpts, ArrayHelperService) {\n    $scope.passedInOpts = passedInOpts;\n    $scope.myData = ArrayHelperService.convertArrayToXYjsoArray(passedInOpts.y);\n    $scope.select = function (idx) {\n      dialogService.close(idx);\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').controller('SelectLabelModalCtrl', [\n  '$scope',\n  'dialogService',\n  'passedInOpts',\n  'ArrayHelperService',\n  function ($scope, dialogService, passedInOpts, ArrayHelperService) {\n    $scope.passedInOpts = passedInOpts;\n    $scope.select = function (idx) {\n      dialogService.close(idx);\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').filter('regex', function () {\n  return function (input, regex) {\n    var patt = new RegExp(regex.toLowerCase());\n    var out = [];\n    for (var i = 0; i < input.length; i++) {\n      if (patt.test(input[i].name.toLowerCase())) {\n        out.push(input[i]);\n      }\n    }\n    return out;\n  };\n});\n'use strict';\nangular.module('emuwebApp').filter('levelsFilter', [\n  'ConfigProviderService',\n  'viewState',\n  function (ConfigProviderService, viewState) {\n    return function (input) {\n      if (input) {\n        var patt1 = new RegExp('SEGMENT');\n        var patt2 = new RegExp('EVENT');\n        var out = [];\n        var idx;\n        for (var i = 0; i < input.length; i++) {\n          if (patt1.test(input[i].type) || patt2.test(input[i].type)) {\n            if (ConfigProviderService.vals.perspectives[viewState.curPerspectiveIdx].levelCanvases !== undefined) {\n              idx = ConfigProviderService.vals.perspectives[viewState.curPerspectiveIdx].levelCanvases.order.indexOf(input[i].name);\n              if (idx !== -1) {\n                out[idx] = input[i];\n              }\n            }\n          }\n        }\n        // console.log(out)\n        return out;\n      }\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').controller('ModalCtrl', [\n  '$scope',\n  'dialogService',\n  'passedInTxt',\n  'viewState',\n  'LevelService',\n  'HistoryService',\n  function ($scope, dialogService, passedInTxt, viewState, LevelService, HistoryService) {\n    $scope.passedInTxt = passedInTxt;\n    $scope.passedOutTxt = { 'var': null };\n    $scope.cancel = function () {\n      dialogService.close();\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.cursorInTextField = function () {\n      viewState.focusInTextField = true;\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.cursorOutOfTextField = function () {\n      viewState.focusInTextField = false;\n    };\n    /**\n\t\t *  Save changes made on SSFF\n\t\t */\n    $scope.saveChanges = function (name) {\n      dialogService.close('saveChanges');\n    };\n    /**\n\t\t *  Save changes made on SSFF\n\t\t */\n    $scope.discardChanges = function (name) {\n      dialogService.close('discardChanges');\n    };\n    /**\n\t\t *  Rename a level\n\t\t */\n    $scope.renameLevel = function () {\n      LevelService.renameLevel($scope.passedInTxt, $scope.passedOutTxt.var, viewState.curPerspectiveIdx);\n      HistoryService.addObjToUndoStack({\n        'type': 'ESPS',\n        'action': 'RENAMELEVEL',\n        'newname': $scope.passedOutTxt.var,\n        'name': $scope.passedInTxt,\n        'curPerspectiveIdx': viewState.curPerspectiveIdx\n      });\n      dialogService.close();\n    };\n    /**\n\t\t *  Delete a complete level from LevelService\n\t\t */\n    $scope.deleteLevel = function () {\n      var lvl = LevelService.getLevelDetails(viewState.getcurClickLevelName());\n      LevelService.deleteLevel(viewState.getcurClickLevelIndex(), viewState.curPerspectiveIdx);\n      HistoryService.addObjToUndoStack({\n        'type': 'ESPS',\n        'action': 'DELETELEVEL',\n        'level': lvl.level,\n        'id': viewState.getcurClickLevelIndex(),\n        'curPerspectiveIdx': viewState.curPerspectiveIdx\n      });\n      dialogService.close();\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').directive('showMenu', [\n  '$animate',\n  function ($animate) {\n    return {\n      restrict: 'A',\n      link: function postLink(scope, element, attrs) {\n        scope.$watch(attrs.showMenu, function (newVal) {\n          if (newVal) {\n            $animate.addClass(element, 'emuwebapp-expandWidthTo200px');\n          } else {\n            $animate.removeClass(element, 'emuwebapp-expandWidthTo200px');\n            $animate.addClass(element, 'emuwebapp-shrinkWidthTo0px');\n          }\n        });\n      }\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').directive('showTwod', [\n  '$animate',\n  function ($animate) {\n    return {\n      restrict: 'A',\n      link: function postLink(scope, element, attrs) {\n        scope.$watch(attrs.showTwod, function (newVal) {\n          if (newVal) {\n            $animate.addClass(element, '.slideIn2dCanvases');\n          } else {\n            $animate.removeClass(element, '.slideIn2dCanvases');\n          }\n        });\n      }\n    };\n  }\n]);\n// simple animation to add slideLeft class\nangular.module('emuwebApp').animation('.slideIn2dCanvases', function () {\n  return {\n    addClass: function (element, className) {\n      element.addClass('slide2dCanvases');\n    },\n    removeClass: function (element, className) {\n      element.removeClass('slide2dCanvases');\n    }\n  };\n});\nangular.module('emuwebApp').directive('bgSplitter', [\n  '$rootScope',\n  'viewState',\n  function ($rootScope, viewState) {\n    return {\n      restrict: 'E',\n      replace: true,\n      transclude: true,\n      scope: { showTwoDimCans: '@' },\n      template: '<div class=\"emuwebapp-split-panes vertical\" ng-transclude></div>',\n      controller: [\n        '$scope',\n        function ($scope) {\n          $scope.panes = [];\n          $scope.bottomRightResizePane;\n          this.addPane = function (pane) {\n            if ($scope.panes.length > 1)\n              throw 'splitters can only have two panes';\n            $scope.panes.push(pane);\n            return $scope.panes.length;\n          };\n          this.setBottomRightResizePane = function (pane) {\n            $scope.bottomRightResizePane = pane;\n          };\n        }\n      ],\n      link: function (scope, element, attrs) {\n        var dragBottomRightResizePaneTopResizer = false;\n        var dragBottomRightResizePaneLeftResizer = false;\n        var dragBottomRightResizePaneCornerResizer = false;\n        // create split pane view\n        var handler = angular.element('<div class=\"emuwebapp-split-handler\"><span></span></div>');\n        var pane1 = scope.panes[0];\n        var pane2 = scope.panes[1];\n        var pane3 = scope.bottomRightResizePane;\n        var bottomRightResizePaneTopResizer = angular.element('<div class=\"emuwebapp-bottomRightResizePaneTopResizer\"></div>');\n        var bottomRightResizePaneLeftResizer = angular.element('<div class=\"emuwebapp-bottomRightResizePaneLeftResizer\"></div>');\n        var bottomRightResizePaneCornerResizer = angular.element('<div class=\"emuwebapp-bottomRightResizePaneCornerResizer\"></div>');\n        pane3.elem.prepend(bottomRightResizePaneLeftResizer);\n        pane3.elem.prepend(bottomRightResizePaneTopResizer);\n        pane3.elem.prepend(bottomRightResizePaneCornerResizer);\n        var pane1Min = pane1.minSize || 0;\n        var pane2Min = pane2.minSize || 0;\n        var dragSplitPaneResizer = false;\n        var drag = false;\n        pane1.elem.after(handler);\n        attrs.$observe('showTwoDimCans', function (val) {\n          if (val === 'false') {\n            scope.bottomRightResizePane.elem.hide();\n          } else {\n            scope.bottomRightResizePane.elem.show();\n          }\n        });\n        ////////////////////\n        // bindings\n        element.bind('mousemove', function (ev) {\n          if (!drag)\n            return;\n          var bounds = element[0].getBoundingClientRect();\n          var pos = 0;\n          if (dragSplitPaneResizer) {\n            var height = bounds.bottom - bounds.top;\n            pos = ev.clientY - bounds.top;\n            // perc = pos/height * 100;\n            // console.log(perc);\n            if (pos < pane1Min)\n              return;\n            if (height - pos < pane2Min)\n              return;\n            handler.css('top', pos + 'px');\n            pane1.elem.css('height', pos + 'px');\n            pane2.elem.css('top', pos + 'px');\n            viewState.setdragBarHeight(pos);\n          }\n          if (dragBottomRightResizePaneTopResizer) {\n            var height = bounds.bottom - bounds.top;\n            pos = ev.clientY - bounds.top;\n            if (pos <= 10 || height - pos <= 10) {\n              return;\n            }\n            pane3.elem.css('top', pos + 'px');\n            var tmp = height - pos;\n            pane3.elem.css('height', tmp + 'px');\n          }\n          if (dragBottomRightResizePaneLeftResizer) {\n            var width = bounds.right - bounds.left;\n            pos = ev.clientX - bounds.left;\n            if (pos <= 10 || width - pos <= 10) {\n              return;\n            }\n            pane3.elem.css('left', pos + 'px');\n            var tmp = width - pos;\n            pane3.elem.css('width', tmp + 'px');\n          }\n          if (dragBottomRightResizePaneCornerResizer) {\n            // do height and top\n            var height = bounds.bottom - bounds.top;\n            pos = ev.clientY - bounds.top;\n            if (pos <= 10 || height - pos <= 10) {\n              return;\n            }\n            pane3.elem.css('top', pos + 'px');\n            var tmp = height - pos;\n            pane3.elem.css('height', tmp + 'px');\n            // do width and left\n            var width = bounds.right - bounds.left;\n            pos = ev.clientX - bounds.left;\n            if (pos <= 10 || width - pos <= 10) {\n              return;\n            }\n            pane3.elem.css('left', pos + 'px');\n            var tmp = width - pos;\n            pane3.elem.css('width', tmp + 'px');\n          }\n        });\n        handler.bind('mousedown', function (ev) {\n          ev.preventDefault();\n          drag = true;\n          dragSplitPaneResizer = true;\n          viewState.setdragBarActive(true);\n          $rootScope.$digest();\n        });\n        bottomRightResizePaneTopResizer.bind('mousedown', function (ev) {\n          ev.preventDefault();\n          drag = true;\n          dragBottomRightResizePaneTopResizer = true;\n          viewState.setdragBarActive(true);\n          $rootScope.$digest();\n        });\n        bottomRightResizePaneLeftResizer.bind('mousedown', function (ev) {\n          ev.preventDefault();\n          drag = true;\n          dragBottomRightResizePaneLeftResizer = true;\n          viewState.setdragBarActive(true);\n          $rootScope.$digest();\n        });\n        bottomRightResizePaneCornerResizer.bind('mousedown', function (ev) {\n          ev.preventDefault();\n          drag = true;\n          dragBottomRightResizePaneCornerResizer = true;\n          viewState.setdragBarActive(true);\n          $rootScope.$digest();\n        });\n        angular.element(document).bind('mouseup', function (ev) {\n          drag = false;\n          dragSplitPaneResizer = false;\n          dragBottomRightResizePaneTopResizer = false;\n          dragBottomRightResizePaneLeftResizer = false;\n          dragBottomRightResizePaneCornerResizer = false;\n          viewState.setdragBarActive(false);\n          $rootScope.$digest();\n        });\n      }\n    };\n  }\n]).directive('bgPane', function () {\n  return {\n    restrict: 'E',\n    require: '^bgSplitter',\n    replace: true,\n    transclude: true,\n    scope: {\n      minSize: '=',\n      type: '@',\n      showTwoDimCans: '@'\n    },\n    template: '<div class=\"{{typeclass}}\" ng-transclude></div>',\n    link: function (scope, element, attrs, bgSplitterCtrl) {\n      var newElement;\n      if (scope.type !== 'emuwebapp-bottomRightResizePane') {\n        scope.elem = element;\n        scope.index = bgSplitterCtrl.addPane(scope);\n        scope.typeclass = 'split-pane' + scope.index;\n      } else {\n        // element.toggleClass('alert-box alert')\n        // var twoDimCans = angular.element('<div class=\"bottomRightResizePane\"></div>');\n        // var bottomRightResizePaneTopResizer = angular.element('<div class=\"bottomRightResizePaneTopResizer\"></div>');\n        // var bottomRightResizePaneLeftResizer = angular.element('<div class=\"bottomRightResizePaneLeftResizer\"></div>');\n        // var bottomRightResizePaneCornerResizer = angular.element('<div class=\"bottomRightResizePaneCornerResizer\"></div>');\n        // element.prepend(bottomRightResizePaneLeftResizer);\n        // element.prepend(bottomRightResizePaneTopResizer);\n        // element.prepend(bottomRightResizePaneCornerResizer);\n        // element.append(twoDimCans);\n        scope.elem = element;\n        scope.index = 3;\n        scope.typeclass = 'emuwebapp-bottomRightResizePane';\n        bgSplitterCtrl.setBottomRightResizePane(scope);\n      }\n    }\n  };\n});\n'use strict';\nangular.module('emuwebApp').directive('ssffTrack', [\n  '$timeout',\n  'viewState',\n  'ConfigProviderService',\n  function ($timeout, viewState, ConfigProviderService) {\n    return {\n      templateUrl: 'views/ssffTrack.html',\n      restrict: 'E',\n      link: function postLink(scope, element, attrs) {\n        // select the needed DOM elements from the template\n        var canvasLength = element.find('canvas').length;\n        var ssffCanvas = element.find('canvas')[1];\n        var markupCanvas = element.find('canvas')[canvasLength - 1];\n        // var context = canvas0.getContext('2d');\n        var markupCtx = markupCanvas.getContext('2d');\n        var trackName;\n        attrs.$observe('trackName', function (val) {\n          if (val) {\n            trackName = val;\n          }\n        });\n        scope.order = attrs.order;\n        /////////////////////\n        // watches\n        // on broadcast msg from main ctrl openSubmenu refresh timeline\n        scope.$on('refreshTimeline', function () {\n          if (!$.isEmptyObject(scope.shs)) {\n            if (!$.isEmptyObject(scope.shs.wavJSO)) {\n              drawSsffTrackMarkup();\n            }\n          }\n        });\n        //\n        scope.$watch('vs.timelineSize', function () {\n          $timeout(scope.redraw, 10);\n        });\n        scope.$watch('vs.curViewPort', function () {\n          if (!$.isEmptyObject(scope.shs)) {\n            if (!$.isEmptyObject(scope.shs.wavJSO)) {\n              drawSsffTrackMarkup();\n            }\n          }\n        }, true);\n        scope.$watch('ssffds.data.length', function () {\n          if (!$.isEmptyObject(scope.shs)) {\n            if (!$.isEmptyObject(scope.shs.wavJSO)) {\n              drawSsffTrackMarkup();\n            }\n          }\n        }, true);\n        scope.$watch('vs.movingBoundary', function () {\n          if (!$.isEmptyObject(scope.shs)) {\n            if (!$.isEmptyObject(scope.shs.wavJSO)) {\n              drawSsffTrackMarkup();\n            }\n          }\n        }, true);\n        scope.$watch('vs.movingBoundarySample', function () {\n          if (!$.isEmptyObject(scope.shs)) {\n            if (!$.isEmptyObject(scope.shs.wavJSO)) {\n              drawSsffTrackMarkup();\n            }\n          }\n        }, true);\n        //\n        /////////////////////\n        scope.redraw = function () {\n          drawSsffTrackMarkup();\n        };\n        /**\n         *\n         */\n        function drawSsffTrackMarkup() {\n          if (!$.isEmptyObject(scope.ssffds.data)) {\n            if (scope.ssffds.data.length !== 0) {\n              markupCtx.clearRect(0, 0, markupCtx.canvas.width, markupCtx.canvas.height);\n              // draw moving boundary line if moving\n              scope.dhs.drawMovingBoundaryLine(markupCtx);\n              // draw current viewport selected\n              scope.dhs.drawCurViewPortSelected(markupCtx, false);\n              // draw min max an name of track\n              var tr = scope.cps.getSsffTrackConfig(trackName);\n              var col = scope.ssffds.getColumnOfTrack(tr.name, tr.columnName);\n              scope.dhs.drawMinMaxAndName(markupCtx, trackName, col._minVal, col._maxVal, 2);\n            }\n          }\n        }\n      }\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').directive('progressThing', [\n  '$animate',\n  function ($animate) {\n    return {\n      template: '<div class=\"emuwebapp-progressThing\">{{vs.somethingInProgressTxt}}</div>',\n      restrict: 'E',\n      replace: true,\n      link: function postLink(scope, element, attrs) {\n        // element.text('this is the progressThing directive');\n        attrs.$observe('showThing', function (newVal) {\n          if (newVal === 'true') {\n            // $animate.removeClass(element, 'hideProgressThing');\n            $animate.removeClass(element, 'emuwebapp-shrinkHeightTo0px');\n            $animate.addClass(element, 'emuwebapp-expandHeightTo20px');\n          } else {\n            // $animate.addClass(element, 'hideProgressThing');\n            $animate.removeClass(element, 'emuwebapp-expandHeightTo20px');\n            $animate.addClass(element, 'emuwebapp-shrinkHeightTo0px');\n          }\n        });\n      }\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').directive('epg', [\n  'viewState',\n  function (viewState) {\n    return {\n      template: '<div class=\"emuwebapp-twoDimCanvasContainer\"><canvas width=\"512\" height=\"512\"></canvas></div>',\n      restrict: 'E',\n      replace: true,\n      link: function postLink(scope, element, attrs) {\n        // element.text('this is the epg directive');\n        var canvas = element.find('canvas')[0];\n        var tr, col, sRaSt;\n        ////////////////////\n        // watches\n        scope.$watch('vs.curViewPort', function (newValue, oldValue) {\n          if (!$.isEmptyObject(scope.cps.vals)) {\n            if (!$.isEmptyObject(scope.ssffds.data)) {\n              if (scope.ssffds.data.length !== 0) {\n                if (oldValue.sS !== newValue.sS || oldValue.eS !== newValue.eS) {\n                  drawEpgGrid(scope);\n                }\n              }\n            }\n          }\n        }, true);\n        scope.$watch('vs.curMousePosSample', function (newValue, oldValue) {\n          if (!$.isEmptyObject(scope.cps.vals)) {\n            if (!$.isEmptyObject(scope.ssffds.data)) {\n              if (scope.ssffds.data.length !== 0) {\n                drawEpgGrid(scope);\n              }\n            }\n          }\n        }, true);\n        //\n        ////////////////////\n        /**\n\t\t\t\t * drawing method to drawEpgGrid\n\t\t\t\t */\n        function drawEpgGrid(scope) {\n          tr = scope.cps.getSsffTrackConfig('EPG');\n          // SIC SIC SIC hardcoded for now although it might stay that way because it only is allowed to draw epg data anyway\n          col = scope.ssffds.getColumnOfTrack(tr.name, tr.columnName);\n          sRaSt = scope.ssffds.getSampleRateAndStartTimeOfTrack(tr.name);\n          var ctx = canvas.getContext('2d');\n          ctx.clearRect(0, 0, canvas.width, canvas.height);\n          ctx.fillStyle = 'green';\n          ctx.strokeStyle = scope.cps.vals.colors.osciColor;\n          ctx.font = scope.cps.vals.font.fontPxSize + 'px' + ' ' + scope.cps.vals.font.fontType;\n          var gridWidth = canvas.width / 8;\n          var gridHeight = canvas.height / 8;\n          var sInterv = 1 / sRaSt.sampleRate - sRaSt.startTime;\n          var curFrame = Math.round(scope.vs.curMousePosSample / scope.shs.wavJSO.SampleRate / sInterv);\n          var binValStrArr;\n          angular.forEach(col.values[curFrame], function (el, elIdx) {\n            binValStrArr = el.toString(2).split('').reverse();\n            while (binValStrArr.length < 8) {\n              binValStrArr.push('0');\n            }\n            binValStrArr.forEach(function (binStr, binStrIdx) {\n              if (binStr === '1') {\n                ctx.fillStyle = 'grey';\n                ctx.fillRect(binStrIdx * gridWidth + 5, gridHeight * elIdx + 5, gridWidth - 10, gridHeight - 10);\n              } else {\n                ctx.fillStyle = 'white';\n                ctx.fillRect(binStrIdx * gridWidth + 5, gridHeight * elIdx + 5, gridWidth - 10, gridHeight - 10);\n              }\n            });\n          });\n          // draw labels\n          var horizontalText = scope.fontImage.getTextImageTwoLines(ctx, 'EPG', 'Frame:' + curFrame, scope.cps.vals.font.fontPxSize, scope.cps.vals.font.fontType, scope.cps.vals.colors.labelColor, true);\n          ctx.drawImage(horizontalText, 0, 0, horizontalText.width, horizontalText.height, 5, 0, horizontalText.width, horizontalText.height);\n        }\n      }\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').directive('dots', [\n  'viewState',\n  function (viewState) {\n    return {\n      template: '<div class=\"emuwebapp-twoDimCanvasContainer\"><canvas width=\"512\" height=\"512\"></canvas></div>',\n      restrict: 'E',\n      replace: true,\n      link: function postLink(scope, element, attrs) {\n        //element.text('this is the dots directive');\n        var canvas = element.find('canvas')[0];\n        var globalMinX = Infinity;\n        var globalMaxX = -Infinity;\n        var globalMinY = Infinity;\n        var globalMaxY = -Infinity;\n        var tr, col, sRaSt;\n        ////////////////////\n        // watches\n        //\n        scope.$watch('ssffds.data.length', function () {\n          if (!$.isEmptyObject(scope.cps.vals)) {\n            if (!$.isEmptyObject(scope.ssffds.data)) {\n              if (scope.ssffds.data.length !== 0) {\n                drawDots(scope);\n              }\n            }\n          }\n        }, true);\n        //\n        scope.$watch('vs.curViewPort', function (newValue, oldValue) {\n          if (!$.isEmptyObject(scope.cps.vals)) {\n            if (!$.isEmptyObject(scope.ssffds.data)) {\n              if (scope.ssffds.data.length !== 0) {\n                if (oldValue.sS !== newValue.sS || oldValue.eS !== newValue.eS) {\n                  drawDots(scope);\n                }\n              }\n            }\n          }\n        }, true);\n        //\n        scope.$watch('vs.curMousePosSample', function () {\n          if (!$.isEmptyObject(scope.cps.vals)) {\n            if (!$.isEmptyObject(scope.ssffds.data)) {\n              if (scope.ssffds.data.length !== 0) {\n                drawDots(scope);\n              }\n            }\n          }\n        }, true);\n        //\n        scope.$watch('vs.curPerspectiveIdx', function () {\n          globalMinX = Infinity;\n          globalMaxX = -Infinity;\n          globalMinY = Infinity;\n          globalMaxY = -Infinity;\n        }, true);\n        //\n        //////////////////\n        function setGlobalMinMaxVals() {\n          // body...\n          var dD = scope.cps.vals.perspectives[scope.vs.curPerspectiveIdx].twoDimCanvases.twoDimDrawingDefinitions[0];\n          // SIC SIC SIC hardcoded\n          for (var i = 0; i < dD.dots.length; i++) {\n            // get xCol\n            var trConf = scope.cps.getSsffTrackConfig(dD.dots[i].xSsffTrack);\n            var xCol = scope.ssffds.getColumnOfTrack(trConf.name, trConf.columnName);\n            if (xCol._minVal < globalMinX) {\n              globalMinX = xCol._minVal;\n            }\n            if (xCol._maxVal > globalMaxX) {\n              globalMaxX = xCol._maxVal;\n            }\n            // get yCol\n            trConf = scope.cps.getSsffTrackConfig(dD.dots[i].ySsffTrack);\n            var yCol = scope.ssffds.getColumnOfTrack(trConf.name, trConf.columnName);\n            if (yCol._minVal < globalMinY) {\n              globalMinY = yCol._minVal;\n            }\n            if (yCol._maxVal > globalMaxY) {\n              globalMaxY = yCol._maxVal;\n            }\n          }\n        }\n        function getScale(ctx, str, scale) {\n          return ctx.measureText(str).width * scale;\n        }\n        function getScaleWidth(ctx, str1, str2, scaleX) {\n          if (str1.toString().length > str2.toString().length) {\n            return getScale(ctx, str1, scaleX);\n          } else {\n            return getScale(ctx, str2, scaleX);\n          }\n        }\n        /**\n\t\t\t\t * drawing method to drawDots\n\t\t\t\t */\n        function drawDots() {\n          if (globalMinX === Infinity) {\n            setGlobalMinMaxVals();\n          }\n          var ctx = canvas.getContext('2d');\n          ctx.clearRect(0, 0, canvas.width, canvas.height);\n          //////////////////////////////\n          // markup to improve visualization \n          var scaleX = ctx.canvas.width / ctx.canvas.offsetWidth;\n          var scaleY = ctx.canvas.height / ctx.canvas.offsetHeight;\n          // draw corner pointers\n          ctx.beginPath();\n          ctx.moveTo(0, 0);\n          ctx.lineTo(5, 5);\n          ctx.moveTo(0, canvas.height);\n          ctx.lineTo(5, canvas.height - 5);\n          ctx.moveTo(canvas.width, canvas.height);\n          ctx.lineTo(canvas.width - 5, canvas.height - 5);\n          ctx.stroke();\n          ctx.closePath();\n          var smallFontSize = scope.cps.vals.font.fontPxSize * 3 / 4;\n          // ymax\n          var labelTxtImg = scope.fontImage.getTextImage(ctx, 'yMax: ' + scope.vs.round(globalMaxY, 2), smallFontSize, scope.cps.vals.font.fontType, scope.cps.vals.colors.endBoundaryColor);\n          ctx.drawImage(labelTxtImg, 5, 5, labelTxtImg.width, labelTxtImg.height);\n          // xmin + y min\n          labelTxtImg = scope.fontImage.getTextImageTwoLines(ctx, 'yMin: ' + scope.vs.round(globalMinY, 2), 'xMin: ' + scope.vs.round(globalMinX, 2), smallFontSize, scope.cps.vals.font.fontType, scope.cps.vals.colors.endBoundaryColor, true);\n          ctx.drawImage(labelTxtImg, 5, canvas.height - smallFontSize * scaleY * 2 - 5, labelTxtImg.width, labelTxtImg.height);\n          // xmax\n          var tw = ctx.measureText('xMax: ' + scope.vs.round(globalMaxX, 5)).width * scaleX;\n          // SIC why 5???\n          labelTxtImg = scope.fontImage.getTextImage(ctx, 'xMax: ' + scope.vs.round(globalMaxX, 2), smallFontSize, scope.cps.vals.font.fontType, scope.cps.vals.colors.endBoundaryColor);\n          ctx.drawImage(labelTxtImg, canvas.width - tw - 5, canvas.height - smallFontSize * scaleY - 5, labelTxtImg.width, labelTxtImg.height);\n          var dD = scope.cps.vals.perspectives[scope.vs.curPerspectiveIdx].twoDimCanvases.twoDimDrawingDefinitions[0];\n          // SIC SIC SIC hardcoded\n          // frame nr\n          var xsRaSt = scope.ssffds.getSampleRateAndStartTimeOfTrack(dD.dots[0].xSsffTrack);\n          // use first track for sample numbers\n          var ysRaSt = scope.ssffds.getSampleRateAndStartTimeOfTrack(dD.dots[0].ySsffTrack);\n          var sInterv = 1 / xsRaSt.sampleRate;\n          var curMousePosTime = scope.vs.curMousePosSample / scope.shs.wavJSO.SampleRate;\n          var curFrame;\n          if (xsRaSt.startTime === 1 / xsRaSt.sampleRate / 2) {\n            curFrame = Math.round(curMousePosTime * xsRaSt.sampleRate);\n          } else {\n            curFrame = Math.round(curMousePosTime * xsRaSt.sampleRate + (xsRaSt.startTime - 1 / xsRaSt.sampleRate / 2) * xsRaSt.sampleRate);\n          }\n          // check if due to math.round curFrame > col.length\n          var trConf = scope.cps.getSsffTrackConfig(dD.dots[0].xSsffTrack);\n          var xCol = scope.ssffds.getColumnOfTrack(trConf.name, trConf.columnName);\n          if (curFrame > xCol.values.length - 1) {\n            curFrame = xCol.values.length - 1;\n          }\n          tw = ctx.measureText('frame: ' + curFrame).width * scaleX;\n          labelTxtImg = scope.fontImage.getTextImage(ctx, 'frame: ' + curFrame, scope.cps.vals.font.fontPxSize - 4, scope.cps.vals.font.fontType, scope.cps.vals.colors.endBoundaryColor);\n          var degrees = 90;\n          ctx.save();\n          ctx.rotate(degrees * Math.PI / 180);\n          ctx.drawImage(labelTxtImg, canvas.width / 2 - tw / 2, -canvas.height);\n          ctx.restore();\n          //////////////////////////////\n          // draw dots\n          var allDots = [];\n          for (var i = 0; i < dD.dots.length; i++) {\n            // get xCol\n            var trConf = scope.cps.getSsffTrackConfig(dD.dots[i].xSsffTrack);\n            var xCol = scope.ssffds.getColumnOfTrack(trConf.name, trConf.columnName);\n            // get yCol\n            trConf = scope.cps.getSsffTrackConfig(dD.dots[i].ySsffTrack);\n            var yCol = scope.ssffds.getColumnOfTrack(trConf.name, trConf.columnName);\n            // check if x and why have the same amount of cols\n            if (xCol.values.length !== yCol.values.length) {\n              alert('columns do not have same length or length of one not 1');\n              return;\n            }\n            var xsRaSt = scope.ssffds.getSampleRateAndStartTimeOfTrack(dD.dots[i].xSsffTrack);\n            var ysRaSt = scope.ssffds.getSampleRateAndStartTimeOfTrack(dD.dots[i].ySsffTrack);\n            // check if sampleRate and startTime is the same\n            if (xsRaSt.sampleRate !== ysRaSt.sampleRate || xsRaSt.startSample !== ysRaSt.startSample) {\n              alert('xsRaSt.sampleRate !== ysRaSt.sampleRate || xsRaSt.startSample !== ysRaSt.startSample');\n              return;\n            }\n            var x = (xCol.values[curFrame][dD.dots[i].xContourNr] - globalMinX) / (globalMaxX - globalMinX) * canvas.width;\n            var y = canvas.height - (yCol.values[curFrame][dD.dots[i].yContourNr] - globalMinY) / (globalMaxY - globalMinY) * canvas.height;\n            var startPoint = Math.PI / 180 * 0;\n            var endPoint = Math.PI / 180 * 360;\n            ctx.strokeStyle = dD.dots[i].color;\n            ctx.beginPath();\n            ctx.arc(x, y, 20, startPoint, endPoint, true);\n            ctx.stroke();\n            ctx.closePath();\n            ctx.beginPath();\n            ctx.arc(x, y, 2, startPoint, endPoint, true);\n            ctx.fill();\n            ctx.closePath();\n            // draw labels\n            var labelTxtImg = scope.fontImage.getTextImage(ctx, dD.dots[i].name, scope.cps.vals.font.fontPxSize - 4, scope.cps.vals.font.fontType, scope.cps.vals.colors.labelColor);\n            ctx.drawImage(labelTxtImg, x, y - 5, labelTxtImg.width, labelTxtImg.height);\n            // append to all dots\n            allDots.push({\n              'name': dD.dots[i].name,\n              'x': x,\n              'y': y\n            });\n          }\n          var f, t;\n          dD.connectLines.forEach(function (c) {\n            allDots.forEach(function (d) {\n              if (d.name === c.fromDot) {\n                f = d;\n              }\n              if (d.name === c.toDot) {\n                t = d;\n              }\n            });\n            // draw line\n            ctx.strokeStyle = c.color;\n            ctx.beginPath();\n            ctx.moveTo(f.x, f.y);\n            ctx.lineTo(t.x, t.y);\n            ctx.stroke();\n            ctx.closePath();\n          });\n        }\n      }\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').directive('myDropZone', [\n  '$animate',\n  function ($animate) {\n    return {\n      templateUrl: 'views/myDropZone.html',\n      restrict: 'E',\n      link: function postLink(scope, element, attr) {\n        scope.dropDefault = 'Drop your files here or click here to open a file';\n        scope.dropErrorFileType = 'Error: Could not parse file. The following file types are supported: .WAV .TEXTGRID';\n        scope.dropErrorAPI = 'Sorry ! The File APIs are not fully supported in your browser.';\n        scope.dropNotAllowed = 'File is not allowed';\n        scope.dropAllowed = 'Drop files to start loading';\n        scope.dropParsingStarted = 'Parsing started';\n        scope.dropText = scope.dropDefault;\n        scope.dropClass = '';\n        function dragEnterLeave(evt) {\n          evt.preventDefault();\n          scope.$apply(function () {\n            scope.dropText = scope.dropDefault;\n            scope.dropClass = '';\n          });\n        }\n        function handleDragOver(evt) {\n          evt.preventDefault();\n          scope.$apply(function () {\n            scope.dropText = scope.dropAllowed;\n            scope.dropClass = 'over';\n          });\n        }\n        function dropFiles(evt) {\n          evt.stopPropagation();\n          evt.preventDefault();\n          scope.$apply(function () {\n            scope.dropText = scope.dropParsingStarted;\n            scope.dropClass = '';\n            if (window.File && window.FileReader && window.FileList && window.Blob) {\n              scope.dropText = scope.dropParsingStarted;\n              scope.dropClass = 'over';\n              if (evt.originalEvent !== undefined) {\n                if (scope.firefox) {\n                  var dt = evt.originalEvent.dataTransfer;\n                  var files = dt.files;\n                  var count = files.length;\n                  for (var i = 0; i < files.length; i++) {\n                    scope.traverseFileTreeFirefox(files[i]);\n                  }\n                } else {\n                  var items = evt.originalEvent.dataTransfer.items;\n                  for (var i = 0; i < items.length; i++) {\n                    var item = items[i].webkitGetAsEntry();\n                    if (item) {\n                      scope.traverseFileTreeChrome(item);\n                    }\n                  }\n                }\n              } else {\n                scope.dropText = scope.dropErrorFileType;\n                scope.dropClass = '';\n              }\n            } else {\n              scope.$parent.dials.open('views/error.html', 'ModalCtrl', scope.dropErrorAPI);\n              scope.dropText = $scope.dropDefault;\n            }\n          });\n        }\n        element.bind('drop', function (event) {\n          dropFiles(event);\n        });\n        element.bind('dragover', function (event) {\n          handleDragOver(event);\n        });\n        element.bind('dragenter', function (event) {\n          dragEnterLeave(event);\n        });\n        element.bind('dragleave', function (event) {\n          dragEnterLeave(event);\n        });\n        element.bind('click', function (event) {\n          element.context.children[0].children[1].click();\n        });\n      }\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').directive('myDropZoneInput', [\n  '$animate',\n  function ($animate) {\n    return {\n      templateUrl: 'views/myDropZoneInput.html',\n      restrict: 'E',\n      link: function postLink(scope, element, attr) {\n        scope.handler = false;\n        function handleFilesonChange() {\n          scope.handler = true;\n          var loadedFiles = element.context.children.fileDialog;\n          if (scope.firefox) {\n            for (var i = 0; i < loadedFiles.files.length; i++) {\n              var file = loadedFiles.files[i];\n              var extension = file.name.substr(file.name.lastIndexOf('.') + 1).toUpperCase();\n              if (extension === 'WAV' && file.type.match('audio/x-wav')) {\n                scope.wav = file;\n                scope.handleLocalFiles();\n              } else if (extension === 'TEXTGRID') {\n                scope.grid = file;\n              } else {\n                scope.other = file;\n              }\n            }\n          } else {\n            for (var i = 0; i < loadedFiles.files.length; i++) {\n              var file = loadedFiles.files[i];\n              var extension = file.name.substr(file.name.lastIndexOf('.') + 1).toUpperCase();\n              if (extension === 'WAV' && file.type.match('audio/wav')) {\n                scope.wav = file;\n                scope.handleLocalFiles();\n              } else if (extension === 'TEXTGRID') {\n                scope.grid = file;\n              } else {\n                scope.other = file;\n              }\n            }\n          }\n        }\n        element.bind('change', function (event) {\n          handleFilesonChange(event);\n        });\n        element.bind('click', function (event) {\n          var elem = angular.element('input');\n          if (elem[1] !== undefined) {\n            elem[1].click();\n          }\n        });\n      }\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').directive('emuwebapp', [\n  'viewState',\n  'Iohandlerservice',\n  'ConfigProviderService',\n  function (viewState, Iohandlerservice, ConfigProviderService) {\n    return {\n      templateUrl: 'views/emuwebapp.html',\n      restrict: 'E',\n      scope: {\n        audioGetUrl: '@',\n        labelGetUrl: '@',\n        labelType: '@'\n      },\n      link: function postLink(scope, element, attrs) {\n        ////////////////////////\n        // Bindings\n        element.bind('mouseenter', function (event) {\n          viewState.mouseInEmuWebApp = true;\n        });\n        element.bind('mouseleave', function (event) {\n          viewState.mouseInEmuWebApp = false;\n        });\n        ///////////////////////\n        // observe attrs\n        attrs.$observe('audioGetUrl', function (val) {\n          if (val !== undefined && val !== '') {\n            ConfigProviderService.embeddedVals.audioGetUrl = val;\n          }\n        });\n        attrs.$observe('labelGetUrl', function (val) {\n          if (val !== undefined && val !== '') {\n            ConfigProviderService.embeddedVals.labelGetUrl = val;\n          }\n        });\n        attrs.$observe('labelType', function (val) {\n          if (val !== undefined && val !== '') {\n            ConfigProviderService.embeddedVals.labelType = val;\n          }\n        });\n      }\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').service('Validationservice', [\n  '$http',\n  '$q',\n  function Validationservice($http, $q) {\n    //shared service object to be returned\n    var sServObj = {};\n    var schemasJsos = [];\n    var names = [\n        'annotationFileSchema',\n        'emuwebappConfigSchema',\n        'DBconfigFileSchema',\n        'bundleListSchema'\n      ];\n    /**\n\t\t *\n\t\t */\n    sServObj.loadSchemas = function () {\n      var proms = [];\n      angular.forEach(names, function (n) {\n        proms.push($http.get('schemaFiles/' + n + '.json'));\n      });\n      return $q.all(proms);\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.setSchemas = function (schemaArr) {\n      angular.forEach(schemaArr, function (s) {\n        schemasJsos.push({\n          name: s.config.url,\n          data: s.data\n        });\n      });\n    };\n    //.then(function (resp) {\n    // schemasJsos.push({\n    // \tname: n,\n    // \tdata: resp.data\n    // }, function (err) {\n    // \tconsole.error('Unable to load schemas!');\n    // \tconsole.error(err);\n    // });\n    /**\n\t\t *\n\t\t */\n    sServObj.validateJSO = function (schemaName, jso) {\n      var schema;\n      angular.forEach(schemasJsos, function (s) {\n        if (s.name === 'schemaFiles/' + schemaName + '.json') {\n          schema = s;\n        }\n      });\n      if (schema !== undefined && tv4.validate(jso, schema.data)) {\n        return true;\n      } else {\n        if (schema === undefined) {\n          return 'Schema: ' + schemaName + ' is currently undefined! This is probably due to a misnamed schema file on the server...';\n        } else {\n          return tv4.error;\n        }\n      }\n    };\n    return sServObj;\n  }\n]);\n'use strict';\nangular.module('emuwebApp').service('ArrayHelperService', [\n  '$q',\n  'dialogService',\n  function ArrayHelperService($q, dialogService) {\n    // shared service object\n    var sServObj = {};\n    var defer;\n    // defer promise obj\n    /**\n\t\t * convert values of array to max values\n\t\t *\n\t\t * @param arr array to convert\n\t\t * @returns array containing Math.abs() values\n\t\t */\n    sServObj.convertToAbsValues = function (arr) {\n      for (var i = 0; i < arr.length; i++) {\n        arr[i] = Math.abs(arr[i]);\n      }\n      return arr;\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.multiplyEachElement = function (arr, val) {\n      for (var i = 0; i < arr.length; i++) {\n        arr[i] = arr[i] * val;\n      }\n      return arr;\n    };\n    /**\n\t\t * find value between two points\n\t\t * by linearly interpolating them\n\t\t */\n    sServObj.interp2points = function (x0, y0, x1, y1, x) {\n      return y0 + (y1 - y0) * ((x - x0) / (x1 - x0));\n    };\n    /**\n\t\t * find min or maximum value in array\n\t\t *\n\t\t * @param arr array to search in\n\t\t * @param minOrMax string value either 'min' or 'max'\n\t\t * @returns object with attributes val and idx\n\t\t */\n    sServObj.findMinMax = function (arr, minOrMax) {\n      var val, idx;\n      if (minOrMax === 'min') {\n        val = Infinity;\n        for (var i = 0; i < arr.length; i++) {\n          if (arr[i] < val) {\n            val = arr[i];\n            idx = i;\n          }\n        }\n      } else if (minOrMax === 'max') {\n        val = -Infinity;\n        for (var i = 0; i < arr.length; i++) {\n          if (arr[i] > val) {\n            val = arr[i];\n            idx = i;\n          }\n        }\n      }\n      return {\n        'val': val,\n        'idx': idx\n      };\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.flattenArrayOfArray = function (arrOfArrs) {\n      var merged = [];\n      merged = merged.concat.apply(merged, arrOfArrs);\n      return merged;\n    };\n    /**\n\t\t * convert array to an array that contains\n\t\t * objects of the form {x: i, y:y[i]}\n\t\t */\n    sServObj.convertArrayToXYjsoArray = function (y) {\n      var xyArray = [];\n      for (var i = 0; i < y.length; i++) {\n        xyArray.push({\n          x: i,\n          y: y[i]\n        });\n      }\n      return xyArray;\n    };\n    return sServObj;\n  }\n]);\n'use strict';\nangular.module('emuwebApp').service('AnagestService', [\n  '$q',\n  '$log',\n  'viewState',\n  'LevelService',\n  'ConfigProviderService',\n  'Ssffdataservice',\n  'ArrayHelperService',\n  'dialogService',\n  'HistoryService',\n  function AnagestService($q, $log, viewState, LevelService, ConfigProviderService, Ssffdataservice, ArrayHelperService, dialogService, HistoryService) {\n    // shared service object\n    var sServObj = {};\n    // defer object \n    var defer;\n    /**\n\t\t *\n\t\t */\n    sServObj.insertAnagestEvents = function () {\n      var defer = $q.defer();\n      // precheck if there are items in selection\n      var itemInSel = viewState.getItemsInSelection(LevelService.data.levels);\n      if (itemInSel.length !== 0) {\n        dialogService.open('views/error.html', 'ModalCtrl', 'There are already events in the selected area! This is not permitted...').then(function () {\n          defer.reject();\n        });\n        return defer;\n      }\n      // vertical position signal\n      var trackName = ConfigProviderService.getLevelDefinition(viewState.getcurClickLevelName()).anagestConfig.verticalPosSsffTrackName;\n      var tr = ConfigProviderService.getSsffTrackConfig(trackName);\n      var col = Ssffdataservice.getColumnOfTrack(tr.name, tr.columnName);\n      var sRaSt = Ssffdataservice.getSampleRateAndStartTimeOfTrack(tr.name);\n      // velocity signal\n      var vTrackName = ConfigProviderService.getLevelDefinition(viewState.getcurClickLevelName()).anagestConfig.velocitySsffTrackName;\n      var vTr = ConfigProviderService.getSsffTrackConfig(vTrackName);\n      var vCol = Ssffdataservice.getColumnOfTrack(vTr.name, vTr.columnName);\n      var vSRaSt = Ssffdataservice.getSampleRateAndStartTimeOfTrack(vTr.name);\n      if (col.length !== 1 || vCol.length !== 1) {\n        dialogService.open('views/error.html', 'ModalCtrl', 'UPS... the column length of of one of the tracks is != 1 this means something is badly configured in the DB!!!').then(function () {\n          defer.reject();\n        });\n        return defer;\n      }\n      // flatten columns\n      var flatColVals = ArrayHelperService.flattenArrayOfArray(col.values);\n      var flatVcolVals = ArrayHelperService.flattenArrayOfArray(vCol.values);\n      /////////////////////////////////////////\n      var gdat = [\n          NaN,\n          NaN\n        ];\n      var vdat = [\n          NaN,\n          NaN\n        ];\n      var ndat = [\n          NaN,\n          NaN\n        ];\n      var cdat = [\n          NaN,\n          NaN\n        ];\n      // easiest way to handle non-tangential signals (and has no effect on tangential signals)\n      flatVcolVals = ArrayHelperService.convertToAbsValues(flatVcolVals);\n      // selected column samples\n      var startTimeSel = viewState.getSelectedStartTime();\n      var endTimeSel = viewState.getSelectedEndTime();\n      var colStartSampleNr = Math.round(startTimeSel * sRaSt.sampleRate + sRaSt.startTime);\n      var colEndSampleNr = Math.round(endTimeSel * sRaSt.sampleRate + sRaSt.startTime);\n      var nrOfSamples = colEndSampleNr - colStartSampleNr;\n      var selCol = flatColVals.slice(colStartSampleNr, colStartSampleNr + nrOfSamples);\n      var selVCol = flatVcolVals.slice(colStartSampleNr, colStartSampleNr + nrOfSamples);\n      ;\n      // maxConstr\n      var maxVerticalPos = ArrayHelperService.findMinMax(selCol, 'max');\n      cdat[0] = maxVerticalPos.idx;\n      // max vel before max constriction\n      var maxVelBeforeMaxConstr = ArrayHelperService.findMinMax(selVCol.slice(0, cdat[0] + 1), 'max');\n      vdat[0] = maxVelBeforeMaxConstr.idx;\n      // min vel before max vel\n      var minVelBeforeMaxVel = ArrayHelperService.findMinMax(selVCol.slice(0, vdat[0] + 1), 'min');\n      // gesture onset\n      $log.info('Looking for gesture onset');\n      sServObj.interactiveFindThresholds(selVCol.slice(0, vdat[0] + 1), minVelBeforeMaxVel.val, maxVelBeforeMaxConstr.val, ConfigProviderService.getLevelDefinition(viewState.getcurClickLevelName()).anagestConfig.threshold, 1, 'Looking for gesture onset').then(function (resp) {\n        // keyboard;\n        var on20 = resp;\n        gdat[0] = on20;\n        // min vel between max vel 1 and max constriction\n        var minVelBetwMaxVel1maxConstr = ArrayHelperService.findMinMax(selVCol.slice(vdat[0], cdat[0] + 1), 'min');\n        var minp = minVelBetwMaxVel1maxConstr.idx + vdat[0];\n        // nucleus onset\n        $log.info('Looking for nucleus onset');\n        sServObj.interactiveFindThresholds(selVCol.slice(vdat[0], minp + 1), minVelBetwMaxVel1maxConstr.val, maxVelBeforeMaxConstr.val, ConfigProviderService.getLevelDefinition(viewState.getcurClickLevelName()).anagestConfig.threshold, -1, 'Looking for nucleus onset').then(function (resp) {\n          var off20 = resp;\n          ndat[0] = off20 + vdat[0];\n          // max vel after max constriction\n          var maxVelAfterMaxConstr = ArrayHelperService.findMinMax(selVCol.slice(cdat[0]), 'max');\n          // max vel before max constriction\n          vdat[1] = maxVelAfterMaxConstr.idx + cdat[0];\n          // minimum between max constriction and max vel after constriction\n          var minBetwMaxConstrMaxVelConstr = ArrayHelperService.findMinMax(selVCol.slice(cdat[0], vdat[1] + 1), 'min');\n          minp = minBetwMaxConstrMaxVelConstr.idx + cdat[0];\n          // nucleus offset\n          $log.info('Looking for nucleus offset');\n          sServObj.interactiveFindThresholds(selVCol.slice(minp, vdat[1] + 1), minBetwMaxConstrMaxVelConstr.val, maxVelAfterMaxConstr.val, ConfigProviderService.getLevelDefinition(viewState.getcurClickLevelName()).anagestConfig.threshold, 1, 'Looking for nucleus offset').then(function (resp) {\n            var on20 = resp;\n            ndat[1] = on20 + minp;\n            // minimum velocity after max vel after constriction\n            var minVelAfterMaxVelAfterConstr = ArrayHelperService.findMinMax(selVCol.slice(vdat[1]), 'min');\n            minp = minVelAfterMaxVelAfterConstr.idx + vdat[1];\n            // gesture offset\n            $log.info('Looking for gesture offset');\n            sServObj.interactiveFindThresholds(selVCol.slice(vdat[1], minp + 1), minVelAfterMaxVelAfterConstr.val, maxVelAfterMaxConstr.val, ConfigProviderService.getLevelDefinition(viewState.getcurClickLevelName()).anagestConfig.threshold, -1, 'Looking for gesture offset').then(function (resp) {\n              var off20 = resp;\n              gdat[1] = off20 + vdat[1];\n              // insert points\n              // var insPoint;\n              var curLabel;\n              // console.log(gdat)\n              gdat[0] = Ssffdataservice.calculateSamplePosInVP(colStartSampleNr + gdat[0], sRaSt.sampleRate, sRaSt.startTime);\n              gdat[1] = Ssffdataservice.calculateSamplePosInVP(colStartSampleNr + gdat[1], sRaSt.sampleRate, sRaSt.startTime);\n              curLabel = ConfigProviderService.getLevelDefinition(viewState.getcurClickLevelName()).anagestConfig.gestureOnOffsetLabels[0];\n              var gdat0insPoint = LevelService.insertPoint(viewState.getcurClickLevelName(), gdat[0], curLabel);\n              HistoryService.updateCurChangeObj({\n                'type': 'ESPS',\n                'action': 'INSERTPOINT',\n                'name': viewState.getcurClickLevelName(),\n                'start': gdat[0],\n                'id': gdat0insPoint.id,\n                'pointName': curLabel\n              });\n              curLabel = ConfigProviderService.getLevelDefinition(viewState.getcurClickLevelName()).anagestConfig.gestureOnOffsetLabels[1];\n              var gdat1insPoint = LevelService.insertPoint(viewState.getcurClickLevelName(), gdat[1], curLabel);\n              HistoryService.updateCurChangeObj({\n                'type': 'ESPS',\n                'action': 'INSERTPOINT',\n                'name': viewState.getcurClickLevelName(),\n                'start': gdat[1],\n                'id': gdat1insPoint.id,\n                'pointName': curLabel\n              });\n              // console.log(vdat);\n              vdat[0] = Ssffdataservice.calculateSamplePosInVP(colStartSampleNr + vdat[0], sRaSt.sampleRate, sRaSt.startTime);\n              vdat[1] = Ssffdataservice.calculateSamplePosInVP(colStartSampleNr + vdat[1], sRaSt.sampleRate, sRaSt.startTime);\n              curLabel = ConfigProviderService.getLevelDefinition(viewState.getcurClickLevelName()).anagestConfig.maxVelocityOnOffsetLabels[0];\n              var vdat0insPoint = LevelService.insertPoint(viewState.getcurClickLevelName(), vdat[0], curLabel);\n              HistoryService.updateCurChangeObj({\n                'type': 'ESPS',\n                'action': 'INSERTPOINT',\n                'name': viewState.getcurClickLevelName(),\n                'start': vdat[0],\n                'id': vdat0insPoint.id,\n                'pointName': curLabel\n              });\n              curLabel = ConfigProviderService.getLevelDefinition(viewState.getcurClickLevelName()).anagestConfig.maxVelocityOnOffsetLabels[1];\n              var vdat1insPoint = LevelService.insertPoint(viewState.getcurClickLevelName(), vdat[1], curLabel);\n              HistoryService.updateCurChangeObj({\n                'type': 'ESPS',\n                'action': 'INSERTPOINT',\n                'name': viewState.getcurClickLevelName(),\n                'start': vdat[1],\n                'id': vdat1insPoint.id,\n                'pointName': curLabel\n              });\n              // console.log(ndat);\n              ndat[0] = Ssffdataservice.calculateSamplePosInVP(colStartSampleNr + ndat[0], sRaSt.sampleRate, sRaSt.startTime);\n              ndat[1] = Ssffdataservice.calculateSamplePosInVP(colStartSampleNr + ndat[1], sRaSt.sampleRate, sRaSt.startTime);\n              curLabel = ConfigProviderService.getLevelDefinition(viewState.getcurClickLevelName()).anagestConfig.constrictionPlateauBeginEndLabels[0];\n              var ndat0insPoint = LevelService.insertPoint(viewState.getcurClickLevelName(), ndat[0], curLabel);\n              HistoryService.updateCurChangeObj({\n                'type': 'ESPS',\n                'action': 'INSERTPOINT',\n                'name': viewState.getcurClickLevelName(),\n                'start': ndat[0],\n                'id': ndat0insPoint.id,\n                'pointName': curLabel\n              });\n              curLabel = ConfigProviderService.getLevelDefinition(viewState.getcurClickLevelName()).anagestConfig.constrictionPlateauBeginEndLabels[1];\n              var ndat1insPoint = LevelService.insertPoint(viewState.getcurClickLevelName(), ndat[1], curLabel);\n              HistoryService.updateCurChangeObj({\n                'type': 'ESPS',\n                'action': 'INSERTPOINT',\n                'name': viewState.getcurClickLevelName(),\n                'start': ndat[1],\n                'id': ndat1insPoint.id,\n                'pointName': curLabel\n              });\n              // console.log(cdat);\n              cdat[0] = Ssffdataservice.calculateSamplePosInVP(colStartSampleNr + cdat[0], sRaSt.sampleRate, sRaSt.startTime);\n              curLabel = ConfigProviderService.getLevelDefinition(viewState.getcurClickLevelName()).anagestConfig.maxConstrictionLabel;\n              var cdat0insPoint = LevelService.insertPoint(viewState.getcurClickLevelName(), cdat[0], curLabel);\n              HistoryService.updateCurChangeObj({\n                'type': 'ESPS',\n                'action': 'INSERTPOINT',\n                'name': viewState.getcurClickLevelName(),\n                'start': cdat[0],\n                'id': cdat0insPoint.id,\n                'pointName': curLabel\n              });\n              var linkLevelName = ConfigProviderService.getLevelDefinition(viewState.getcurClickLevelName()).anagestConfig.autoLinkLevelName;\n              var linkLevelDetails = LevelService.getLevelDetails(linkLevelName);\n              var linkLevelLabels = LevelService.getAllLabelsOfLevel(linkLevelDetails);\n              console.log(linkLevelLabels);\n              dialogService.open('views/SelectLabelModal.html', 'SelectLabelModalCtrl', linkLevelLabels).then(function (itemIdx) {\n                var childIDs = [\n                    gdat0insPoint.id,\n                    gdat1insPoint.id,\n                    vdat0insPoint.id,\n                    vdat1insPoint.id,\n                    ndat0insPoint.id,\n                    ndat1insPoint.id,\n                    cdat0insPoint.id\n                  ];\n                LevelService.addLinkToParent(linkLevelDetails.level.items[itemIdx].id, childIDs);\n                HistoryService.updateCurChangeObj({\n                  'type': 'ESPS',\n                  'action': 'LINKTOPARENT',\n                  'parentID': linkLevelDetails.level.items[itemIdx].id,\n                  'childIDs': childIDs\n                });\n                HistoryService.addCurChangeObjToUndoStack();\n              });\n              defer.resolve();\n            });\n          });\n        });\n      }, function () {\n        console.error('rejected duuuude!!!!');\n      });\n      return defer.promise;\n    };\n    /**\n\t\t * find threshold in array (an adapted reimplementation of findth.m by\n\t\t * Phil Hoole Version 17.6.2006)\n\t\t *\n\t\t * @param x\n\t\t * @param minVal\n\t\t * @param maxVal\n\t\t * @param threshold\n\t\t * @param direction\n\t\t * @param descriptions describes the task\n\t\t * @returns promise that resolves to threshold value\n\t\t */\n    sServObj.interactiveFindThresholds = function (x, minVal, maxVal, threshold, direction, description) {\n      // console.log('interactiveFindThresholds');\n      var thdat = minVal + (maxVal - minVal) * threshold;\n      var thdir = direction;\n      thdat = thdat * thdir;\n      var xx = ArrayHelperService.multiplyEachElement(x, thdir);\n      // handle positive/neg.\n      var lx = xx.length;\n      var xsh = xx.slice(1, lx);\n      var loguk = 0;\n      var higuk = lx - 1;\n      // console.log(lx);\n      // console.log(xx);\n      // console.log(xsh);\n      // console.log(loguk);\n      // console.log(higuk);\n      // vz=find((xsh>=thdat)&(xx(1:(lx-1))<thdat));\n      var vz = [];\n      for (var i = 0; i < xx.length; i++) {\n        if (xsh[i] >= thdat && xx[i] < thdat) {\n          vz.push(i);\n        }\n      }\n      // anavv=find(vz>=loguk & vz<=higuk);\n      var anavv = [];\n      for (var i = 0; i < vz.length; i++) {\n        if (vz[i] >= loguk && vz[i] <= higuk) {\n          anavv.push(i);\n        }\n      }\n      if (anavv.length > 1) {\n        defer = $q.defer();\n        var infos = {};\n        infos.description = description;\n        infos.options = [];\n        infos.y = xx;\n        infos.minVal = minVal;\n        infos.maxVal = maxVal;\n        infos.threshold = threshold;\n        for (var i = 0; i < vz.length; i++) {\n          infos.options.push({\n            'thresholdIdx': vz[i],\n            'thresholdValue': xx[i]\n          });\n        }\n        dialogService.open('views/SelectThresholdModal.html', 'SelectThresholdModalCtrl', infos).then(function (resp) {\n          var ap = vz[anavv[resp]];\n          // console.log('-----')\n          // console.log(xx[ap])\n          // console.log(xx[ap + 1])\n          // console.log(ap);\n          // console.log(ap + 1);\n          ap = ArrayHelperService.interp2points(xx[ap], ap, xx[ap + 1], ap + 1, thdat);\n          defer.resolve(ap);\n        });\n        return defer.promise;\n      } else if (anavv.length === 0) {\n        defer = $q.defer();\n        dialogService.open('views/error.html', 'ModalCtrl', 'Could not find any values that step over the threshold!!').then(function () {\n          defer.reject('Could not find any values that step over the threshold!!');\n        });\n        return defer.promise;\n      } else {\n        defer = $q.defer();\n        var ap = vz[anavv[0]];\n        ap = ArrayHelperService.interp2points(xx[ap], ap, xx[ap + 1], ap + 1, thdat);\n        defer.resolve(ap);\n        return defer.promise;\n      }\n    };\n    return sServObj;\n  }\n]);\n'use strict';\n/**\n * @ngdoc directive\n * @name emuWebAppApp.directive:lineChart\n * @description\n * # lineChart\n */\nangular.module('emuwebApp').directive('lineChart', function () {\n  return {\n    restrict: 'E',\n    scope: {\n      data: '=',\n      threshold: '='\n    },\n    link: function postLink(scope, element, attrs) {\n      //////////////////////\n      // watches \n      scope.$watch('data', function () {\n        scope.render(scope.data);\n      }, true);\n      //////////////////////\n      //Set margins, width, and height\n      var margin = {\n          top: 20,\n          right: 20,\n          bottom: 20,\n          left: 40\n        }, width = 400 - margin.left - margin.right, height = 200 - margin.top - margin.bottom;\n      //Create the d3 element and position it based on margins\n      var svg = d3.select(element[0]).append('svg').attr('width', width + margin.left + margin.right).attr('height', height + margin.top + margin.bottom).append('g').attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n      //Create the scales we need for the graph\n      var x = d3.scale.linear().range([\n          0,\n          width\n        ]);\n      var y = d3.scale.linear().range([\n          height,\n          0\n        ]);\n      //Create the axes we need for the graph\n      var xAxis = d3.svg.axis().scale(x).tickSize(5).tickSubdivide(true);\n      var yAxis = d3.svg.axis().scale(y).orient('left');\n      // line drawing function\n      var lineFunc = d3.svg.line().x(function (d) {\n          return x(d.x);\n        }).y(function (d) {\n          return y(d.y);\n        }).interpolate('linear');\n      /**\n\t\t\t\t *\n\t\t\t\t */\n      scope.render = function (data) {\n        //Set our scale's domains\n        // x.domain(data.map(function (d) {\n        // \treturn d.name;\n        // }));\n        // y.domain([0, d3.max(data, function (d) {\n        // \treturn d.count;\n        // })]);\n        x.domain([\n          d3.min(data, function (d) {\n            return d.x;\n          }),\n          d3.max(data, function (d) {\n            return d.x;\n          })\n        ]);\n        y.domain([\n          d3.min(data, function (d) {\n            return d.y;\n          }),\n          d3.max(data, function (d) {\n            return d.y;\n          })\n        ]);\n        //Remove the axes so we can draw updated ones\n        svg.selectAll('g.axis').remove();\n        //Render X axis\n        svg.append('g').attr('class', 'x axis').attr('transform', 'translate(0,' + height + ')').call(xAxis);\n        //Render Y axis\n        svg.append('g').attr('class', 'y axis').call(yAxis);\n        // Render path\n        var lines = svg.append('svg:path').attr('d', lineFunc(data)).attr('stroke', 'red').attr('stroke-width', 1).attr('fill', 'none');\n        // draw threshold SIC SIC SIC... not working yet!\n        svg.append('svg:line').attr('x1', 5).attr('y1', 5).attr('x2', 200).attr('y2', 200).attr('class', 'label-line');\n        var verticalLine = svg.append('line').attr({\n            'x1': x(scope.threshold),\n            'y1': 0,\n            'x2': x(scope.threshold),\n            'y2': height\n          }).attr('stroke', 'steelblue').attr('class', 'verticalLine');  //Create or update the bar data\n                                                                         // var bars = svg.selectAll('.bar').data(data);\n                                                                         // bars.enter()\n                                                                         // \t.append('rect')\n                                                                         // \t.attr('class', 'bar')\n                                                                         // \t.attr('x', function (d) {\n                                                                         // \t\treturn x(d.name);\n                                                                         // \t})\n                                                                         // \t.attr('width', x.rangeBand());\n                                                                         //Animate bars\n                                                                         // bars\n                                                                         // \t.transition()\n                                                                         // \t.duration(1000)\n                                                                         // \t.attr('height', function (d) {\n                                                                         // \t\treturn height - y(d.count);\n                                                                         // \t})\n                                                                         // \t.attr('y', function (d) {\n                                                                         // \t\treturn y(d.count);\n                                                                         // \t})\n      };\n    }\n  };\n});"]}