{"version":3,"file":"emuwebApp.min.js","sources":["emuwebApp.min.js"],"names":["ArrayBuffer","prototype","subarray","offset","length","sub","subView","Int8Array","thisView","this","i","angular","module","config","$locationProvider","html5Mode","service","viewState","sServObj","vals","curDbConfig","embeddedVals","audioGetUrl","labelGetUrl","labelType","fromUrlParams","setVals","data","$","isEmptyObject","forEach","Object","keys","key1","isArray","itm","push","key2","undefined","console","error","getSsffTrackConfig","name","res","ssffTrackDefinitions","tr","getLimsOfTrack","trackName","perspectives","curPerspectiveIdx","signalCanvases","contourLims","cL","ssffTrackName","getContourColorsOfTrack","contourColors","cC","getAssignment","signalName","assign","a","signalCanvasName","getLevelDefinition","levelName","levelDefinitions","ld","controller","$scope","$rootScope","$modal","$log","$compile","$timeout","$q","$window","$document","$location","HistoryService","Iohandlerservice","Soundhandlerservice","ConfigProviderService","fontScaleService","Ssffdataservice","LevelService","dialogService","Textgridparserservice","Espsparserservice","Binarydatamaniphelper","Wavparserservice","Ssffparserservice","Drawhelperservice","Validationservice","Appcachehandler","cps","hists","fontImage","levServ","vs","dials","ssffds","shs","dhs","wps","io","ach","connectBtnLabel","tmp","dbLoaded","is2dCancasesHidden","bundleList","curUserName","curBndl","lastclickedutt","filterText","windowWidth","outerWidth","demoDbName","firefox","navigator","userAgent","match","checkForNewVersion","element","bind","deleteEditArea","setWindowWidth","$digest","e","keyCode","keyMappings","shift","alt","addCurChangeObjToUndoStack","window","onbeforeunload","main","autoConnect","$on","resetToInitState","searchObject","search","loadFilesForEmbeddedApp","httpGetPath","then","showDropZone","substr","lastIndexOf","getsubmenuOpen","togglesubmenuOpen","colors","transitionTime","somethingInProgressTxt","resp","EMUwebAppConfig","validRes","validateJSO","catchMouseForKeyBinding","somethingInProgress","parseWavArrBuf","messWavParser","wavJSO","curViewPort","sS","eS","Data","resetSelect","data2","parseLabelFile","parseMess","annot","setData","lNames","levelDefs","levels","l","type","attributeDefinitions","setCurLevelAttrDefs","levelCanvases","order","setState","errMess","open","status","message","JSON","stringify","loadDefaultConfig","loadSchemas","replies","setSchemas","httpGetDefaultConfig","success","handleDefaultConfigLoaded","header","wsH","initConnect","serverUrl","defaultServerUrl","handleConnectedToWSserver","setspectroSettings","spectrogramSettings","N","rangeFrom","rangeTo","dynamicRange","drawHeatMapColors","preEmphasisFilterFactor","heatMapColorAnchors","setTransitionTime","comMode","getProtocol","protocol","version","getDoUserManagement","doUsrData","innerHandleConnectedToWSserver","getDBconfigFile","getBundleList","bdata","menuBundleClick","bndl","movesAwayFromLastSave","messModal","menuBundleSaveBtnClick","getBundle","bundleData","arrBuff","base64ToArrayBuffer","mediaFile","selectS","selectE","curClickSegments","curClickLevelName","curClickLevelType","asyncParseSsffArr","ssffFiles","ssffJso","annotation","getPermission","defer","formants","el","getAnnotationAndSaveBndl","asyncJso2ssff","messParser","encoding","arrayBufferToBase64","reject","promise","info","getData","saveBundle","resolve","uttIsDisabled","getEnlarge","index","len","large","getenlarge","getBndlColor","curColor","background-color","color","cursorInTextField","focusInTextField","cursorOutOfTextField","openSubmenu","addLevelSegBtnClick","newName","level","items","id","getNewId","sampleStart","sampleDur","labels","value","labelCanvasConfig","newSegmentName","getCurAttrDef","leveldef","addLevel","addObjToUndoStack","action","log","addLevelPointBtnClick","samplePoint","Math","round","newEventName","renameSelLevelBtnClick","getcurClickLevelName","downloadTextGridBtnClick","asyncToTextGrid","openExport","spectSettingsBtnClick","connectBtnClick","url","openDemoDBbtnClick","nameOfDB","err","aboutBtnClick","clearBtnClick","modalText","isConnected","disconnectWarning","closeConnect","$broadcast","cmdZoomAll","setViewPort","cmdZoomIn","zoomViewPort","cmdZoomOut","cmdZoomLeft","shiftViewPort","cmdZoomRight","cmdZoomSel","cmdPlayView","playFromTo","animatePlayHead","cmdPlaySel","cmdPlayAll","changePerspective","persp","newIdx","setRightsubmenuOpen","getRightsubmenuOpen","getPerspectiveColor","cl","newfiles","wav","grid","dropText","dropDefault","handleLocalFiles","$parent","reader","FileReader","readAsArrayBuffer","onloadend","evt","target","readyState","DONE","result","currentTarget","readAsText","extension","asyncParseTextGrid","traverseFileTreeChrome","item","path","isFile","file","toUpperCase","other","isDirectory","dirReader","createReader","readEntries","entries","traverseFileTreeFirefox","size","directive","$animate","templateUrl","restrict","scope","idx","link","attr","drawLevelDetails","levelDetails","fontSize","font","fontPxSize","curAttrDef","ctx","canvas","getContext","clearRect","width","height","sDist","posS","posE","horizontalText","getSampleDist","scaleY","offsetHeight","getTextImageTwoLines","fontType","labelColor","drawImage","curID","getcurMouseSegment","getcurClickSegments","mTxtImgWidth","getTextImage","getLastImageWidth","zeroTxtImgWidth","endBoundaryColor","fillStyle","startBoundaryColor","curEvt","curLabVal","lab","getPos","fillRect","tW","tX","labelCenter","hlY","strokeStyle","beginPath","moveTo","lineTo","stroke","toString","horizontalSubText1","horizontalSubText2","hst2","perc","drawLevelMarkup","selectedLevelColor","drawMovingBoundaryLine","drawCurViewPortSelected","xOffset","segMId","isFirst","getcurMouseisFirst","isLast","getcurMouseisLast","clickedSegs","levelId","cs","selectedSegmentColor","getcurMouseLevelName","selectedBoundaryColor","getcurMouseLevelType","find","levelCanvasContainer","levelDef","backgroundCanvas","background","levelColor","$watch","newValue","oldValue","changeCurAttrDef","attrDefName","setCurAttrDef","hasClass","addClass","finishedAnim","removeClass","getAttrDefBtnColor","updateView","setcurMouseSegment","replace","changeAttrDef","alert","attrs","drawPlayHead","markupCanvas","playHeadAnimationInfos","posCur","curS","selectedAreaColor","drawVpOsciMarkup","reset","drawViewPortTimes","canvasLength","redraw","allPeakVals","calculatePeaks","osciPeaks","freshRedrawDrawOsciOnCanvas","currentBundleName","drawPreview","initialized","selectedBorderColor","closePath","border","newVal","oldVal","ctxMarkup","submenuOpen","pcmpp","pcmperpixel","canvas0","drawSpectMarkup","markupCtx","canvas1","drawMinMaxAndName","spectroSettings","killSpectroRenderingThread","context","primeWorker","terminate","setupEvent","imageData","createImageData","addEventListener","event","myStep","Uint8ClampedArray","img","set","putImageData","drawSpectro","buffer","startSpectroRenderingThread","Worker","spectroWorker","parseData","Float32Array","windowLength","postMessage","alpha","freq","freqLow","start","end","dynRangeInDB","pixelRatio","devicePixelRatio","sampleRate","SampleRate","streamChannels","NumChannels","transparency","stream","URL","webkitURL","exportData","exportName","cancel","close","getBlob","Blob","export","SaveToDisk","createObjectURL","updateHistoryService","fileURL","fileName","save","document","createElement","setAttribute","href","innerHTML","style","display","body","appendChild","click","download","createEvent","initEvent","dispatchEvent","revokeObjectURL","factory","myWindow","BARTLETT","BARTLETTHANN","BLACKMAN","COSINE","GAUSS","HAMMING","HANN","LANCZOS","RECTANGULAR","TRIANGULAR","curLevelAttrDefs","initialize","dragBarActive","dragBarHeight","endFreezeSample","timelineSize","editing","rightSubmenuOpen","curMousePosSample","curMouseLevelName","curMouseLevelType","curPreselColumnSample","curCorrectionToolNr","curClickLevelIndex","TransitionTime","movingBoundary","movingBoundarySample","curTaskPercCompl","mouseInEmuWebApp","states","noDBorFilesloaded","permittedActions","loadingSaving","labeling","modalShowing","prevState","curState","actionName","indexOf","b","nameOrObj","updatePlayHead","timestamp","player","isPlaying","requestAnimationFrame","samplesPassed","floor","$apply","startS","endS","select","getViewPort","rfrom","rto","dyn","win","hm","preEmph","hmColorAnchors","parseInt","setWindowFunction","getSelect","selectDependent","selectLevel","next","Levelserv","curLev","now","getLevelDetails","setcurClickLevel","idxOfNow","selectBoundary","getWindowFunctions","getdragBarActive","setdragBarActive","getdragBarHeight","setdragBarHeight","w","s","time","setsubmenuOpen","setenlarge","getTransitionTime","levelID","levelType","levelIndex","setcurClickLevelName","setcurClickLevelType","getcurClickLevelType","getcurClickLevelIndex","getcurClickNeighbours","curClickNeighbours","setcurMouseLevelName","setcurMouseLevelType","segment","neighbour","x","curMouseSegment","curMouseX","curMouseNeighbours","curMouseisFirst","curMouseisLast","getcurMouseNeighbours","selectSegmentsInSelection","levelData","min","Infinity","max","itemInSel","getItemsInSelection","setcurClickSegmentMultiple","itemsInRange","rangeStart","rangeEnd","t","setcurClickSegment","left","right","entry","empty","front","back","sort","sortbyid","getselectedRange","getfirstClickSegment","getselected","isEditing","setEditing","n","countSelected","getCurrentSample","getCurrentPercent","sample","getSamplesPerPixelVal","parseFloat","originalEvent","pow","k","substring","getViewPortStartTime","getViewPortEndTime","getSelectedStartTime","getSelectedEndTime","sSample","eSample","oldStart","oldEnd","abs","zoomIn","newStartS","newEndS","curMouseMoveSegmentStart","seg","d","isLastSeg","getItemDetails","getLastItem","d1","d2","shiftRight","curAttrDefName","newAttrDefName","ad","curAttrDefIndex","getCurAttrIndex","getX","offsetX","layerX","clientWidth","getY","offsetY","layerY","clientHeight","setLastClick","curMouseSampleNrInView","lastEventClick","getClosestItem","current","nearest","setlasteditArea","setlasteditAreaElem","parent","$index","lastPCM","setLastRightClick","setLastDblClick","openEditArea","setLastMove","doChange","lastEventMove","lastNeighboursMove","getItemNeighboursFromLevel","preventDefault","restrictions","editItemName","moveLine","samplesPerPixel","moveBy","zoomEventMove","ceil","lastItem","getItemFromLevelById","mbutton","buttons","which","editItemSize","shiftKey","moveBoundary","updateCurChangeObj","movedBy","movePoint","altKey","moveSegment","AnagestService","applyKeyCode","code","createNewItemAtSelection","editingElement","getlastID","attrIndex","getlasteditArea","val","renameLabel","esc","stopPropagation","zoomAll","zoomOut","shiftViewPortLeft","shiftViewPortRight","zoomSel","playEntireFile","playback","playAllInView","playSelected","selectFirstContourCorrectionTool","correctionTool","selectSecondContourCorrectionTool","selectThirdContourCorrectionTool","selectFourthContourCorrectionTool","selectNoContourCorrectionTool","levelUp","levelDown","snapBoundaryToNearestTopBoundary","mouseSeg","neighbor","minDist","snapBoundary","position","snapBoundaryToNearestBottomBoundary","snapBoundaryToNearestZeroCrossing","dist","calcDistanceToNearestZeroCrossing","levelname","expandSelSegmentsRight","changeTime","addTimeValue","addTimeMode","expandSegment","rightSide","expandSelSegmentsLeft","shrinkSelSegmentsLeft","shrinkSelSegmentsRight","toggleSideBarLeft","activeButtons","openMenu","toggleSideBarRight","selPrevItem","idLeft","idRight","selNextItem","selNextPrevItem","addItem","getlasteditAreaElem","insSeg","insertSegment","ret","ids","segName","anagestConfig","insPoint","insertPoint","alreadyExists","pointName","insertAnagestEvents","undo","redo","deletePreselBoundary","deleteItem","deletedSegment","deleteSegments","clickSeg","deleteItemBoundary","deleteBoundary","deletedPoint","deletePoint","metaKey","ctrlKey","safeApply","fn","phase","$root","$$phase","off","delete","elem","elemHeight","deleteButton","children","saveButton","css","deleteSingleLevel","hide","saveSingleLevel","show","enlarge","asyncParseJSO","startPCM","$http","Websockethandler","prom","get","respType","responseType","getProm","logOnUser","pwd","string","annotates","fileType","asyncParseEsps","setPlayerSrc","buf","base64String","src","resetPlayerSrcFromTo","endSample","bytePerSample","BitsPerSample","origArrBuf","dv","DataView","setUint32","newData","Uint8Array","byteLength","pause","play","atts","handleUpdate","assTrackName","ass","col","getColumnOfTrack","columnName","sRaSt","getSampleRateAndStartTimeOfTrack","minMaxLims","drawValues","startTime","sR","sT","minVal","maxVal","_minVal","_maxVal","startTimeVP","endTimeVP","colStartSampleNr","colEndSampleNr","nrOfSamples","curSampleArrs","values","slice","y","curSampleInCol","curSampleInColTime","contourVal","contourNr","minContourIdx","maxContourIdx","contColors","selectedContourColor","leftBorder","leftVal","curArr","curArrIdx","arc","PI","rightBorder","rightVal","txt","crossHairsColor","Date","$observe","worker","ssffArray","cmd","ssffArr","jso","switchMarkupContext","leave","ssffTrackname","drawCrossHairs","setSelectDrag","curMouseSample","dragStartSample","dragEndSample","bundleName","mouseX","curMouseTime","curMouseSampleTime","fill","copy","updateObj","sampleBlockIdx","sampleIdx","key","getScale","str","scale","measureText","getScaleWidth","str1","str2","scaleX","drawFrame","prevPeak","h","prevH","prevX","prevY","osciColor","relData","samplePerPx","numberOfChannels","peaks","minPeak","maxPeak","apply","Array","call","curPxIdx","avrVal","c","sum","p","peak","hDbS","sNr","drawSampleNrs","strokeText","fillText","drawZeroLine","zeroLineColor","vendor","setLineDash","zeroLineY","drawTimeAndSamples","space","offsetWidth","mouseEvt","unit","trackname","mouseY","mouseFreq","s1","s2","verticalText","smallFontSize","th","trackNameImg","labelTxtImg","sTime","eTime","applyChange","changeObj","applyOldVal","cur","renameLevel","newname","deleteLevel","deleteBoundaryInvers","deleteSegmentsInvers","insertSegmentInvers","undoStack","redoStack","curChangeObj","dataObj","dataKey","String","obj","tmpObj","oldChangeObj","pop","getNrOfPossibleUndos","getCurrentStack","buffLength","textGrid","rand","random","new","newHash","lastTextWidth","spaceTop","ctxOriginal","text","restore","text2","alignLeft","esps","loginData","username","password","errorMsg","tryLogin","Columns","calculateSamplePosInVP","colSampleNr","sampleTime","audioSample","getLabelIdx","labelIdx","maxItemID","lasteditArea","lasteditAreaElem","raiseId","amount","lowerId","curLevel","num","getLevelsByType","types","getOrderById","eid","getIdByOrder","details","getNextItem","foundItm","remove","clientOffset","offsetLeft","top","offsetTop","editText","zoom","createEditArea","createSelection","field","createTextRange","selRange","collapse","moveStart","moveEnd","setSelectionRange","selectionStart","selectionEnd","focus","label","labelid","textid","prepend","class","ng-model","autofocus","padding-top","overflow-x","overflow-y","insertItemDetails","labelname","duration","newElement","attrdefs","splice","updateSegItemInLevel","setPointDetails","firstid","lastid","sampleNr","maximum","spaceLower","spaceHigher","lvl","originalLevel","newLabelName","oldname","segments","lastNeighbours","timeRight","timeLeft","firstSegment","firstOrder","lastSegment","neighbours","deleteOrder","diff2","startOrder","diff","newLabel","startID","newStart","endID","pos","toDelete","last","retOrder","retEvt","oldName","toTop","neighTd","absDist","sampleTarget","absMinDist","thisTd","tIdx","orig","ln","origRight","origLeft","orderPoints","first","tempItem","allow","lastLength","distRight","distLeft","getAllLabelsOfLevel","j","addLinkToParent","parentId","childIds","chId","links","fromID","toID","inverseAddLinkToParent","linkIdx","uuid","wsonopen","connected","conPromise","wsonmessage","listener","fromJson","wsonerror","wsonclose","wasClean","sendRequest","request","callbackId","getCallbackId","callbacks","cb","callbackID","ws","send","toJson","tOutResp","serverTimeoutInterval","messageObj","hasOwnProperty","newUUID","WebSocket","onopen","onmessage","onerror","onclose","userName","serverInfos","Url","connectionError","tryConnection","stringBase64","binaryString","atob","bytes","ascii","charCodeAt","binary","fromCharCode","btoa","modalInstance","templatefile","argCtrl","passedIn","backdrop","keyboard","passedInTxt","passedInOpts","handleUpdatereadyEvent","appCache","swapCache","location","reload","applicationCache","update","getStrRep","options","selWindowInfo","windowLengths","modalVals","getColorOfAnchor","anchorNr","curStyle","saveSpectroSettings","confirm","ArrayHelperService","myData","convertArrayToXYjsoArray","filter","input","regex","patt","RegExp","toLowerCase","out","test","patt1","patt2","passedOutTxt","var","saveChanges","discardChanges","showMenu","showTwod","animation","transclude","showTwoDimCans","template","panes","bottomRightResizePane","addPane","pane","setBottomRightResizePane","dragBottomRightResizePaneTopResizer","dragBottomRightResizePaneLeftResizer","dragBottomRightResizePaneCornerResizer","handler","pane1","pane2","pane3","bottomRightResizePaneTopResizer","bottomRightResizePaneLeftResizer","bottomRightResizePaneCornerResizer","pane1Min","minSize","pane2Min","dragSplitPaneResizer","drag","after","ev","bounds","getBoundingClientRect","bottom","clientY","clientX","require","bgSplitterCtrl","typeclass","drawSsffTrackMarkup","drawEpgGrid","binValStrArr","gridWidth","gridHeight","sInterv","curFrame","elIdx","split","reverse","binStr","binStrIdx","setGlobalMinMaxVals","dD","twoDimCanvases","twoDimDrawingDefinitions","dots","trConf","xSsffTrack","xCol","globalMinX","globalMaxX","ySsffTrack","yCol","globalMinY","globalMaxY","drawDots","tw","xsRaSt","ysRaSt","curMousePosTime","degrees","rotate","allDots","startSample","xContourNr","yContourNr","startPoint","endPoint","f","connectLines","fromDot","toDot","dragEnterLeave","dropClass","handleDragOver","dropAllowed","dropFiles","dropParsingStarted","File","FileList","dt","dataTransfer","files","webkitGetAsEntry","dropErrorFileType","dropErrorAPI","dropNotAllowed","handleFilesonChange","loadedFiles","fileDialog","schemasJsos","names","proms","all","schemaArr","schemaName","schema","tv4","validate","convertToAbsValues","arr","multiplyEachElement","interp2points","x0","y0","x1","y1","findMinMax","minOrMax","flattenArrayOfArray","arrOfArrs","merged","concat","xyArray","verticalPosSsffTrackName","vTrackName","velocitySsffTrackName","vTr","vCol","flatColVals","flatVcolVals","gdat","NaN","vdat","ndat","cdat","startTimeSel","endTimeSel","selCol","selVCol","maxVerticalPos","maxVelBeforeMaxConstr","minVelBeforeMaxVel","interactiveFindThresholds","threshold","on20","minVelBetwMaxVel1maxConstr","minp","off20","maxVelAfterMaxConstr","minBetwMaxConstrMaxVelConstr","minVelAfterMaxVelAfterConstr","curLabel","gestureOnOffsetLabels","gdat0insPoint","gdat1insPoint","maxVelocityOnOffsetLabels","vdat0insPoint","vdat1insPoint","constrictionPlateauBeginEndLabels","ndat0insPoint","ndat1insPoint","maxConstrictionLabel","cdat0insPoint","linkLevelName","autoLinkLevelName","linkLevelDetails","linkLevelLabels","itemIdx","childIDs","parentID","direction","description","thdat","thdir","xx","lx","xsh","loguk","higuk","vz","anavv","infos","thresholdIdx","thresholdValue","ap","render","margin","svg","d3","append","linear","range","xAxis","axis","tickSize","tickSubdivide","yAxis","orient","lineFunc","line","interpolate","domain","selectAll","x2","y2"],"mappings":"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","sourcesContent":["'use strict';\n//expand ArrayBuffer with subarray function\nArrayBuffer.prototype.subarray = function (offset, length) {\n  var sub = new ArrayBuffer(length);\n  var subView = new Int8Array(sub);\n  var thisView = new Int8Array(this);\n  for (var i = 0; i < length; i++) {\n    subView[i] = thisView[offset + i];\n  }\n  return sub;\n};\n'use strict';\nangular.module('emuwebApp', [\n  'ui',\n  'ui.bootstrap',\n  'ngAnimate'\n]).config([\n  '$locationProvider',\n  function ($locationProvider) {\n    // $routeProvider\n    //   .when('/', {\n    //     templateUrl: 'views/main.html'\n    //   })\n    //   .otherwise({\n    //     redirectTo: '/'\n    //   });\n    $locationProvider.html5Mode(true);\n  }\n]);\n'use strict';\nangular.module('emuwebApp').service('ConfigProviderService', [\n  'viewState',\n  function (viewState) {\n    // shared service object\n    var sServObj = {};\n    sServObj.vals = {};\n    sServObj.curDbConfig = {};\n    // embedded values -> if these are set this overrides the normal config  \n    sServObj.embeddedVals = {\n      audioGetUrl: '',\n      labelGetUrl: '',\n      labelType: '',\n      fromUrlParams: false\n    };\n    /**\n\t\t * depth of 2 = max\n\t\t */\n    sServObj.setVals = function (data) {\n      if ($.isEmptyObject(sServObj.vals)) {\n        sServObj.vals = data;\n      } else {\n        angular.forEach(Object.keys(data), function (key1) {\n          // if array... overwrite entire thing!\n          if (angular.isArray(sServObj.vals[key1])) {\n            //empty array\n            sServObj.vals[key1] = [];\n            angular.forEach(data[key1], function (itm) {\n              sServObj.vals[key1].push(itm);\n            });\n          } else {\n            angular.forEach(Object.keys(data[key1]), function (key2) {\n              if (sServObj.vals[key1][key2] !== undefined) {\n                sServObj.vals[key1][key2] = data[key1][key2];\n              } else {\n                console.error('BAD ENTRY IN CONFIG! Key1: ' + key1 + ' key2: ' + key2);\n              }\n            });\n          }\n        });\n      }\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.getSsffTrackConfig = function (name) {\n      var res;\n      if (sServObj.curDbConfig.ssffTrackDefinitions !== undefined) {\n        angular.forEach(sServObj.curDbConfig.ssffTrackDefinitions, function (tr) {\n          if (tr.name === name) {\n            res = tr;\n          }\n        });\n      }\n      return res;\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.getLimsOfTrack = function (trackName) {\n      var res = {};\n      angular.forEach(sServObj.vals.perspectives[viewState.curPerspectiveIdx].signalCanvases.contourLims, function (cL) {\n        if (cL.ssffTrackName === trackName) {\n          res = cL;\n        }\n      });\n      return res;\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.getContourColorsOfTrack = function (trackName) {\n      var res;\n      angular.forEach(sServObj.vals.perspectives[viewState.curPerspectiveIdx].signalCanvases.contourColors, function (cC) {\n        if (cC.ssffTrackName === trackName) {\n          res = cC;\n        }\n      });\n      return res;\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.getAssignment = function (signalName) {\n      var res = {};\n      angular.forEach(sServObj.vals.perspectives[viewState.curPerspectiveIdx].signalCanvases.assign, function (a) {\n        if (a.signalCanvasName === signalName) {\n          res = a;\n        }\n      });\n      return res;\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.getLevelDefinition = function (levelName) {\n      var res = {};\n      angular.forEach(sServObj.curDbConfig.levelDefinitions, function (ld) {\n        if (ld.name === levelName) {\n          res = ld;\n        }\n      });\n      return res;\n    };\n    return sServObj;\n  }\n]);\n'use strict';\nangular.module('emuwebApp').controller('MainCtrl', [\n  '$scope',\n  '$rootScope',\n  '$modal',\n  '$log',\n  '$compile',\n  '$timeout',\n  '$q',\n  '$window',\n  '$document',\n  '$location',\n  'viewState',\n  'HistoryService',\n  'Iohandlerservice',\n  'Soundhandlerservice',\n  'ConfigProviderService',\n  'fontScaleService',\n  'Ssffdataservice',\n  'LevelService',\n  'dialogService',\n  'Textgridparserservice',\n  'Espsparserservice',\n  'Binarydatamaniphelper',\n  'Wavparserservice',\n  'Ssffparserservice',\n  'Drawhelperservice',\n  'Validationservice',\n  'Appcachehandler',\n  function ($scope, $rootScope, $modal, $log, $compile, $timeout, $q, $window, $document, $location, viewState, HistoryService, Iohandlerservice, Soundhandlerservice, ConfigProviderService, fontScaleService, Ssffdataservice, LevelService, dialogService, Textgridparserservice, Espsparserservice, Binarydatamaniphelper, Wavparserservice, Ssffparserservice, Drawhelperservice, Validationservice, Appcachehandler) {\n    // hook up services to use abbreviated forms\n    $scope.cps = ConfigProviderService;\n    $scope.hists = HistoryService;\n    $scope.fontImage = fontScaleService;\n    $scope.levServ = LevelService;\n    $scope.vs = viewState;\n    $scope.dials = dialogService;\n    $scope.ssffds = Ssffdataservice;\n    $scope.shs = Soundhandlerservice;\n    $scope.dhs = Drawhelperservice;\n    $scope.wps = Wavparserservice;\n    $scope.io = Iohandlerservice;\n    $scope.ach = Appcachehandler;\n    // init vars\n    $scope.connectBtnLabel = 'connect';\n    $scope.tmp = {};\n    $scope.dbLoaded = false;\n    $scope.is2dCancasesHidden = true;\n    //$scope.lastkeycode = 'N/A';\n    $scope.bundleList = [];\n    $scope.curUserName = '';\n    $scope.curBndl = {};\n    $scope.lastclickedutt = null;\n    $scope.filterText = '';\n    $scope.windowWidth = $window.outerWidth;\n    $scope.demoDbName = '';\n    $scope.firefox = navigator.userAgent.match(/Firefox/i) ? true : false;\n    // check for new version\n    $scope.ach.checkForNewVersion();\n    //////////////\n    // bindings\n    // bind window resize event\n    angular.element($window).bind('resize', function () {\n      LevelService.deleteEditArea();\n      viewState.setWindowWidth($window.outerWidth);\n      $scope.$digest();\n    });\n    // bind shift/alt keyups for history\n    angular.element($window).bind('keyup', function (e) {\n      if (e.keyCode === ConfigProviderService.vals.keyMappings.shift || e.keyCode === ConfigProviderService.vals.keyMappings.alt) {\n        HistoryService.addCurChangeObjToUndoStack();\n        $scope.$digest();\n      }\n    });\n    // Take care of preventing navigation out of app (only if something is loaded, not in embedded mode and not developing (auto connecting))\n    window.onbeforeunload = function () {\n      if (ConfigProviderService.embeddedVals.audioGetUrl === '' && $scope.bundleList.length > 0 && !ConfigProviderService.vals.main.autoConnect) {\n        return 'Do you really wish to leave/reload the EMU-webApp? All unsaved changes will be lost...';\n      }\n    };\n    //////////////\n    // watches\n    // watch if embedded override (if attributes are set on emuwebapp tag)\n    // $scope.$watch('cps.embeddedVals.audioGetUrl', function (val) {\n    // \tif (val !== undefined && val !== '') {\n    // \t\t// check if both are set\n    // \t\t$scope.loadFilesForEmbeddedApp();\n    // \t}\n    // }, true);\n    //\n    //////////////\n    /////////////\n    // listens\n    // listen for connectionDisrupted event -> I don't like listens but in this case it might me the way to go...\n    $scope.$on('connectionDisrupted', function (event, args) {\n      $scope.resetToInitState();\n    });\n    //\n    ////////////\n    // check if URL parameters are set -> if so set embedded flags!\n    var searchObject = $location.search();\n    if (searchObject['audioGetUrl'] && searchObject['labelGetUrl'] && searchObject['labelType']) {\n      ConfigProviderService.embeddedVals.audioGetUrl = searchObject.audioGetUrl;\n      ConfigProviderService.embeddedVals.labelGetUrl = searchObject.labelGetUrl;\n      ConfigProviderService.embeddedVals.labelType = searchObject.labelType;\n      ConfigProviderService.embeddedVals.fromUrlParams = true;\n    }\n    ;\n    /**\n\t\t *\n\t\t */\n    $scope.loadFilesForEmbeddedApp = function () {\n      if (ConfigProviderService.embeddedVals.audioGetUrl) {\n        Iohandlerservice.httpGetPath(ConfigProviderService.embeddedVals.audioGetUrl, 'arraybuffer').then(function (data) {\n          viewState.showDropZone = false;\n          // set bundle name\n          var tmp = ConfigProviderService.embeddedVals.audioGetUrl;\n          $scope.curBndl.name = tmp.substr(0, tmp.lastIndexOf('.')).substr(tmp.lastIndexOf('/') + 1, tmp.length);\n          //hide menu\n          if (viewState.getsubmenuOpen()) {\n            viewState.togglesubmenuOpen(ConfigProviderService.vals.colors.transitionTime);\n          }\n          viewState.somethingInProgressTxt = 'Loading DB config...';\n          // then get the DBconfigFile\n          Iohandlerservice.httpGetPath('configFiles/embedded_emuwebappConfig.json').then(function (resp) {\n            // first element of perspectives is default perspective\n            viewState.curPerspectiveIdx = 0;\n            ConfigProviderService.setVals(resp.data.EMUwebAppConfig);\n            // validate emuwebappConfigSchema\n            delete resp.data.EMUwebAppConfig;\n            // delete to avoid duplicate\n            var validRes = Validationservice.validateJSO('emuwebappConfigSchema', ConfigProviderService.vals);\n            if (validRes === true) {\n              // turn of keybinding only on mouseover\n              if (ConfigProviderService.embeddedVals.fromUrlParams) {\n                ConfigProviderService.vals.main.catchMouseForKeyBinding = false;\n              }\n              ConfigProviderService.curDbConfig = resp.data;\n              // validate DBconfigFileSchema!\n              validRes = Validationservice.validateJSO('DBconfigFileSchema', ConfigProviderService.curDbConfig);\n              if (validRes === true) {\n                // set wav file\n                viewState.somethingInProgress = true;\n                viewState.somethingInProgressTxt = 'Parsing WAV file...';\n                Wavparserservice.parseWavArrBuf(data.data).then(function (messWavParser) {\n                  var wavJSO = messWavParser;\n                  viewState.curViewPort.sS = 0;\n                  viewState.curViewPort.eS = wavJSO.Data.length;\n                  viewState.resetSelect();\n                  Soundhandlerservice.wavJSO = wavJSO;\n                  // get + parse file\n                  Iohandlerservice.httpGetPath(ConfigProviderService.embeddedVals.labelGetUrl, 'utf-8').then(function (data2) {\n                    viewState.somethingInProgressTxt = 'Parsing ' + ConfigProviderService.embeddedVals.labelType + ' file...';\n                    Iohandlerservice.parseLabelFile(data2.data, ConfigProviderService.embeddedVals.labelGetUrl, 'embeddedTextGrid', ConfigProviderService.embeddedVals.labelType).then(function (parseMess) {\n                      var annot = parseMess.data;\n                      LevelService.setData(annot);\n                      var lNames = [];\n                      var levelDefs = [];\n                      annot.levels.forEach(function (l) {\n                        lNames.push(l.name);\n                        levelDefs.push({\n                          'name': l.name,\n                          'type': l.type,\n                          'attributeDefinitions': {\n                            'name': l.name,\n                            'type': 'string'\n                          }\n                        });\n                      });\n                      // set level defs\n                      ConfigProviderService.curDbConfig.levelDefinitions = levelDefs;\n                      viewState.setCurLevelAttrDefs(ConfigProviderService.curDbConfig.levelDefinitions);\n                      ConfigProviderService.vals.perspectives[viewState.curPerspectiveIdx].levelCanvases.order = lNames;\n                      viewState.somethingInProgressTxt = 'Done!';\n                      viewState.somethingInProgress = false;\n                      viewState.setState('labeling');\n                    }, function (errMess) {\n                      dialogService.open('views/error.html', 'ModalCtrl', 'Error parsing wav file: ' + errMess.status.message);\n                    });\n                  }, function (errMess) {\n                    dialogService.open('views/error.html', 'ModalCtrl', 'Could not get label file: ' + ConfigProviderService.embeddedVals.labelGetUrl + ' ERROR ' + JSON.stringify(errMess, null, 4));\n                  });\n                }, function (errMess) {\n                  dialogService.open('views/error.html', 'ModalCtrl', 'Error parsing wav file: ' + errMess.status.message);\n                });\n              } else {\n                dialogService.open('views/error.html', 'ModalCtrl', 'Error validating DBconfig: ' + JSON.stringify(validRes, null, 4));\n              }\n            } else {\n              dialogService.open('views/error.html', 'ModalCtrl', 'Error validating ConfigProviderService.vals (emuwebappConfig data) after applying changes of newly loaded config (most likely due to wrong entry...): ' + JSON.stringify(validRes, null, 4));\n            }\n          }, function (errMess) {\n            dialogService.open('views/error.html', 'ModalCtrl', 'Could not get embedded_config.json: ' + errMess);\n          });\n        }, function (errMess) {\n          dialogService.open('views/error.html', 'ModalCtrl', 'Could not get audio file:' + ConfigProviderService.embeddedVals.audioGetUrl + ' ERROR: ' + JSON.stringify(errMess, null, 4));\n        });\n      }\n    };\n    /**\n\t\t * init load of config files\n\t\t */\n    $scope.loadDefaultConfig = function () {\n      viewState.somethingInProgress = true;\n      viewState.somethingInProgressTxt = 'Loading schema files';\n      // load schemas first\n      Validationservice.loadSchemas().then(function (replies) {\n        Validationservice.setSchemas(replies);\n        Iohandlerservice.httpGetDefaultConfig().success(function (data) {\n          viewState.somethingInProgressTxt = 'Validating emuwebappConfig';\n          var validRes = Validationservice.validateJSO('emuwebappConfigSchema', data);\n          if (validRes === true) {\n            ConfigProviderService.setVals(data);\n            $scope.handleDefaultConfigLoaded();\n            // loadFilesForEmbeddedApp if these are set \n            $scope.loadFilesForEmbeddedApp();\n            viewState.somethingInProgress = false;\n          } else {\n            dialogService.open('views/error.html', 'ModalCtrl', 'Error validating emuwebappConfigSchema: ' + JSON.stringify(validRes, null, 4)).then(function () {\n              $scope.resetToInitState();\n            });\n          }\n        }).error(function (data, status, header, config) {\n          dialogService.open('views/error.html', 'ModalCtrl', 'Could not get defaultConfig for EMU-webApp: ' + ' status: ' + status + ' header: ' + header + ' config ' + config).then(function () {\n            $scope.resetToInitState();\n          });\n        });\n      }, function (errMess) {\n        dialogService.open('views/error.html', 'ModalCtrl', 'Error loading schema file: ' + JSON.stringify(errMess, null, 4)).then(function () {\n          $scope.resetToInitState();\n        });\n      });\n    };\n    // call function on init\n    $scope.loadDefaultConfig();\n    /**\n\t\t * function called after default config was loaded\n\t\t */\n    $scope.handleDefaultConfigLoaded = function () {\n      if (!viewState.getsubmenuOpen()) {\n        viewState.togglesubmenuOpen(ConfigProviderService.vals.colors.transitionTime);\n      }\n      if (ConfigProviderService.vals.main.autoConnect) {\n        Iohandlerservice.wsH.initConnect(ConfigProviderService.vals.main.serverUrl).then(function (message) {\n          if (message.type === 'error') {\n            dialogService.open('views/error.html', 'ModalCtrl', 'Could not connect to websocket server: ' + ConfigProviderService.vals.main.defaultServerUrl);\n          } else {\n            $scope.handleConnectedToWSserver();\n          }\n        });\n      }\n      // init loading of files for testing\n      viewState.setspectroSettings(ConfigProviderService.vals.spectrogramSettings.N, ConfigProviderService.vals.spectrogramSettings.rangeFrom, ConfigProviderService.vals.spectrogramSettings.rangeTo, ConfigProviderService.vals.spectrogramSettings.dynamicRange, ConfigProviderService.vals.spectrogramSettings.window, ConfigProviderService.vals.spectrogramSettings.drawHeatMapColors, ConfigProviderService.vals.spectrogramSettings.preEmphasisFilterFactor, ConfigProviderService.vals.spectrogramSettings.heatMapColorAnchors);\n      // setting transition values\n      viewState.setTransitionTime(ConfigProviderService.vals.colors.transitionTime / 1000);\n    };\n    /**\n\t\t * function is called after websocket connection\n\t\t * has been established. It executes the protocol\n\t\t * and loads the first bundle in the bundle list (= default behavior).\n\t\t */\n    $scope.handleConnectedToWSserver = function () {\n      // hide drop zone \n      viewState.showDropZone = false;\n      ConfigProviderService.vals.main.comMode = 'WS';\n      viewState.somethingInProgress = true;\n      viewState.somethingInProgressTxt = 'Checking protocol...';\n      // Check if server speaks the same protocol\n      Iohandlerservice.getProtocol().then(function (res) {\n        if (res.protocol === 'EMU-webApp-websocket-protocol' && res.version === '0.0.1') {\n          viewState.somethingInProgressTxt = 'Checking user management...';\n          // then ask if server does user management\n          Iohandlerservice.getDoUserManagement().then(function (doUsrData) {\n            if (doUsrData === 'NO') {\n              $scope.innerHandleConnectedToWSserver();\n            } else {\n              // show user management error \n              dialogService.open('views/loginModal.html', 'LoginCtrl').then(function (res) {\n                if (res) {\n                  $scope.innerHandleConnectedToWSserver();\n                } else {\n                  $scope.resetToInitState();\n                }\n              });\n            }\n          });\n        } else {\n          // show protocol error and disconnect from server\n          dialogService.open('views/error.html', 'ModalCtrl', 'Could not connect to websocket server: ' + ConfigProviderService.vals.main.serverUrl + '. It does not speak the same protocol as this client. Its protocol answer was: \"' + res.protocol + '\" with the version: \"' + res.version + '\"').then(function () {\n            $scope.resetToInitState();\n          });\n        }\n      });\n    };\n    /**\n\t\t * to avoid redundant code...\n\t\t */\n    $scope.innerHandleConnectedToWSserver = function () {\n      viewState.somethingInProgressTxt = 'Loading DB config...';\n      // then get the DBconfigFile\n      Iohandlerservice.getDBconfigFile().then(function (data) {\n        // first element of perspectives is default perspective\n        viewState.curPerspectiveIdx = 0;\n        ConfigProviderService.setVals(data.EMUwebAppConfig);\n        delete data.EMUwebAppConfig;\n        // delete to avoid duplicate\n        var validRes = Validationservice.validateJSO('emuwebappConfigSchema', ConfigProviderService.vals);\n        if (validRes === true) {\n          ConfigProviderService.curDbConfig = data;\n          viewState.setCurLevelAttrDefs(ConfigProviderService.curDbConfig.levelDefinitions);\n          validRes = Validationservice.validateJSO('DBconfigFileSchema', data);\n          if (validRes === true) {\n            // then get the DBconfigFile\n            viewState.somethingInProgressTxt = 'Loading bundle list...';\n            Iohandlerservice.getBundleList().then(function (bdata) {\n              validRes = Validationservice.validateJSO('bundleListSchema', bdata);\n              if (validRes === true) {\n                $scope.bundleList = bdata;\n                // then load first bundle in list\n                $scope.menuBundleClick($scope.bundleList[0]);\n              } else {\n                dialogService.open('views/error.html', 'ModalCtrl', 'Error validating bundleList: ' + JSON.stringify(validRes, null, 4)).then(function () {\n                  $scope.resetToInitState();\n                });\n              }\n            });\n          } else {\n            dialogService.open('views/error.html', 'ModalCtrl', 'Error validating DBconfig: ' + JSON.stringify(validRes, null, 4)).then(function () {\n              $scope.resetToInitState();\n            });\n          }\n        } else {\n          dialogService.open('views/error.html', 'ModalCtrl', 'Error validating ConfigProviderService.vals (emuwebappConfig data) after applying changes of newly loaded config (most likely due to wrong entry...): ' + JSON.stringify(validRes, null, 4)).then(function () {\n            $scope.resetToInitState();\n          });\n        }\n      });\n    };\n    /**\n\t\t * Handle click on bundle in side menu. It is\n\t\t * also used as a general loadBundle method.\n\t\t * @param bndl object containing name attribute of currently loaded bundle\n\t\t */\n    $scope.menuBundleClick = function (bndl) {\n      // check if bndl has to be saved\n      if (HistoryService.movesAwayFromLastSave !== 0 && ConfigProviderService.vals.main.comMode !== 'DEMO') {\n        if (bndl !== $scope.curBndl) {\n          $scope.lastclickedutt = bndl;\n          dialogService.open('views/saveChanges.html', 'ModalCtrl', bndl.name).then(function (messModal) {\n            if (messModal === 'saveChanges') {\n              // save current bundle\n              $scope.menuBundleSaveBtnClick().then(function () {\n                // load new bundle\n                $scope.menuBundleClick(bndl);\n              });\n            } else if (messModal === 'discardChanges') {\n              // reset history\n              HistoryService.resetToInitState();\n              // load new bundle\n              $scope.menuBundleClick(bndl);\n            }\n          });\n        }\n      } else {\n        if (bndl !== $scope.curBndl) {\n          // reset history\n          HistoryService.resetToInitState();\n          // set state\n          viewState.setState('loadingSaving');\n          viewState.somethingInProgress = true;\n          viewState.somethingInProgressTxt = 'Loading bundle: ' + bndl.name;\n          // empty ssff files\n          Ssffdataservice.data = [];\n          Iohandlerservice.getBundle(bndl.name, $scope.demoDbName).then(function (bundleData) {\n            // check if response from http request\n            if (bundleData.status === 200) {\n              bundleData = bundleData.data;\n            }\n            var arrBuff;\n            // set wav file\n            arrBuff = Binarydatamaniphelper.base64ToArrayBuffer(bundleData.mediaFile.data);\n            viewState.somethingInProgressTxt = 'Parsing WAV file...';\n            Wavparserservice.parseWavArrBuf(arrBuff).then(function (messWavParser) {\n              var wavJSO = messWavParser;\n              viewState.curViewPort.sS = 0;\n              viewState.curViewPort.eS = wavJSO.Data.length;\n              viewState.curViewPort.selectS = -1;\n              viewState.curViewPort.selectE = -1;\n              viewState.curClickSegments = [];\n              viewState.curClickLevelName = undefined;\n              viewState.curClickLevelType = undefined;\n              viewState.resetSelect();\n              // FOR DEVELOPMENT:\n              // viewState.curViewPort.sS = 52063;\n              // viewState.curViewPort.eS = 52100;\n              // viewState.curViewPort.selectS = 27575;\n              // viewState.curViewPort.selectE = 34538;\n              Soundhandlerservice.wavJSO = wavJSO;\n              // set all ssff files\n              viewState.somethingInProgressTxt = 'Parsing SSFF files...';\n              Ssffparserservice.asyncParseSsffArr(bundleData.ssffFiles).then(function (ssffJso) {\n                Ssffdataservice.data = ssffJso.data;\n                var validRes = Validationservice.validateJSO('annotationFileSchema', bundleData.annotation);\n                if (validRes === true) {\n                  // set annotation\n                  LevelService.setData(bundleData.annotation);\n                  $scope.curBndl = bndl;\n                  viewState.setState('labeling');\n                  viewState.somethingInProgress = false;\n                  viewState.somethingInProgressTxt = 'Done!';  // FOR DEVELOPMENT:\n                                                               // $scope.menuBundleSaveBtnClick(); // for testing save button\n                                                               // $scope.spectSettingsBtnClick(); // for testing spect settings dial\n                } else {\n                  dialogService.open('views/error.html', 'ModalCtrl', 'Error validating annotation file: ' + JSON.stringify(validRes, null, 4)).then(function () {\n                    $scope.resetToInitState();\n                  });\n                }\n              }, function (errMess) {\n                dialogService.open('views/error.html', 'ModalCtrl', 'Error parsing SSFF file: ' + errMess.status.message).then(function () {\n                  $scope.resetToInitState();\n                });\n              });\n            }, function (errMess) {\n              dialogService.open('views/error.html', 'ModalCtrl', 'Error parsing wav file: ' + errMess.status.message).then(function () {\n                $scope.resetToInitState();\n              });\n            });\n          }, function (errMess) {\n            // check for http vs websocket response\n            if (errMess.data) {\n              dialogService.open('views/error.html', 'ModalCtrl', 'Error loading bundle: ' + errMess.data).then(function () {\n                $scope.resetToInitState();\n              });\n            } else {\n              dialogService.open('views/error.html', 'ModalCtrl', 'Error loading bundle: ' + errMess.status.message).then(function () {\n                $scope.resetToInitState();\n              });\n            }\n          });\n        }\n      }\n    };\n    /**\n\t\t * Handle save bundle button click. The function is also used\n\t\t * as a gerneral purpose save bundle function.\n\t\t * @return promise that is resolved after completion (rejected on error)\n\t\t */\n    $scope.menuBundleSaveBtnClick = function () {\n      // check if something has changed\n      // if (HistoryService.movesAwayFromLastSave !== 0) { // Commented out FOR DEVELOPMENT!\n      if (viewState.getPermission('saveBndlBtnClick')) {\n        var defer = $q.defer();\n        viewState.somethingInProgress = true;\n        viewState.setState('loadingSaving');\n        //create bundle json\n        var bundleData = {};\n        viewState.somethingInProgressTxt = 'Creating bundle json...';\n        bundleData.ssffFiles = [];\n        var formants = {};\n        // ssffFiles (only FORMANTS are allowed to be manipulated so only this track is sent back to server)\n        Ssffdataservice.data.forEach(function (el) {\n          if (el.ssffTrackName === 'FORMANTS') {\n            formants = el;\n          }\n        });\n        if (!$.isEmptyObject(formants)) {\n          Ssffparserservice.asyncJso2ssff(formants).then(function (messParser) {\n            bundleData.ssffFiles.push({\n              'ssffTrackName': formants.ssffTrackName,\n              'encoding': 'BASE64',\n              'data': Binarydatamaniphelper.arrayBufferToBase64(messParser.data)\n            });\n            $scope.getAnnotationAndSaveBndl(bundleData, defer);\n          }, function (errMess) {\n            dialogService.open('views/error.html', 'ModalCtrl', 'Error converting javascript object to ssff file: ' + errMess.status.message);\n            defer.reject();\n          });\n        } else {\n          $scope.getAnnotationAndSaveBndl(bundleData, defer);\n        }\n        return defer.promise;  // } // Commented out FOR DEVELOPMENT!\n      } else {\n        $log.info('Action: menuBundleSaveBtnClick not allowed!');\n      }\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.getAnnotationAndSaveBndl = function (bundleData, defer) {\n      // annotation\n      bundleData.annotation = LevelService.getData();\n      viewState.somethingInProgressTxt = 'Saving bundle...';\n      Iohandlerservice.saveBundle(bundleData).then(function () {\n        viewState.somethingInProgressTxt = 'Done!';\n        viewState.somethingInProgress = false;\n        HistoryService.movesAwayFromLastSave = 0;\n        defer.resolve();\n        viewState.setState('labeling');\n      }, function (errMess) {\n        // console.log(mess);\n        dialogService.open('views/error.html', 'ModalCtrl', 'Error saving bundle: ' + errMess.status.message).then(function () {\n          $scope.resetToInitState();\n        });\n        defer.reject();\n      });\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.uttIsDisabled = function (bndl) {\n      if (bndl.name === $scope.curBndl.name) {\n        return false;\n      } else {\n        return true;\n      }\n    };\n    $scope.getEnlarge = function (index) {\n      var len = ConfigProviderService.vals.perspectives[viewState.curPerspectiveIdx].signalCanvases.order.length;\n      var large = 50;\n      if (viewState.getenlarge() == -1) {\n        return 'auto';\n      } else {\n        if (len === 1) {\n          return 'auto';\n        }\n        if (len === 2) {\n          if (viewState.getenlarge() == index) {\n            return '70%';\n          } else {\n            return '27%';\n          }\n        } else {\n          if (viewState.getenlarge() == index) {\n            return large + '%';\n          } else {\n            return (98 - large) / (len - 1) + '%';\n          }\n        }\n      }\n    };\n    /**\n\t\t * returns jso with css defining color dependent\n\t\t * on if changes have been made that have not been saved\n\t\t * @param bndl object containing name attribute of bundle item\n\t\t * requesting color\n\t\t * @returns color as jso object used by ng-style\n\t\t */\n    $scope.getBndlColor = function (bndl) {\n      var curColor;\n      if (HistoryService.movesAwayFromLastSave !== 0) {\n        curColor = {\n          'background-color': '#f00',\n          'color': 'white'\n        };\n      } else {\n        curColor = {\n          'background-color': '#999',\n          'color': 'black'\n        };\n      }\n      // console.log(bndl.name)\n      if (bndl.name === $scope.curBndl.name) {\n        return curColor;\n      }\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.cursorInTextField = function () {\n      viewState.focusInTextField = true;\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.cursorOutOfTextField = function () {\n      viewState.focusInTextField = false;\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.openSubmenu = function () {\n      viewState.togglesubmenuOpen(ConfigProviderService.vals.colors.transitionTime);\n    };\n    /////////////////////////////////////////\n    // handle button clicks\n    // top menu:\n    /**\n\t\t *\n\t\t */\n    $scope.addLevelSegBtnClick = function () {\n      if (viewState.getPermission('addLevelSegBtnClick')) {\n        var length = 0;\n        if (LevelService.data.levels !== undefined) {\n          length = LevelService.data.levels.length;\n        }\n        var newName = 'levelNr' + length;\n        var level = {\n            items: [{\n                id: LevelService.getNewId(),\n                sampleStart: 0,\n                sampleDur: Soundhandlerservice.wavJSO.Data.length,\n                labels: [{\n                    name: newName,\n                    value: ConfigProviderService.vals.labelCanvasConfig.newSegmentName\n                  }]\n              }],\n            name: newName,\n            type: 'SEGMENT'\n          };\n        if (viewState.getCurAttrDef(newName) === undefined) {\n          var leveldef = {\n              name: newName,\n              type: 'EVENT',\n              attributeDefinitions: {\n                name: newName,\n                type: 'string'\n              }\n            };\n          viewState.setCurLevelAttrDefs(leveldef);\n        }\n        LevelService.addLevel(level, length, viewState.curPerspectiveIdx);\n        //  Add to history\n        HistoryService.addObjToUndoStack({\n          'type': 'ESPS',\n          'action': 'ADDLEVEL',\n          'level': level,\n          'id': length,\n          'curPerspectiveIdx': viewState.curPerspectiveIdx\n        });\n      } else {\n        console.log('action currently not allowed');\n      }\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.addLevelPointBtnClick = function () {\n      if (viewState.getPermission('addLevelPointBtnClick')) {\n        var length = 0;\n        if (LevelService.data.levels !== undefined) {\n          length = LevelService.data.levels.length;\n        }\n        var newName = 'levelNr' + length;\n        var level = {\n            items: [{\n                id: LevelService.getNewId(),\n                samplePoint: Math.round(Soundhandlerservice.wavJSO.Data.length / 2),\n                labels: []\n              }],\n            name: newName,\n            type: 'EVENT'\n          };\n        level.items[0].labels.push({\n          name: newName,\n          value: ConfigProviderService.vals.labelCanvasConfig.newEventName\n        });\n        if (viewState.getCurAttrDef(newName) === undefined) {\n          var leveldef = {\n              name: newName,\n              type: 'EVENT',\n              attributeDefinitions: {\n                name: newName,\n                type: 'string'\n              }\n            };\n          viewState.setCurLevelAttrDefs(leveldef);\n        }\n        LevelService.addLevel(level, length, viewState.curPerspectiveIdx);\n        //  Add to history\n        HistoryService.addObjToUndoStack({\n          'type': 'ESPS',\n          'action': 'ADDLEVEL',\n          'level': level,\n          'id': length,\n          'curPerspectiveIdx': viewState.curPerspectiveIdx\n        });\n      } else {\n        console.log('action currently not allowed');\n      }\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.renameSelLevelBtnClick = function () {\n      if (viewState.getPermission('renameSelLevelBtnClick')) {\n        if (viewState.getcurClickLevelName() !== undefined) {\n          dialogService.open('views/renameLevel.html', 'ModalCtrl', viewState.getcurClickLevelName());\n        } else {\n          dialogService.open('views/error.html', 'ModalCtrl', 'Rename Error : Please choose a Level first !');\n        }\n      } else {\n        console.log('action currently not allowed');\n      }\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.downloadTextGridBtnClick = function () {\n      if (viewState.getPermission('downloadTextGridBtnClick')) {\n        Textgridparserservice.asyncToTextGrid().then(function (parseMess) {\n          dialogService.openExport('views/export.html', 'ExportCtrl', parseMess.data, $scope.curBndl.name + '.TextGrid');\n        });\n      } else {\n        console.log('action currently not allowed');\n      }\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.spectSettingsBtnClick = function () {\n      if (viewState.getPermission('spectSettingsChange')) {\n        dialogService.open('views/spectSettings.html', 'spectSettingsCtrl', '');\n      } else {\n        console.log('action currently not allowed');\n      }\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.connectBtnClick = function () {\n      if (viewState.getPermission('connectBtnClick')) {\n        dialogService.open('views/connectModal.html', 'WsconnectionCtrl').then(function (url) {\n          if (url) {\n            Iohandlerservice.wsH.initConnect(url).then(function (message) {\n              if (message.type === 'error') {\n                dialogService.open('views/error.html', 'ModalCtrl', 'Could not connect to websocket server: ' + url);\n              } else {\n                $scope.handleConnectedToWSserver();\n              }\n            });\n          }\n        });\n      } else {\n        console.log('action currently not allowed');\n      }\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.openDemoDBbtnClick = function (nameOfDB) {\n      if (viewState.getPermission('openDemoBtnDBclick')) {\n        $scope.demoDbName = nameOfDB;\n        // hide drop zone \n        viewState.showDropZone = false;\n        viewState.somethingInProgress = true;\n        // alert(nameOfDB);\n        viewState.setState('loadingSaving');\n        ConfigProviderService.vals.main.comMode = 'DEMO';\n        viewState.somethingInProgressTxt = 'Loading DB config...';\n        Iohandlerservice.getDBconfigFile(nameOfDB).then(function (res) {\n          var data = res.data;\n          // first element of perspectives is default perspective\n          viewState.curPerspectiveIdx = 0;\n          ConfigProviderService.setVals(data.EMUwebAppConfig);\n          delete data.EMUwebAppConfig;\n          // delete to avoid duplicate\n          var validRes = Validationservice.validateJSO('emuwebappConfigSchema', ConfigProviderService.vals);\n          if (validRes === true) {\n            ConfigProviderService.curDbConfig = data;\n            viewState.setCurLevelAttrDefs(ConfigProviderService.curDbConfig.levelDefinitions);\n            validRes = Validationservice.validateJSO('DBconfigFileSchema', ConfigProviderService.curDbConfig);\n            if (validRes === true) {\n              // then get the DBconfigFile\n              viewState.somethingInProgressTxt = 'Loading bundle list...';\n              Iohandlerservice.getBundleList(nameOfDB).then(function (res) {\n                var bdata = res.data;\n                validRes = Validationservice.validateJSO('bundleListSchema', bdata);\n                if (validRes === true) {\n                  $scope.bundleList = bdata;\n                  // then load first bundle in list\n                  $scope.menuBundleClick($scope.bundleList[0]);\n                } else {\n                  dialogService.open('views/error.html', 'ModalCtrl', 'Error validating bundleList: ' + JSON.stringify(validRes, null, 4)).then(function () {\n                    $scope.resetToInitState();\n                  });\n                }\n              }, function (err) {\n                dialogService.open('views/error.html', 'ModalCtrl', 'Error loading bundle list of ' + nameOfDB + ': ' + err.data + ' STATUS: ' + err.status).then(function () {\n                  $scope.resetToInitState();\n                });\n              });\n            } else {\n              dialogService.open('views/error.html', 'ModalCtrl', 'Error validating DBconfig: ' + JSON.stringify(validRes, null, 4)).then(function () {\n                $scope.resetToInitState();\n              });\n            }\n          } else {\n            dialogService.open('views/error.html', 'ModalCtrl', 'Error validating ConfigProviderService.vals (emuwebappConfig data) after applying changes of newly loaded config (most likely due to wrong entry...): ' + JSON.stringify(validRes, null, 4)).then(function () {\n              $scope.resetToInitState();\n            });\n          }\n        }, function (err) {\n          dialogService.open('views/error.html', 'ModalCtrl', 'Error loading DB config of ' + nameOfDB + ': ' + err.data + ' STATUS: ' + err.status).then(function () {\n            $scope.resetToInitState();\n          });\n        });\n      }  //else {\n         // \tconsole.log('action currently not allowed');\n         // }\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.aboutBtnClick = function () {\n      dialogService.open('views/about.html', 'AboutCtrl');\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.clearBtnClick = function () {\n      // viewState.setdragBarActive(false);\n      var modalText;\n      if (HistoryService.movesAwayFromLastSave !== 0 && ConfigProviderService.vals.main.comMode !== 'DEMO') {\n        modalText = 'Do you wish to clear all loaded data and if connected disconnect from the server? CAUTION: YOU HAVE UNSAVED CHANGES! These will be lost if you confirm.';\n      } else {\n        modalText = 'Do you wish to clear all loaded data and if connected disconnect from the server? You have NO unsaved changes so no changes will be lost.';\n      }\n      dialogService.open('views/confirmModal.html', 'ConfirmmodalCtrl', modalText).then(function (res) {\n        if (res) {\n          $scope.resetToInitState();\n        }\n      });\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.resetToInitState = function () {\n      if (Iohandlerservice.wsH.isConnected()) {\n        Iohandlerservice.wsH.disconnectWarning().then(function (resp) {\n          $log.info('Closing websocket connection to server');\n          Iohandlerservice.wsH.closeConnect();\n        });\n      }\n      $scope.curBndl = {};\n      $scope.bundleList = [];\n      Soundhandlerservice.wavJSO = {};\n      LevelService.data = {};\n      Ssffdataservice.data = [];\n      HistoryService.resetToInitState();\n      viewState.setState('noDBorFilesloaded');\n      $scope.$broadcast('resetToInitState');\n      viewState.somethingInProgress = false;\n      viewState.resetToInitState();\n      viewState.showDropZone = true;\n      $scope.loadDefaultConfig();\n    };\n    // bottom menu:\n    /**\n\t\t *\n\t\t */\n    $scope.cmdZoomAll = function () {\n      if (viewState.getPermission('zoom')) {\n        LevelService.deleteEditArea();\n        viewState.setViewPort(0, Soundhandlerservice.wavJSO.Data.length);\n      } else {\n        console.log('action currently not allowed');\n      }\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.cmdZoomIn = function () {\n      if (viewState.getPermission('zoom')) {\n        LevelService.deleteEditArea();\n        viewState.zoomViewPort(true);\n      } else {\n        console.log('action currently not allowed');\n      }\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.cmdZoomOut = function () {\n      if (viewState.getPermission('zoom')) {\n        LevelService.deleteEditArea();\n        viewState.zoomViewPort(false);\n      } else {\n        console.log('action currently not allowed');\n      }\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.cmdZoomLeft = function () {\n      if (viewState.getPermission('zoom')) {\n        LevelService.deleteEditArea();\n        viewState.shiftViewPort(false);\n      } else {\n        console.log('action currently not allowed');\n      }\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.cmdZoomRight = function () {\n      if (viewState.getPermission('zoom')) {\n        LevelService.deleteEditArea();\n        viewState.shiftViewPort(true);\n      } else {\n        console.log('action currently not allowed');\n      }\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.cmdZoomSel = function () {\n      if (viewState.getPermission('zoom')) {\n        LevelService.deleteEditArea();\n        viewState.setViewPort(viewState.curViewPort.selectS, viewState.curViewPort.selectE);\n      } else {\n        console.log('action currently not allowed');\n      }\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.cmdPlayView = function () {\n      if (viewState.getPermission('playaudio')) {\n        Soundhandlerservice.playFromTo(viewState.curViewPort.sS, viewState.curViewPort.eS);\n        viewState.animatePlayHead(viewState.curViewPort.sS, viewState.curViewPort.eS);\n      } else {\n        console.log('action currently not allowed');\n      }\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.cmdPlaySel = function () {\n      if (viewState.getPermission('playaudio')) {\n        Soundhandlerservice.playFromTo(viewState.curViewPort.selectS, viewState.curViewPort.selectE);\n        viewState.animatePlayHead(viewState.curViewPort.selectS, viewState.curViewPort.selectE);\n      } else {\n        console.log('action currently not allowed');\n      }\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.cmdPlayAll = function () {\n      if (viewState.getPermission('playaudio')) {\n        Soundhandlerservice.playFromTo(0, Soundhandlerservice.wavJSO.Data.length);\n        viewState.animatePlayHead(0, Soundhandlerservice.wavJSO.Data.length);\n      } else {\n        console.log('action currently not allowed');\n      }\n    };\n    ///////////////////////////\n    // other\n    /**\n\t\t * function used to change perspective\n\t\t * @param persp json object of current perspective containing name attribute\n\t\t */\n    $scope.changePerspective = function (persp) {\n      var newIdx;\n      for (var i = 0; i < ConfigProviderService.vals.perspectives.length; i++) {\n        if (persp.name === ConfigProviderService.vals.perspectives[i].name) {\n          newIdx = i;\n        }\n      }\n      viewState.curPerspectiveIdx = newIdx;\n      // close submenu\n      viewState.setRightsubmenuOpen(!viewState.getRightsubmenuOpen());\n    };\n    /**\n\t\t * function used by right side menu to get color of current perspecitve in ul\n\t\t * @param persp json object of current perspective containing name attribute\n\t\t */\n    $scope.getPerspectiveColor = function (persp) {\n      var cl;\n      if (viewState.curPerspectiveIdx === -1 || persp.name === ConfigProviderService.vals.perspectives[viewState.curPerspectiveIdx].name) {\n        cl = 'emuwebapp-curSelPerspLi';\n      } else {\n        cl = 'emuwebapp-perspLi';\n      }\n      return cl;\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').controller('FileCtrl', [\n  '$scope',\n  'Binarydatamaniphelper',\n  'Textgridparserservice',\n  'ConfigProviderService',\n  'Validationservice',\n  function ($scope, Binarydatamaniphelper, Textgridparserservice, ConfigProviderService, Validationservice) {\n    $scope.newfiles = [];\n    $scope.wav = {};\n    $scope.grid = {};\n    $scope.curBndl = {};\n    $scope.resetToInitState = function () {\n      $scope.newfiles = [];\n      $scope.wav = {};\n      $scope.grid = {};\n      $scope.curBndl = {};\n      $scope.dropText = $scope.dropDefault;\n    };\n    $scope.$on('resetToInitState', function () {\n      $scope.resetToInitState();\n    });\n    $scope.handleLocalFiles = function () {\n      $scope.$parent.vs.showDropZone = false;\n      $scope.$parent.cps.vals.main.comMode = 'FileAPI';\n      $scope.$parent.vs.setState('loadingSaving');\n      // reset history\n      $scope.$parent.hists.resetToInitState();\n      $scope.$parent.vs.somethingInProgress = true;\n      $scope.$parent.vs.somethingInProgressTxt = 'Loading local File: ' + $scope.wav.name;\n      // empty ssff files\n      $scope.$parent.ssffds.data = [];\n      $scope.$parent.levServ.data = {};\n      //arrBuff = Binarydatamaniphelper.base64ToArrayBuffer(bundleData.mediaFile.data);\n      $scope.$parent.vs.somethingInProgressTxt = 'Parsing WAV file...';\n      var reader = new FileReader();\n      reader.readAsArrayBuffer($scope.wav);\n      reader.onloadend = function (evt) {\n        if (evt.target.readyState == FileReader.DONE) {\n          $scope.$parent.io.httpGetPath('configFiles/standalone_emuwebappConfig.json').then(function (resp) {\n            // first element of perspectives is default perspective\n            $scope.$parent.vs.curPerspectiveIdx = 0;\n            $scope.$parent.cps.setVals(resp.data.EMUwebAppConfig);\n            delete resp.data.EMUwebAppConfig;\n            // delete to avoid duplicate\n            var validRes = Validationservice.validateJSO('emuwebappConfigSchema', ConfigProviderService.vals);\n            if (validRes === true) {\n              $scope.$parent.cps.curDbConfig = resp.data;\n              $scope.curBndl = {};\n              $scope.curBndl.name = $scope.wav.name.substr(0, $scope.wav.name.lastIndexOf('.'));\n              $scope.$parent.bundleList.push($scope.curBndl);\n              $scope.$parent.curBndl = $scope.curBndl;\n              // then get the DBconfigFile\n              var res;\n              if ($scope.firefox) {\n                res = evt.target.result;\n              } else {\n                res = evt.currentTarget.result;\n              }\n              $scope.$parent.wps.parseWavArrBuf(res).then(function (wavJSO) {\n                $scope.$parent.vs.curViewPort.sS = 0;\n                $scope.$parent.vs.curViewPort.eS = wavJSO.Data.length;\n                $scope.$parent.vs.resetSelect();\n                $scope.$parent.vs.curPerspectiveIdx = 0;\n                $scope.$parent.shs.wavJSO = wavJSO;\n                // parsing of Textgrid Data\n                if (!$.isEmptyObject($scope.grid)) {\n                  var reader = new FileReader();\n                  reader.readAsText($scope.grid);\n                  reader.onloadend = function (evt) {\n                    if (evt.target.readyState == FileReader.DONE) {\n                      var extension = $scope.wav.name.substr(0, $scope.wav.name.lastIndexOf('.'));\n                      Textgridparserservice.asyncParseTextGrid(evt.currentTarget.result, $scope.wav.name, extension).then(function (parseMess) {\n                        var annot = parseMess.data;\n                        $scope.$parent.levServ.setData(annot);\n                        // console.log(JSON.stringify(l, undefined, 2));\n                        var lNames = [];\n                        var levelDefs = [];\n                        annot.levels.forEach(function (l) {\n                          lNames.push(l.name);\n                          levelDefs.push({\n                            'name': l.name,\n                            'type': l.type,\n                            'attributeDefinitions': {\n                              'name': l.name,\n                              'type': 'string'\n                            }\n                          });\n                        });\n                        // set level defs\n                        $scope.$parent.cps.curDbConfig.levelDefinitions = levelDefs;\n                        $scope.$parent.vs.setCurLevelAttrDefs(ConfigProviderService.curDbConfig.levelDefinitions);\n                        $scope.$parent.cps.vals.perspectives[$scope.$parent.vs.curPerspectiveIdx].levelCanvases.order = lNames;\n                        $scope.$parent.vs.somethingInProgressTxt = 'Done!';\n                        $scope.$parent.vs.somethingInProgress = false;\n                        $scope.$parent.vs.setState('labeling');\n                      });\n                    }\n                  }, function (errMess) {\n                    $scope.$parent.dials.open('views/error.html', 'ModalCtrl', 'Error parsing textgrid file: ' + errMess.status.message);\n                  };\n                } else {\n                  $scope.$parent.vs.setState('labeling');\n                  $scope.$parent.vs.somethingInProgress = false;\n                  $scope.$parent.vs.somethingInProgressTxt = 'Done!';\n                }\n              });\n            } else {\n              $scope.$parent.dials.open('views/error.html', 'ModalCtrl', 'Error validating ConfigProviderService.vals (emuwebappConfig data) : ' + JSON.stringify(validRes, null, 4));\n            }\n          }, function (errMess) {\n            $scope.$parent.dials.open('views/error.html', 'ModalCtrl', 'Error parsing wav file: ' + errMess.status.message);\n          });\n        }\n      };\n    };\n    $scope.traverseFileTreeChrome = function (item, path) {\n      path = path || '';\n      if (item.isFile) {\n        item.file(function (file) {\n          var extension = file.name.substr(file.name.lastIndexOf('.') + 1).toUpperCase();\n          if (extension === 'WAV') {\n            $scope.wav = file;\n            $scope.handleLocalFiles();\n          } else if (extension === 'TEXTGRID') {\n            $scope.grid = file;\n          } else {\n            $scope.other = file;\n            $scope.$parent.dials.open('views/error.html', 'ModalCtrl', 'Error: Unknown File Type for File ' + $scope.other.name).then(function (res) {\n              $scope.resetToInitState();\n              $scope.$parent.resetToInitState();\n            });\n          }\n        });\n      } else if (item.isDirectory) {\n        var dirReader = item.createReader();\n        dirReader.readEntries(function (entries) {\n          for (var i = 0; i < entries.length; i++) {\n            $scope.traverseFileTreeChrome(entries[i], path + item.name + '/');\n          }\n        });\n      }\n    };\n    $scope.traverseFileTreeFirefox = function (item, path) {\n      path = path || '';\n      if (item.size > 0) {\n        var extension = item.name.substr(item.name.lastIndexOf('.') + 1).toUpperCase();\n        if (extension === 'WAV') {\n          $scope.wav = item;\n          $scope.handleLocalFiles();\n        } else if (extension === 'TEXTGRID') {\n          $scope.grid = item;\n        } else {\n          $scope.other = item;\n          $scope.$parent.dials.open('views/error.html', 'ModalCtrl', 'Error: Unknown File Type for File ' + $scope.other.name).then(function (res) {\n            $scope.resetToInitState();\n            $scope.$parent.resetToInitState();\n          });\n        }\n      } else if (item.isDirectory) {\n        var dirReader = item.createReader();\n        dirReader.readEntries(function (entries) {\n          for (var i = 0; i < entries.length; i++) {\n            $scope.traverseFileTreeFirefox(entries[i], path + item.name + '/');\n          }\n        });\n      }\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').directive('level', [\n  '$animate',\n  'viewState',\n  'ConfigProviderService',\n  'Drawhelperservice',\n  'HistoryService',\n  'fontScaleService',\n  'dialogService',\n  'LevelService',\n  function ($animate, viewState, ConfigProviderService, Drawhelperservice, HistoryService, fontScaleService, dialogService, LevelService) {\n    return {\n      templateUrl: 'views/level.html',\n      restrict: 'E',\n      scope: {\n        level: '=',\n        idx: '='\n      },\n      link: function postLink(scope, element, attr) {\n        // select the needed DOM items from the template\n        var canvas = element.find('canvas');\n        scope.open = attr.open;\n        scope.vs = viewState;\n        scope.hists = HistoryService;\n        scope.cps = ConfigProviderService;\n        scope.dials = dialogService;\n        var levelCanvasContainer = element.find('div');\n        scope.levelDef = ConfigProviderService.getLevelDefinition(scope.level.name);\n        // curAttrDef = scope.level.name;\n        scope.backgroundCanvas = { 'background': ConfigProviderService.vals.colors.levelColor };\n        // on broadcast msg from main ctrl openSubmenu refresh timeline\n        scope.$on('refreshTimeline', function () {\n          drawLevelDetails(scope.level, viewState, ConfigProviderService);\n          drawLevelMarkup(scope.level, viewState, ConfigProviderService);\n        });\n        ///////////////\n        // watches\n        //\n        scope.$watch('vs.curViewPort', function (newValue, oldValue) {\n          if (oldValue.sS !== newValue.sS || oldValue.eS !== newValue.eS || oldValue.windowWidth !== newValue.windowWidth) {\n            drawLevelDetails(scope.level, viewState, ConfigProviderService);\n            drawLevelMarkup(scope.level, viewState, ConfigProviderService);  //console.log('leveldraw update A');\n          } else {\n            //console.log('leveldraw update B');\n            drawLevelMarkup(scope.level, viewState, ConfigProviderService);\n          }\n        }, true);\n        //\n        scope.$watch('vs.curMouseX', function (newValue, oldValue) {\n          // only repaint if mouse over current level\n          if (viewState.getcurMouseLevelName() === scope.level.name) {\n            //if (!oldValue || !newValue || newValue.id !== oldValue.id) {\n            //\tdrawLevelMarkup(scope.level, viewState, ConfigProviderService);\n            //} else {\n            drawLevelDetails(scope.level, viewState, ConfigProviderService);\n            drawLevelMarkup(scope.level, viewState, ConfigProviderService);  //}\n          }\n        }, true);\n        //\n        scope.$watch('vs.curClickLevelName', function (newValue, oldValue) {\n          if (newValue !== undefined) {\n            drawLevelMarkup(scope.level, viewState, ConfigProviderService);\n          }\n        }, true);\n        //\n        scope.$watch('vs.movingBoundarySample', function () {\n          drawLevelDetails(scope.level, viewState, ConfigProviderService);\n          drawLevelMarkup(scope.level, viewState, ConfigProviderService);\n        }, true);\n        //\n        scope.$watch('vs.movingBoundary', function () {\n          drawLevelMarkup(scope.level, viewState, ConfigProviderService);\n        }, true);\n        //\n        scope.$watch('hists.movesAwayFromLastSave', function () {\n          drawLevelDetails(scope.level, viewState, ConfigProviderService);\n          drawLevelMarkup(scope.level, viewState, ConfigProviderService);\n        }, true);\n        //\n        /////////////////\n        /**\n\t\t\t\t *\n\t\t\t\t */\n        scope.changeCurAttrDef = function (attrDefName, index) {\n          var curAttrDef = viewState.getCurAttrDef(scope.level.name);\n          if (curAttrDef !== attrDefName) {\n            // curAttrDef = attrDefName;\n            viewState.setCurAttrDef(scope.level.name, attrDefName, index);\n            if (!element.hasClass('emuwebapp-levelCanvasContainer-animate')) {\n              viewState.focusInTextField = false;\n              LevelService.deleteEditArea();\n              $animate.addClass(levelCanvasContainer, 'emuwebapp-levelCanvasContainer-animate', scope.finishedAnim);\n            }\n          }\n        };\n        /**\n\t\t\t\t *\n\t\t\t\t */\n        scope.finishedAnim = function () {\n          $animate.removeClass(levelCanvasContainer, 'emuwebapp-levelCanvasContainer-animate');\n          // redraw\n          drawLevelDetails(scope.level, viewState, ConfigProviderService);\n          drawLevelMarkup(scope.level, viewState, ConfigProviderService);\n        };\n        /**\n\t\t\t\t *\n\t\t\t\t */\n        scope.getAttrDefBtnColor = function (attrDefName) {\n          var curColor;\n          var curAttrDef = viewState.getCurAttrDef(scope.level.name);\n          if (attrDefName === curAttrDef) {\n            curColor = { 'background': '-webkit-radial-gradient(50% 50%, closest-corner, rgba(0, 0, 0, 1), rgba(0, 0, 0, 0) 60%)' };\n          } else {\n            curColor = { 'background-color': 'white' };\n          }\n          return curColor;\n        };\n        scope.updateView = function () {\n          if ($.isEmptyObject(scope.cps)) {\n            console.log('undef viewState');\n            return;\n          }\n          drawLevelDetails(scope.level, scope.vs, scope.cps);\n        };\n        ///////////////\n        // bindings\n        // on mouse leave reset viewState.\n        element.bind('mouseleave', function () {\n          viewState.setcurMouseSegment(undefined, undefined, undefined);\n          drawLevelMarkup(scope.level, viewState, ConfigProviderService);\n        });\n        /**\n\t\t\t\t * draw level details\n\t\t\t\t * @param levelDetails\n\t\t\t\t * @param viewState\n\t\t\t\t * @param cps\n\t\t\t\t */\n        function drawLevelDetails(levelDetails, viewState, config) {\n          var fontSize = config.vals.font.fontPxSize;\n          var curAttrDef = viewState.getCurAttrDef(scope.level.name);\n          if ($.isEmptyObject(levelDetails)) {\n            console.log('undef levelDetails');\n            return;\n          }\n          if ($.isEmptyObject(viewState)) {\n            console.log('undef viewState');\n            return;\n          }\n          if ($.isEmptyObject(config)) {\n            console.log('undef config');\n            return;\n          }\n          if (!scope.open) {\n            fontSize -= 1;\n          }\n          var ctx = canvas[0].getContext('2d');\n          ctx.clearRect(0, 0, canvas[0].width, canvas[0].height);\n          //predef vars\n          var sDist, posS, posE, horizontalText;\n          sDist = viewState.getSampleDist(canvas[0].width);\n          // draw name of level and type\n          var scaleY = ctx.canvas.height / ctx.canvas.offsetHeight;\n          if (levelDetails.name === curAttrDef) {\n            horizontalText = fontScaleService.getTextImageTwoLines(ctx, levelDetails.name, '(' + levelDetails.type + ')', fontSize, config.vals.font.fontType, config.vals.colors.labelColor, true);\n          } else {\n            horizontalText = fontScaleService.getTextImageTwoLines(ctx, levelDetails.name + ':' + curAttrDef, '(' + levelDetails.type + ')', fontSize, config.vals.font.fontType, config.vals.colors.labelColor, true);\n          }\n          ctx.drawImage(horizontalText, 0, ctx.canvas.height / 2 - fontSize * scaleY);\n          var segMId = viewState.getcurMouseSegment();\n          var segCId = viewState.getcurClickSegments();\n          var levelId = viewState.getcurClickLevelName();\n          var curID = -1;\n          // calculate generic max with of single char (m char used)\n          var mTxtImg = fontScaleService.getTextImage(ctx, 'm', fontSize - 2, config.vals.font.fontType, config.vals.colors.labelColor);\n          var mTxtImgWidth = fontScaleService.getLastImageWidth();\n          // calculate generic max with of single digit (0 digit used)\n          var zeroTxtImg = fontScaleService.getTextImage(ctx, '0', fontSize - 4, config.vals.font.fontType, config.vals.colors.endBoundaryColor);\n          var zeroTxtImgWidth = fontScaleService.getLastImageWidth();\n          if (levelDetails.type === 'SEGMENT') {\n            ctx.fillStyle = config.vals.colors.startBoundaryColor;\n            // draw segments\n            var e = levelDetails.items;\n            e.forEach(function (curEvt) {\n              ++curID;\n              if (curEvt.sampleStart >= viewState.curViewPort.sS && curEvt.sampleStart <= viewState.curViewPort.eS || curEvt.sampleStart + curEvt.sampleDur > viewState.curViewPort.sS && curEvt.sampleStart + curEvt.sampleDur < viewState.curViewPort.eS || curEvt.sampleStart < viewState.curViewPort.sS && curEvt.sampleStart + curEvt.sampleDur > viewState.curViewPort.eS) {\n                // get label\n                var curLabVal;\n                curEvt.labels.forEach(function (lab) {\n                  if (lab.name === curAttrDef) {\n                    curLabVal = lab.value;\n                  }\n                });\n                // draw segment start\n                //posS = Math.round(viewState.getPos(canvas[0].width, curEvt.sampleStart));\n                //posE = Math.round(viewState.getPos(canvas[0].width, curEvt.sampleStart + curEvt.sampleDur+1));\n                posS = viewState.getPos(canvas[0].width, curEvt.sampleStart);\n                posE = viewState.getPos(canvas[0].width, curEvt.sampleStart + curEvt.sampleDur + 1);\n                ctx.fillStyle = config.vals.colors.startBoundaryColor;\n                ctx.fillRect(posS, 0, 2, canvas[0].height / 2);\n                //draw segment end\n                ctx.fillStyle = config.vals.colors.endBoundaryColor;\n                ctx.fillRect(posE, canvas[0].height / 2, 2, canvas[0].height);\n                //check for enough space to stroke text\n                if (curLabVal !== undefined && posE - posS > mTxtImgWidth * curLabVal.length) {\n                  horizontalText = fontScaleService.getTextImage(ctx, curLabVal, fontSize - 2, config.vals.font.fontType, config.vals.colors.labelColor);\n                  var tW = fontScaleService.getLastImageWidth();\n                  var tX = posS + (posE - posS) / 2 - tW / 2;\n                  if (scope.open) {\n                    ctx.drawImage(horizontalText, 0, 0, horizontalText.width, horizontalText.height, tX, canvas[0].height / 2 - (fontSize - 2), horizontalText.width, horizontalText.height);\n                  } else {\n                    ctx.drawImage(horizontalText, 0, 0, horizontalText.width, horizontalText.height, tX, 0, horizontalText.width, horizontalText.height);\n                  }\n                }\n                // var hst1 = fontScaleService.getLastImageWidth();\n                // var tX1 = posS + (posE - posS) / 2 - hst1 / 2;\n                // var tX2 = posS + (posE - posS) / 2 - hst2 / 2;\n                //draw helper lines\n                if (scope.open) {\n                  var labelCenter = posS + (posE - posS) / 2;\n                  var hlY = canvas[0].height / 4;\n                  // start helper line\n                  ctx.strokeStyle = config.vals.colors.startBoundaryColor;\n                  ctx.beginPath();\n                  ctx.moveTo(posS, hlY);\n                  ctx.lineTo(labelCenter, hlY);\n                  ctx.lineTo(labelCenter, hlY + 5);\n                  ctx.stroke();\n                  hlY = canvas[0].height / 4 * 3;\n                  // end helper line\n                  ctx.strokeStyle = config.vals.colors.endBoundaryColor;\n                  ctx.beginPath();\n                  ctx.moveTo(posE, hlY);\n                  ctx.lineTo(labelCenter, hlY);\n                  ctx.lineTo(labelCenter, hlY - 5);\n                  ctx.stroke();\n                }\n                // if (posE - posS <= tW) {\n                // \tctx.strokeStyle = 'red';//config.vals.colors.startBoundaryColor;\n                // \tctx.beginPath();\n                // \tctx.moveTo(tX1 + hst1 / 2, canvas[0].height / 4 + 10);\n                // \tctx.lineTo(tX1 + hst1 / 2, canvas[0].height / 4 + 30);\n                // \tctx.stroke();\n                // }\n                // draw sampleStart numbers\n                //check for enough space to stroke text\n                if (posE - posS > zeroTxtImgWidth * curEvt.sampleStart.toString().length) {\n                  var horizontalSubText1 = fontScaleService.getTextImage(ctx, curEvt.sampleStart, fontSize - 4, config.vals.font.fontType, config.vals.colors.endBoundaryColor);\n                  ctx.drawImage(horizontalSubText1, 0, 0, horizontalText.width, horizontalText.height, posS + 3, 0, horizontalText.width, horizontalText.height);\n                }\n                // draw sampleDur numbers.\n                //sStW = fontScaleService.getLastImageWidth();\n                //var sDtW = ctx.measureText('dur: ' + curEvt.sampleDur).width;\n                //ctx.fillStyle = config.vals.colors.endBoundaryColor;\n                //check for enough space to stroke text\n                if (posE - posS > zeroTxtImgWidth * (5 + curEvt.sampleDur.toString().length)) {\n                  var horizontalSubText2 = fontScaleService.getTextImage(ctx, 'dur: ' + curEvt.sampleDur, fontSize - 4, config.vals.font.fontType, config.vals.colors.endBoundaryColor);\n                  var hst2 = fontScaleService.getLastImageWidth();\n                  ctx.drawImage(horizontalSubText2, 0, 0, horizontalText.width, horizontalText.height, posE - hst2, canvas[0].height / 4 * 3, horizontalText.width, horizontalText.height);  //ctx.fillText('dur: ' + curEvt.sampleDur, posE - sDtW, canvas[0].height - canvas[0].height / 12);\n                }\n              }\n            });\n          } else if (levelDetails.type === 'EVENT') {\n            ctx.fillStyle = config.vals.colors.startBoundaryColor;\n            // predef. vars\n            var perc;\n            levelDetails.items.forEach(function (curEvt) {\n              if (curEvt.samplePoint > viewState.curViewPort.sS && curEvt.samplePoint < viewState.curViewPort.eS) {\n                perc = Math.round(viewState.getPos(canvas[0].width, curEvt.samplePoint) + sDist / 2);\n                // get label\n                var curLabVal;\n                curEvt.labels.forEach(function (lab) {\n                  if (lab.name === curAttrDef) {\n                    curLabVal = lab.value;\n                  }\n                });\n                ctx.fillStyle = config.vals.colors.startBoundaryColor;\n                ctx.fillRect(perc, 0, 1, canvas[0].height / 2 - canvas[0].height / 10);\n                ctx.fillRect(perc, canvas[0].height / 2 + canvas[0].height / 10, 1, canvas[0].height / 2 - canvas[0].height / 10);\n                horizontalText = fontScaleService.getTextImage(ctx, curLabVal, fontSize - 2, config.vals.font.fontType, config.vals.colors.labelColor);\n                ctx.drawImage(horizontalText, 0, 0, horizontalText.width, horizontalText.height, perc - 5, canvas[0].height / 3, horizontalText.width, horizontalText.height);\n                horizontalText = fontScaleService.getTextImage(ctx, curEvt.samplePoint, fontSize - 4, config.vals.font.fontType, config.vals.colors.endBoundaryColor);\n                ctx.drawImage(horizontalText, 0, 0, horizontalText.width, horizontalText.height, perc + 5, 0, horizontalText.width, horizontalText.height);\n              }\n            });\n          }  // draw cursor/selected area\n        }\n        /**\n\t\t\t\t *\n\t\t\t\t */\n        function drawLevelMarkup(levelDetails, viewState, config) {\n          var ctx = canvas[1].getContext('2d');\n          ctx.clearRect(0, 0, canvas[1].width, canvas[1].height);\n          if (levelDetails.name === viewState.getcurClickLevelName()) {\n            ctx.fillStyle = config.vals.colors.selectedLevelColor;\n            ctx.fillRect(0, 0, canvas[0].width, canvas[0].height);\n          }\n          // draw moving boundary line if moving\n          Drawhelperservice.drawMovingBoundaryLine(ctx);\n          // draw current viewport selected\n          Drawhelperservice.drawCurViewPortSelected(ctx);\n          var posS, posE, sDist, xOffset, curEvt;\n          posS = viewState.getPos(canvas[1].width, viewState.curViewPort.selectS);\n          posE = viewState.getPos(canvas[1].width, viewState.curViewPort.selectE);\n          sDist = viewState.getSampleDist(canvas[1].width);\n          var segMId = viewState.getcurMouseSegment();\n          var isFirst = viewState.getcurMouseisFirst();\n          var isLast = viewState.getcurMouseisLast();\n          var clickedSegs = viewState.getcurClickSegments();\n          var levelId = viewState.getcurClickLevelName();\n          if (clickedSegs !== undefined) {\n            // draw clicked on selected areas\n            if (levelDetails.name === levelId && clickedSegs.length > 0) {\n              clickedSegs.forEach(function (cs) {\n                if (cs !== undefined) {\n                  // check if segment or event level\n                  if (cs.sampleStart !== undefined) {\n                    posS = Math.round(viewState.getPos(canvas[0].width, cs.sampleStart));\n                    posE = Math.round(viewState.getPos(canvas[0].width, cs.sampleStart + cs.sampleDur + 1));\n                  } else {\n                    posS = Math.round(viewState.getPos(canvas[0].width, cs.samplePoint) + sDist / 2);\n                    posS = posS - 5;\n                    posE = posS + 10;\n                  }\n                  ctx.fillStyle = config.vals.colors.selectedSegmentColor;\n                  ctx.fillRect(posS, 0, posE - posS, canvas[0].height);\n                  ctx.fillStyle = config.vals.colors.startBoundaryColor;\n                }\n              });\n            }\n          }\n          // draw preselected boundary\n          curEvt = viewState.getcurMouseSegment();\n          if (curEvt !== undefined && segMId !== undefined && levelDetails.name === viewState.getcurMouseLevelName()) {\n            ctx.fillStyle = config.vals.colors.selectedBoundaryColor;\n            if (isFirst === true) {\n              // before first segment\n              if (viewState.getcurMouseLevelType() === 'SEGMENT') {\n                curEvt = levelDetails.items[0];\n                posS = Math.round(viewState.getPos(canvas[1].width, curEvt.sampleStart));\n                ctx.fillRect(posS, 0, 3, canvas[1].height);\n              }\n            } else if (isLast === true) {\n              // after last segment\n              if (viewState.getcurMouseLevelType() === 'SEGMENT') {\n                curEvt = levelDetails.items[levelDetails.items.length - 1];\n                posS = Math.round(viewState.getPos(canvas[1].width, curEvt.sampleStart + curEvt.sampleDur + 1));\n                // +1 because boundaries are drawn on sampleStart\n                ctx.fillRect(posS, 0, 3, canvas[1].height);\n              }\n            } else {\n              // in the middle\n              if (viewState.getcurMouseLevelType() === 'SEGMENT') {\n                posS = Math.round(viewState.getPos(canvas[1].width, curEvt.sampleStart));\n                ctx.fillRect(posS, 0, 3, canvas[1].height);\n              } else {\n                posS = Math.round(viewState.getPos(canvas[1].width, curEvt.samplePoint));\n                xOffset = sDist / 2;\n                ctx.fillRect(posS + xOffset, 0, 3, canvas[1].height);\n              }\n            }\n            ctx.fillStyle = config.vals.colors.startBoundaryColor;\n          }\n        }\n      }\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').directive('osci', [\n  '$timeout',\n  'viewState',\n  'Soundhandlerservice',\n  'ConfigProviderService',\n  'Drawhelperservice',\n  function ($timeout, viewState, Soundhandlerservice, ConfigProviderService, Drawhelperservice) {\n    return {\n      templateUrl: 'views/osci.html',\n      replace: true,\n      restrict: 'E',\n      scope: {},\n      controller: [\n        '$scope',\n        function ($scope) {\n          $scope.changeAttrDef = function () {\n            alert('sadf');\n          };\n        }\n      ],\n      link: function postLink(scope, element, attrs) {\n        // select the needed DOM elements from the template\n        var canvasLength = element.find('canvas').length;\n        var canvas = element.find('canvas')[0];\n        var markupCanvas = element.find('canvas')[canvasLength - 1];\n        // assign attributes to scope\n        scope.order = attrs.order;\n        scope.trackName = attrs.trackName;\n        scope.cps = ConfigProviderService;\n        scope.viewState = viewState;\n        ///////////////\n        // watches\n        // on broadcast msg from main ctrl openSubmenu refresh timeline\n        scope.$on('refreshTimeline', function () {\n          if (!$.isEmptyObject(Soundhandlerservice)) {\n            if (!$.isEmptyObject(Soundhandlerservice.wavJSO)) {\n              drawVpOsciMarkup(scope, ConfigProviderService, true);\n            }\n          }\n        });\n        //\n        scope.$watch('viewState.timelineSize', function () {\n          $timeout(scope.redraw, 10);\n        });\n        //\n        scope.$watch('viewState.curPerspectiveIdx', function () {\n          drawVpOsciMarkup(scope, ConfigProviderService, true);\n        }, true);\n        //\n        scope.$watch('viewState.playHeadAnimationInfos', function () {\n          if (!$.isEmptyObject(Soundhandlerservice)) {\n            if (!$.isEmptyObject(Soundhandlerservice.wavJSO)) {\n              drawPlayHead(scope, ConfigProviderService);\n            }\n          }\n        }, true);\n        //\n        scope.$watch('viewState.movingBoundarySample', function (newValue) {\n          if (!$.isEmptyObject(Soundhandlerservice)) {\n            if (!$.isEmptyObject(Soundhandlerservice.wavJSO)) {\n              drawVpOsciMarkup(scope, ConfigProviderService, true);\n            }\n          }\n        }, true);\n        //\n        scope.$watch('viewState.movingBoundary', function () {\n          if (!$.isEmptyObject(Soundhandlerservice)) {\n            if (!$.isEmptyObject(Soundhandlerservice.wavJSO)) {\n              drawVpOsciMarkup(scope, ConfigProviderService, true);\n            }\n          }\n        }, true);\n        //\n        scope.$watch('viewState.curViewPort', function (newValue, oldValue) {\n          if (!$.isEmptyObject(Soundhandlerservice)) {\n            if (!$.isEmptyObject(Soundhandlerservice.wavJSO)) {\n              // check for changed zoom\n              if (oldValue.sS !== newValue.sS || oldValue.eS !== newValue.eS) {\n                var allPeakVals = Drawhelperservice.calculatePeaks(viewState, canvas, Soundhandlerservice.wavJSO.Data);\n                Drawhelperservice.osciPeaks = allPeakVals;\n                Drawhelperservice.freshRedrawDrawOsciOnCanvas(viewState, canvas, Drawhelperservice.osciPeaks, Soundhandlerservice.wavJSO.Data, ConfigProviderService);\n              }\n              drawVpOsciMarkup(scope, ConfigProviderService, true);\n            }\n          }\n        }, true);\n        //\n        /////////////////////////\n        scope.redraw = function () {\n          drawVpOsciMarkup(scope, ConfigProviderService, true);\n        };\n        /**\n\t\t\t\t *\n\t\t\t\t */\n        function drawPlayHead(scope, config) {\n          var ctx = markupCanvas.getContext('2d');\n          ctx.clearRect(0, 0, canvas.width, canvas.height);\n          var posS = viewState.getPos(markupCanvas.width, viewState.playHeadAnimationInfos.sS);\n          var posCur = viewState.getPos(markupCanvas.width, viewState.playHeadAnimationInfos.curS);\n          // console.log(viewState.playHeadAnimationInfos.curS)\n          ctx.fillStyle = ConfigProviderService.vals.colors.selectedAreaColor;\n          ctx.fillRect(posS, 0, posCur - posS, canvas.height);\n          //console.log(posS,posCur);\n          drawVpOsciMarkup(scope, config, false);\n        }\n        /**\n\t\t\t\t * draws markup of osci according to\n\t\t\t\t * the information that is specified in\n\t\t\t\t * the viewport\n\t\t\t\t */\n        function drawVpOsciMarkup(scope, config, reset) {\n          var ctx = markupCanvas.getContext('2d');\n          if (reset) {\n            ctx.clearRect(0, 0, markupCanvas.width, markupCanvas.height);\n          }\n          // draw moving boundary line if moving\n          Drawhelperservice.drawMovingBoundaryLine(ctx);\n          Drawhelperservice.drawViewPortTimes(ctx, true);\n          // draw current viewport selected\n          Drawhelperservice.drawCurViewPortSelected(ctx, true);\n        }\n      }\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').directive('preview', [\n  'viewState',\n  'Soundhandlerservice',\n  'Drawhelperservice',\n  'ConfigProviderService',\n  function (viewState, Soundhandlerservice, Drawhelperservice, ConfigProviderService) {\n    return {\n      templateUrl: 'views/preview.html',\n      restrict: 'E',\n      scope: { currentBundleName: '@' },\n      link: function postLink(scope, element) {\n        // select the needed DOM elements from the template and init vals\n        var canvas = element.find('canvas')[0];\n        var markupCanvas = element.find('canvas')[1];\n        var initialized = false;\n        // hook up scope vars for watches\n        scope.vs = viewState;\n        scope.shs = Soundhandlerservice;\n        scope.backgroundCanvas = {\n          'background': '#eee',\n          'border': '1px solid gray',\n          'width': '100%',\n          'height': '100%'\n        };\n        /////////////////////\n        // watches\n        //\n        scope.$watch('vs.curViewPort', function (newVal, oldVal) {\n          if (!$.isEmptyObject(Soundhandlerservice.wavJSO)) {\n            if (oldVal.sS !== newVal.sS || oldVal.eS !== newVal.eS) {\n              drawPreview();\n            }\n          }\n        }, true);\n        //\n        scope.$watch('currentBundleName', function () {\n          if (!$.isEmptyObject(Soundhandlerservice.wavJSO)) {\n            initialized = false;\n            scope.backgroundCanvas = {\n              'background': ConfigProviderService.vals.colors.levelColor,\n              'border': '1px solid gray',\n              'width': '100%',\n              'height': '100%'\n            };\n            drawPreview();\n          }\n          //clear on empty bundle name\n          if (scope.currentBundleName === '') {\n            var ctx = canvas.getContext('2d');\n            var ctxMarkup = markupCanvas.getContext('2d');\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n            ctxMarkup.clearRect(0, 0, canvas.width, canvas.height);\n          }\n        }, true);\n        //\n        /////////////////////\n        /**\n\t\t\t\t *\n\t\t\t\t */\n        function drawPreview() {\n          if (!initialized) {\n            var allPeakVals = Drawhelperservice.calculatePeaks(viewState, canvas, Soundhandlerservice.wavJSO.Data);\n            Drawhelperservice.osciPeaks = allPeakVals;\n            Drawhelperservice.freshRedrawDrawOsciOnCanvas(viewState, canvas, Drawhelperservice.osciPeaks, Soundhandlerservice.wavJSO.Data, ConfigProviderService);\n            initialized = true;\n            drawVpOsciMarkup(viewState, canvas, ConfigProviderService);\n          } else {\n            drawVpOsciMarkup(viewState, canvas, ConfigProviderService);\n          }\n        }\n        /**\n\t\t\t\t * draws markup of osci according to\n\t\t\t\t * the information that is specified in\n\t\t\t\t * the viewport\n\t\t\t\t */\n        function drawVpOsciMarkup(vs, canvas, config) {\n          var ctx = markupCanvas.getContext('2d');\n          var posS = markupCanvas.width / Soundhandlerservice.wavJSO.Data.length * vs.curViewPort.sS;\n          var posE = markupCanvas.width / Soundhandlerservice.wavJSO.Data.length * vs.curViewPort.eS;\n          ctx.clearRect(0, 0, markupCanvas.width, markupCanvas.height);\n          ctx.fillStyle = config.vals.colors.selectedAreaColor;\n          ctx.fillRect(posS, 0, posE - posS, markupCanvas.height);\n          ctx.strokeStyle = config.vals.colors.selectedBorderColor;\n          ctx.beginPath();\n          ctx.moveTo(posS, 0);\n          ctx.lineTo(posS, markupCanvas.height);\n          ctx.moveTo(posE, 0);\n          ctx.lineTo(posE, markupCanvas.height);\n          ctx.closePath();\n          ctx.stroke();\n        }\n      }\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').directive('bundleListSideBar', [\n  '$animate',\n  'viewState',\n  function ($animate, viewState) {\n    return {\n      templateUrl: 'views/bundleListSideBar.html',\n      restrict: 'E',\n      replace: true,\n      link: function postLink(scope, element, attr) {\n        ////////////////\n        //watches\n        scope.$watch('vs.submenuOpen', function () {\n          if (scope.vs.submenuOpen) {\n            $animate.removeClass(element, 'emuwebapp-shrinkWidthTo0px');\n            $animate.addClass(element, 'emuwebapp-expandWidthTo240px');\n          } else {\n            $animate.addClass(element, 'emuwebapp-shrinkWidthTo0px');\n          }\n        }, true);\n      }\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').directive('spectro', [\n  '$timeout',\n  'fontScaleService',\n  function ($timeout, fontScaleService) {\n    return {\n      templateUrl: 'views/spectro.html',\n      restrict: 'E',\n      replace: true,\n      link: function postLink(scope, element, attrs) {\n        scope.order = attrs.order;\n        // select the needed DOM elements from the template\n        var canvasLength = element.find('canvas').length;\n        var canvas0 = element.find('canvas')[0];\n        var canvas1 = element.find('canvas')[canvasLength - 1];\n        // FFT default vars\n        var alpha = 0.16;\n        // default alpha for Window Function\n        var context = canvas0.getContext('2d');\n        var markupCtx = canvas1.getContext('2d');\n        var pcmperpixel = 0;\n        window.URL = window.URL || window.webkitURL;\n        var devicePixelRatio = window.devicePixelRatio || 1;\n        var spectroWorker = 'scripts/workers/spectroWorker.js';\n        var primeWorker = new Worker(spectroWorker);\n        var currentImage;\n        ///////////////\n        // watches\n        //\n        scope.$watch('vs.timelineSize', function () {\n          if (!$.isEmptyObject(scope.shs)) {\n            if (!$.isEmptyObject(scope.shs.wavJSO)) {\n              $timeout(scope.redraw, 5);\n            }\n          }\n        });\n        scope.$watch('vs.curViewPort', function (newValue, oldValue) {\n          if (!$.isEmptyObject(scope.shs)) {\n            if (!$.isEmptyObject(scope.shs.wavJSO)) {\n              // check for changed zoom\n              if (oldValue.sS !== newValue.sS || oldValue.eS !== newValue.eS) {\n                scope.redraw();\n              }\n              drawSpectMarkup(true);\n            }\n          }\n        }, true);\n        scope.$watch('vs.movingBoundarySample', function () {\n          if (!$.isEmptyObject(scope.shs)) {\n            if (!$.isEmptyObject(scope.shs.wavJSO)) {\n              markupCtx.clearRect(0, 0, canvas1.width, canvas1.height);\n              drawSpectMarkup();\n            }\n          }\n        }, true);\n        scope.$watch('vs.movingBoundary', function () {\n          if (!$.isEmptyObject(scope.shs)) {\n            if (!$.isEmptyObject(scope.shs.wavJSO)) {\n              // scope.redraw();\n              drawSpectMarkup(true);\n            }\n          }\n        }, true);\n        scope.$watch('vs.spectroSettings', function () {\n          if (!$.isEmptyObject(scope.shs)) {\n            if (!$.isEmptyObject(scope.shs.wavJSO)) {\n              setupEvent();\n              scope.redraw();\n            }\n          }\n        }, true);\n        ///////////////\n        // bindings\n        scope.redraw = function () {\n          pcmpp();\n          markupCtx.clearRect(0, 0, canvas1.width, canvas1.height);\n          drawSpectro(scope.shs.wavJSO.Data);\n        };\n        function pcmpp() {\n          pcmperpixel = (scope.vs.curViewPort.eS + 1 - scope.vs.curViewPort.sS) / canvas0.width;\n        }\n        function drawSpectMarkup(reset) {\n          if (reset) {\n            markupCtx.clearRect(0, 0, canvas1.width, canvas1.height);\n          }\n          // draw moving boundary line if moving\n          scope.dhs.drawMovingBoundaryLine(markupCtx);\n          // draw current viewport selected\n          scope.dhs.drawCurViewPortSelected(markupCtx, false);\n          // draw min max vals and name of track\n          scope.dhs.drawMinMaxAndName(markupCtx, '', scope.vs.spectroSettings.rangeFrom, scope.vs.spectroSettings.rangeTo, 2);\n        }\n        function killSpectroRenderingThread() {\n          context.fillStyle = scope.cps.vals.colors.levelColor;\n          context.fillRect(0, 0, canvas0.width, canvas0.height);\n          // draw current viewport selected\n          scope.dhs.drawCurViewPortSelected(markupCtx, false);\n          var horizontalText = fontScaleService.getTextImage(context, 'rendering...', scope.cps.vals.font.fontPxSize * 0.75, scope.cps.vals.font.fontType, scope.cps.vals.colors.labelColor, true);\n          context.drawImage(horizontalText, 10, 50);\n          if (primeWorker !== null) {\n            primeWorker.terminate();\n            primeWorker = null;\n          }\n        }\n        function setupEvent() {\n          //pcmperpixel = Math.round((scope.vs.curViewPort.eS - scope.vs.curViewPort.sS) / canvas0.width);\n          pcmpp();\n          var imageData = context.createImageData(canvas0.width, canvas0.height);\n          primeWorker.addEventListener('message', function (event) {\n            if (pcmperpixel === event.data.myStep) {\n              var tmp = new Uint8ClampedArray(event.data.img);\n              imageData.data.set(tmp);\n              context.putImageData(imageData, 0, 0);\n              drawSpectMarkup();\n            }\n          });\n        }\n        function drawSpectro(buffer) {\n          killSpectroRenderingThread();\n          //markupCtx.clearRect(0, 0, canvas1.width, canvas1.height);\n          startSpectroRenderingThread(buffer);\n        }\n        function startSpectroRenderingThread(buffer) {\n          pcmpp();\n          primeWorker = new Worker(spectroWorker);\n          // var parseData = new Float32Array(buffer.subarray(scope.vs.curViewPort.sS, scope.vs.curViewPort.eS + Math.round(pcmperpixel * 20 * scope.vs.spectroSettings.windowLength)));\n          var parseData;\n          if (scope.vs.curViewPort.sS >= scope.vs.spectroSettings.windowLength / 2) {\n            parseData = new Float32Array(buffer.subarray(scope.vs.curViewPort.sS - scope.vs.spectroSettings.windowLength / 2, scope.vs.curViewPort.eS + scope.vs.spectroSettings.windowLength));  // pass in half a window extra at the front and a full window extra at the back so everything can be drawn/calculated this also fixes alignment issue\n          } else {\n            parseData = new Float32Array(buffer.subarray(scope.vs.curViewPort.sS, scope.vs.curViewPort.eS + scope.vs.spectroSettings.windowLength));  // tolerate window/2 alignment issue if at beginning of file\n          }\n          setupEvent();\n          primeWorker.postMessage({\n            'N': scope.vs.spectroSettings.windowLength,\n            'alpha': alpha,\n            'freq': scope.vs.spectroSettings.rangeTo,\n            'freqLow': scope.vs.spectroSettings.rangeFrom,\n            'start': scope.vs.curViewPort.sS,\n            'end': scope.vs.curViewPort.eS,\n            'myStep': pcmperpixel,\n            'window': scope.vs.spectroSettings.window,\n            'width': canvas0.width,\n            'height': canvas0.height,\n            'dynRangeInDB': scope.vs.spectroSettings.dynamicRange,\n            'pixelRatio': devicePixelRatio,\n            'sampleRate': scope.shs.wavJSO.SampleRate,\n            'streamChannels': scope.shs.wavJSO.NumChannels,\n            'transparency': scope.cps.vals.spectrogramSettings.transparency,\n            'stream': parseData.buffer,\n            'drawHeatMapColors': scope.vs.spectroSettings.drawHeatMapColors,\n            'preEmphasisFilterFactor': scope.vs.spectroSettings.preEmphasisFilterFactor,\n            'heatMapColorAnchors': scope.vs.spectroSettings.heatMapColorAnchors\n          }, [parseData.buffer]);\n        }\n      }\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').controller('ExportCtrl', [\n  '$scope',\n  'dialogService',\n  'exportData',\n  'exportName',\n  'viewState',\n  'HistoryService',\n  function ($scope, dialogService, exportData, exportName, viewState, HistoryService) {\n    $scope.exportData = exportData;\n    $scope.exportName = exportName;\n    $scope.firefox = navigator.userAgent.match(/Firefox/i) ? true : false;\n    /**\n\t\t *\n\t\t */\n    $scope.cancel = function () {\n      dialogService.close();\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.getBlob = function () {\n      return new Blob([$scope.exportData], { type: 'text/plain' });\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.export = function () {\n      $scope.SaveToDisk(URL.createObjectURL($scope.getBlob()), $scope.exportName);\n      dialogService.close();\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.updateHistoryService = function () {\n      HistoryService.movesAwayFromLastSave = 0;\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.cursorInTextField = function () {\n      viewState.focusInTextField = true;\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.cursorOutOfTextField = function () {\n      viewState.focusInTextField = false;\n    };\n    /**\n\t\t *  Save file to disk // Non-IE ONLY !!\n\t\t */\n    $scope.SaveToDisk = function (fileURL, fileName) {\n      var save = document.createElement('a');\n      if ($scope.firefox) {\n        save.setAttribute('download', fileName);\n        save.href = fileURL;\n        save.innerHTML = '';\n        save.style.display = 'none';\n        document.body.appendChild(save);\n        save.click();\n      } else {\n        save.href = fileURL;\n        save.target = '_blank';\n        save.download = fileName || 'unknown';\n        var event = document.createEvent('Event');\n        event.initEvent('click', true, true);\n        save.dispatchEvent(event);\n        (window.URL || window.webkitURL).revokeObjectURL(save.href);\n      }\n      $scope.updateHistoryService();\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').factory('viewState', [\n  '$rootScope',\n  '$timeout',\n  '$window',\n  'Soundhandlerservice',\n  function ($rootScope, $timeout, $window, Soundhandlerservice) {\n    //shared service object to be returned\n    var sServObj = {};\n    // window functions enum for spectro\n    var myWindow = {\n        BARTLETT: 1,\n        BARTLETTHANN: 2,\n        BLACKMAN: 3,\n        COSINE: 4,\n        GAUSS: 5,\n        HAMMING: 6,\n        HANN: 7,\n        LANCZOS: 8,\n        RECTANGULAR: 9,\n        TRIANGULAR: 10\n      };\n    // hold the current attribute definitions that are in view \n    var curLevelAttrDefs = [];\n    /**\n     * initialize all needed vars in viewState\n     */\n    sServObj.initialize = function () {\n      sServObj.curViewPort = {\n        sS: 0,\n        eS: 0,\n        selectS: -1,\n        selectE: -1,\n        dragBarActive: false,\n        dragBarHeight: -1,\n        windowWidth: undefined\n      };\n      sServObj.spectroSettings = {\n        windowLength: -1,\n        rangeFrom: -1,\n        rangeTo: -1,\n        dynamicRange: -1,\n        window: -1,\n        drawHeatMapColors: -1,\n        preEmphasisFilterFactor: -1\n      };\n      sServObj.playHeadAnimationInfos = {\n        sS: -1,\n        eS: -1,\n        curS: null,\n        endFreezeSample: -1\n      };\n      sServObj.timelineSize = -1;\n      sServObj.somethingInProgress = false;\n      sServObj.somethingInProgressTxt = '';\n      sServObj.curClickSegments = [];\n      sServObj.editing = false;\n      sServObj.submenuOpen = false;\n      sServObj.rightSubmenuOpen = false;\n      sServObj.curMousePosSample = 0;\n      sServObj.curMouseLevelName = undefined;\n      sServObj.curMouseLevelType = undefined;\n      sServObj.curClickLevelName = undefined;\n      sServObj.curClickLevelType = undefined;\n      sServObj.curPreselColumnSample = 2;\n      sServObj.curCorrectionToolNr = undefined;\n      sServObj.curClickLevelIndex = undefined;\n      sServObj.start = null;\n      sServObj.TransitionTime = undefined;\n      sServObj.showDropZone = true;\n      sServObj.movingBoundary = false;\n      sServObj.movingBoundarySample = undefined;\n      sServObj.focusInTextField = false;\n      sServObj.curTaskPercCompl = 0;\n      sServObj.curPerspectiveIdx = -1;\n      sServObj.mouseInEmuWebApp = false;\n      // possible general states of state machine\n      sServObj.states = [];\n      sServObj.states.noDBorFilesloaded = {\n        'permittedActions': [\n          'connectBtnClick',\n          'openDemoBtnDBclick'\n        ]\n      };\n      sServObj.states.loadingSaving = { 'permittedActions': [] };\n      sServObj.states.labeling = {\n        'permittedActions': [\n          'zoom',\n          'playaudio',\n          'spectSettingsChange',\n          'addLevelSegBtnClick',\n          'addLevelPointBtnClick',\n          'renameSelLevelBtnClick',\n          'downloadTextGridBtnClick',\n          'spectSettingsChange',\n          'clearBtnClick',\n          'labelAction',\n          'toggleSideBars',\n          'saveBndlBtnClick'\n        ]\n      };\n      sServObj.states.modalShowing = sServObj.states.loadingSaving;\n      sServObj.prevState = sServObj.states.noDBorFilesloaded;\n      sServObj.curState = sServObj.states.noDBorFilesloaded;\n      curLevelAttrDefs = [];\n    };\n    // initialize on init\n    sServObj.initialize();\n    /**\n     * function to ask permission in current labeler state\n     */\n    sServObj.getPermission = function (actionName) {\n      return sServObj.curState.permittedActions.indexOf(actionName) > -1;\n    };\n    /**\n     *\n     */\n    sServObj.setWindowWidth = function (b) {\n      this.curViewPort.windowWidth = b;\n    };\n    /**\n     * set state\n     */\n    sServObj.setState = function (nameOrObj) {\n      sServObj.prevState = sServObj.curState;\n      if (typeof nameOrObj === 'string') {\n        sServObj.curState = sServObj.states[nameOrObj];\n      } else {\n        sServObj.curState = nameOrObj;\n      }\n    };\n    /**\n     *\n     */\n    sServObj.updatePlayHead = function (timestamp) {\n      // at first push animation !!!\n      if (Soundhandlerservice.player.isPlaying) {\n        $window.requestAnimationFrame(sServObj.updatePlayHead);\n      }\n      // do work in this animation round now\n      if (sServObj.start === null) {\n        sServObj.start = timestamp;\n      }\n      var samplesPassed = Math.floor(timestamp - sServObj.start) / 1000 * Soundhandlerservice.wavJSO.SampleRate;\n      sServObj.playHeadAnimationInfos.curS = Math.floor(sServObj.playHeadAnimationInfos.sS + samplesPassed);\n      if (Soundhandlerservice.player.isPlaying && sServObj.playHeadAnimationInfos.curS <= sServObj.playHeadAnimationInfos.eS) {\n        if (sServObj.playHeadAnimationInfos.curS !== -1) {\n          sServObj.curMousePosSample = sServObj.playHeadAnimationInfos.curS;\n        }\n        $rootScope.$apply();\n      } else {\n        sServObj.curMousePosSample = sServObj.playHeadAnimationInfos.endFreezeSample;\n        sServObj.playHeadAnimationInfos.sS = -1;\n        sServObj.playHeadAnimationInfos.eS = -1;\n        sServObj.playHeadAnimationInfos.curS = 0;\n        sServObj.start = null;\n      }\n    };\n    /**\n     *\n     */\n    sServObj.animatePlayHead = function (startS, endS) {\n      sServObj.playHeadAnimationInfos.sS = startS;\n      sServObj.playHeadAnimationInfos.eS = endS;\n      sServObj.playHeadAnimationInfos.endFreezeSample = endS;\n      sServObj.playHeadAnimationInfos.curS = startS;\n      $window.requestAnimationFrame(sServObj.updatePlayHead);\n    };\n    /**\n     * set selected Area\n     * @param start of selected Area\n     * @param end of selected Area\n     */\n    sServObj.select = function (start, end) {\n      sServObj.curViewPort.selectS = start;\n      sServObj.curViewPort.selectE = end;  //$rootScope.$digest();\n    };\n    /**\n     * reset selected Area to default\n     * @param length of current pcm stream\n     */\n    sServObj.resetSelect = function () {\n      sServObj.curViewPort.selectS = -1;\n      sServObj.curViewPort.selectE = -1;\n    };\n    /**\n     * gets the current Viewport\n     */\n    sServObj.getViewPort = function () {\n      return sServObj.curViewPort;\n    };\n    /**\n     * setspectroSettings\n     */\n    sServObj.setspectroSettings = function (len, rfrom, rto, dyn, win, hm, preEmph, hmColorAnchors) {\n      sServObj.spectroSettings.windowLength = parseInt(len, 10);\n      sServObj.spectroSettings.rangeFrom = parseInt(rfrom, 10);\n      sServObj.spectroSettings.rangeTo = parseInt(rto, 10);\n      sServObj.spectroSettings.dynamicRange = parseInt(dyn, 10);\n      sServObj.setWindowFunction(win);\n      sServObj.spectroSettings.drawHeatMapColors = hm;\n      sServObj.spectroSettings.preEmphasisFilterFactor = preEmph;\n      sServObj.spectroSettings.heatMapColorAnchors = hmColorAnchors;\n    };\n    /**\n     * returns current selection as array\n     */\n    sServObj.getSelect = function () {\n      return [\n        sServObj.curViewPort.selectS,\n        sServObj.curViewPort.selectE\n      ];\n    };\n    /**\n     * set selected Area if new\n     * start value is smaler than actual and\n     * end value is greater than actual\n     * @param start of selected Area\n     * @param end of seleected Area\n     */\n    sServObj.selectDependent = function (start, end) {\n      if (start < this.curViewPort.selectS) {\n        this.curViewPort.selectS = start;\n      }\n      if (end > this.curViewPort.selectE) {\n        this.curViewPort.selectE = end;\n      }\n    };\n    /**\n     *\n     */\n    sServObj.selectLevel = function (next, order, Levelserv) {\n      var curLev;\n      var now = sServObj.getcurClickLevelName();\n      if (now === undefined && !next) {\n        // select first if none prev. defined (up)\n        // viewState.setcurClickLevel(levelID, levelType, scope.$index, scope.this.level.items.length);\n        curLev = Levelserv.getLevelDetails(order[0]);\n        sServObj.setcurClickLevel(curLev.level.name, curLev.level.type, 0);\n        return;\n      } else if (now === undefined && next) {\n        // select last if none prev. defined (down)\n        curLev = Levelserv.getLevelDetails(order[order.length - 1]);\n        sServObj.setcurClickLevel(curLev.level.name, curLev.level.type, order.length - 1);\n        return;\n      }\n      var idxOfNow;\n      order.forEach(function (name, idx) {\n        if (name === now) {\n          idxOfNow = idx;\n        }\n      });\n      if (next) {\n        if (idxOfNow + 1 < order.length) {\n          curLev = Levelserv.getLevelDetails(order[idxOfNow + 1]);\n          // sServObj.setcurClickLevelName(order[idxOfNow + 1]);\n          sServObj.setcurClickLevel(curLev.level.name, curLev.level.type, order.idxOfNow + 1);\n          sServObj.curClickSegments = [];\n          sServObj.selectBoundary();  //sServObj.resetSelect();\n        }\n      } else {\n        if (idxOfNow - 1 >= 0) {\n          curLev = Levelserv.getLevelDetails(order[idxOfNow - 1]);\n          // sServObj.setcurClickLevelName(order[idxOfNow - 1]);\n          sServObj.setcurClickLevel(curLev.level.name, curLev.level.type, order.idxOfNow - 1);\n          sServObj.curClickSegments = [];\n          sServObj.selectBoundary();  //sServObj.resetSelect();\n        }\n      }\n    };\n    /**\n     * set the window Function for the Spectrogram\n     * @param name of Window Function\n     */\n    sServObj.setWindowFunction = function (name) {\n      switch (name) {\n      case 'BARTLETT':\n        sServObj.spectroSettings.window = myWindow.BARTLETT;\n        break;\n      case 'BARTLETTHANN':\n        sServObj.spectroSettings.window = myWindow.BARTLETTHANN;\n        break;\n      case 'BLACKMAN':\n        sServObj.spectroSettings.window = myWindow.BLACKMAN;\n        break;\n      case 'COSINE':\n        sServObj.spectroSettings.window = myWindow.COSINE;\n        break;\n      case 'GAUSS':\n        sServObj.spectroSettings.window = myWindow.GAUSS;\n        break;\n      case 'HAMMING':\n        sServObj.spectroSettings.window = myWindow.HAMMING;\n        break;\n      case 'HANN':\n        sServObj.spectroSettings.window = myWindow.HANN;\n        break;\n      case 'LANCZOS':\n        sServObj.spectroSettings.window = myWindow.LANCZOS;\n        break;\n      case 'RECTANGULAR':\n        sServObj.spectroSettings.window = myWindow.RECTANGULAR;\n        break;\n      case 'TRIANGULAR':\n        sServObj.spectroSettings.window = myWindow.TRIANGULAR;\n        break;\n      default:\n        sServObj.spectroSettings.window = myWindow.BARTLETTHANN;\n        break;\n      }\n    };\n    /**\n     * @returns myWindow object\n     */\n    sServObj.getWindowFunctions = function () {\n      return myWindow;\n    };\n    /**\n     * set if user is dragging dragbar\n     */\n    sServObj.getdragBarActive = function () {\n      return this.curViewPort.dragBarActive;\n    };\n    /**\n     * set if user is dragging dragbar\n     */\n    sServObj.setdragBarActive = function (b) {\n      this.curViewPort.dragBarActive = b;\n    };\n    /**\n     * set if user is dragging dragbar\n     */\n    sServObj.getdragBarHeight = function () {\n      return this.curViewPort.dragBarHeight;\n    };\n    /**\n     * set if user is dragging dragbar\n     */\n    sServObj.setdragBarHeight = function (b) {\n      this.curViewPort.dragBarHeight = b;\n    };\n    /**\n     * get pixel position in current viewport given the canvas width\n     * @param w is width of canvas\n     * @param s is current sample to convert to pixel value\n     */\n    sServObj.getPos = function (w, s) {\n      return w * (s - this.curViewPort.sS) / (this.curViewPort.eS - this.curViewPort.sS + 1);  // + 1 because of view (displays all samples in view)\n    };\n    /**\n     * calculate the pixel distance between two samples\n     * @param w is width of canvas\n     */\n    sServObj.getSampleDist = function (w) {\n      return this.getPos(w, this.curViewPort.sS + 1) - this.getPos(w, this.curViewPort.sS);\n    };\n    /**\n     * toggle boolean if left submenu is open\n     */\n    sServObj.togglesubmenuOpen = function (time) {\n      this.submenuOpen = !this.submenuOpen;\n      $timeout(function () {\n        $rootScope.$broadcast('refreshTimeline');\n      }, time, false);\n    };\n    /**\n     * get boolean if left submenu is open\n     */\n    sServObj.getsubmenuOpen = function () {\n      return this.submenuOpen;\n    };\n    /**\n     * set boolean if left submenu is open\n     */\n    sServObj.setsubmenuOpen = function (s) {\n      this.submenuOpen = s;\n    };\n    /**\n     * get the height of the osci\n     */\n    sServObj.setenlarge = function (s) {\n      this.timelineSize = s;\n    };\n    /**\n     * get the height of the osci\n     */\n    sServObj.getenlarge = function () {\n      return this.timelineSize;\n    };\n    /**\n     * get the height of the osci\n     */\n    sServObj.getTransitionTime = function () {\n      return this.TransitionTime;\n    };\n    /**\n     * get the height of the osci\n     */\n    sServObj.setTransitionTime = function (s) {\n      this.TransitionTime = s;\n    };\n    /**\n     * get the height of the osci\n     */\n    sServObj.getRightsubmenuOpen = function () {\n      return this.rightSubmenuOpen;\n    };\n    /**\n     * get the height of the osci\n     */\n    sServObj.setRightsubmenuOpen = function (s) {\n      this.rightSubmenuOpen = s;\n    };\n    /**\n     *\n     */\n    sServObj.setcurClickLevel = function (levelID, levelType, levelIndex) {\n      this.setcurClickLevelName(levelID, levelIndex);\n      this.setcurClickLevelType(levelType);\n    };\n    /**\n     * sets the current (clicked) Level Name\n     * @param name is name of level\n     */\n    sServObj.setcurClickLevelType = function (name) {\n      this.curClickLevelType = name;\n    };\n    /**\n     * gets the current (clicked) Level Name\n     */\n    sServObj.getcurClickLevelType = function () {\n      return this.curClickLevelType;\n    };\n    /**\n     * sets the current (clicked) Level Name\n     * @param name is name of level\n     */\n    sServObj.setcurClickLevelName = function (name, index) {\n      this.curClickLevelName = name;\n      this.curClickLevelIndex = index;\n    };\n    /**\n     * gets the current (clicked) Level Name\n     */\n    sServObj.getcurClickLevelName = function () {\n      return this.curClickLevelName;\n    };\n    /**\n     * gets the current (clicked) Level Name\n     */\n    sServObj.getcurClickLevelIndex = function () {\n      return this.curClickLevelIndex;\n    };\n    /**\n     * gets the current (clicked) Level Name\n     */\n    sServObj.getcurClickNeighbours = function () {\n      return this.curClickNeighbours;\n    };\n    /**\n     * sets the current (mousemove) Level Name\n     * @param name is name of level\n     */\n    sServObj.setcurMouseLevelName = function (name) {\n      this.curMouseLevelName = name;\n    };\n    /**\n     * gets the current (mousemove) Level Name\n     */\n    sServObj.getcurMouseLevelName = function () {\n      return this.curMouseLevelName;\n    };\n    /**\n     * sets the current (mousemove) Level Name\n     * @param name is name of level\n     */\n    sServObj.setcurMouseLevelType = function (name) {\n      this.curMouseLevelType = name;\n    };\n    /**\n     * gets the current (mousemove) Level Name\n     */\n    sServObj.getcurMouseLevelType = function () {\n      return this.curMouseLevelType;\n    };\n    /**\n     * sets the current (mousemove) Segment\n     * @param name is name of segment\n     */\n    sServObj.setcurMouseSegment = function (segment, neighbour, x, isFirst, isLast) {\n      this.curMouseSegment = segment;\n      this.curMouseX = x;\n      this.curMouseNeighbours = neighbour;\n      this.curMouseisFirst = isFirst;\n      this.curMouseisLast = isLast;\n    };\n    /**\n     * gets the current (mousemove) Segment\n     */\n    sServObj.getcurMouseSegment = function () {\n      return this.curMouseSegment;\n    };\n    /**\n     * gets the current (mousemove) Segment\n     */\n    sServObj.getcurMouseisFirst = function () {\n      return this.curMouseisFirst;\n    };\n    /**\n     * gets the current (mousemove) Segment\n     */\n    sServObj.getcurMouseisLast = function () {\n      return this.curMouseisLast;\n    };\n    /**\n     * gets the current (mousemove) Segment\n     */\n    sServObj.getcurMouseNeighbours = function () {\n      return this.curMouseNeighbours;\n    };\n    /**\n     * selects all Segements on current level which are inside the selected viewport\n     */\n    sServObj.selectSegmentsInSelection = function (levelData) {\n      sServObj.curClickSegments = [];\n      var min = Infinity;\n      var max = -Infinity;\n      var itemInSel = this.getItemsInSelection(levelData);\n      angular.forEach(itemInSel, function (item) {\n        if (item.sampleStart < min) {\n          min = item.sampleStart;\n        }\n        if (item.sampleStart + item.sampleDur + 1 > max) {\n          max = item.sampleStart + item.sampleDur + 1;\n        }\n        sServObj.setcurClickSegmentMultiple(item);\n      });\n      sServObj.curViewPort.selectS = min;\n      sServObj.curViewPort.selectE = max;\n    };\n    /**\n     * get all items of current level which are inside the selected viewport\n     */\n    sServObj.getItemsInSelection = function (levelData) {\n      var itemsInRange = [];\n      var rangeStart = sServObj.curViewPort.selectS;\n      var rangeEnd = sServObj.curViewPort.selectE;\n      angular.forEach(levelData, function (t) {\n        if (t.name === sServObj.getcurClickLevelName()) {\n          angular.forEach(t.items, function (item) {\n            //SEGMENTS\n            if (item.sampleStart >= rangeStart && item.sampleStart + item.sampleDur <= rangeEnd) {\n              itemsInRange.push(item);\n            }\n            //EVENTS\n            if (item.samplePoint >= rangeStart && item.samplePoint <= rangeEnd) {\n              itemsInRange.push(item);\n            }\n          });\n        }\n      });\n      return itemsInRange;\n    };\n    /**\n     * sets the current (click) Segment\n     * @param segment\n     */\n    sServObj.setcurClickSegment = function (segment) {\n      if (segment !== null && segment !== undefined) {\n        sServObj.curClickSegments = [];\n        sServObj.curClickSegments.push(segment);\n        sServObj.selectBoundary();\n      } else {\n        sServObj.curClickSegments = [];\n      }\n    };\n    /**\n     * sets a multiple select (click) Segment\n     */\n    sServObj.selectBoundary = function () {\n      if (sServObj.curClickSegments.length > 0) {\n        var left, right;\n        if (sServObj.curClickSegments[0].sampleStart !== undefined) {\n          left = sServObj.curClickSegments[0].sampleStart;\n        } else {\n          left = sServObj.curClickSegments[0].samplePoint;\n        }\n        right = sServObj.curClickSegments[sServObj.curClickSegments.length - 1].sampleStart + sServObj.curClickSegments[sServObj.curClickSegments.length - 1].sampleDur || sServObj.curClickSegments[0].samplePoint;\n        sServObj.curClickSegments.forEach(function (entry) {\n          if (entry.sampleStart <= left) {\n            left = entry.sampleStart;\n          }\n          if (entry.sampleStart + entry.sampleDur >= right) {\n            right = entry.sampleStart + entry.sampleDur;\n          }\n        });\n        sServObj.select(left, right + 1);\n      }\n    };\n    /**\n     * sets a multiple select (click) Segment\n     * @param segment\n     */\n    sServObj.setcurClickSegmentMultiple = function (segment) {\n      var empty = true;\n      var start = segment.sampleStart;\n      var end = start + segment.sampleDur + 1;\n      sServObj.curClickSegments.forEach(function (entry) {\n        var front = entry.sampleStart === end ? true : false;\n        var back = entry.sampleStart + entry.sampleDur + 1 === start ? true : false;\n        if ((front || back) && sServObj.curClickSegments.indexOf(segment) === -1) {\n          sServObj.curClickSegments.push(segment);\n          empty = false;\n        }\n      });\n      if (empty) {\n        sServObj.curClickSegments = [];\n        sServObj.curClickSegments.push(segment);\n      } else {\n        sServObj.curClickSegments.sort(sServObj.sortbyid);\n      }\n    };\n    /**\n     *\n     */\n    sServObj.sortbyid = function (a, b) {\n      //Compare \"a\" and \"b\" in some fashion, and return -1, 0, or 1\n      if (a.sampleStart > b.sampleStart) {\n        return 1;\n      }\n      if (a.sampleStart < b.sampleStart) {\n        return -1;\n      }\n      return 0;\n    };\n    /**\n     * gets the current (click) Segment\n     */\n    sServObj.getselectedRange = function () {\n      if (this.curClickSegments.length > 1) {\n        return {\n          start: this.curClickSegments[0].sampleStart,\n          end: this.curClickSegments[this.curClickSegments.length - 1].sampleStart + this.curClickSegments[this.curClickSegments.length - 1].sampleDur\n        };\n      } else if (this.curClickSegments.length === 1) {\n        if (this.curClickSegments[0].sampleStart !== undefined) {\n          return {\n            start: this.curClickSegments[0].sampleStart,\n            end: this.curClickSegments[0].sampleStart + this.curClickSegments[0].sampleDur\n          };\n        } else {\n          return {\n            start: this.curClickSegments[0].samplePoint,\n            end: this.curClickSegments[0].samplePoint\n          };\n        }\n      } else {\n        return {\n          start: -1,\n          end: -1\n        };\n      }\n    };\n    /**\n     * gets the current (click) Segments\n     */\n    sServObj.getcurClickSegments = function () {\n      return this.curClickSegments;\n    };\n    /**\n     * gets the first ! current (click) Segment\n     */\n    sServObj.getfirstClickSegment = function () {\n      if (sServObj.curClickSegments.length > 0) {\n        return sServObj.curClickSegments[0];\n      }\n    };\n    /**\n     *\n     */\n    sServObj.getselected = function () {\n      return this.curClickSegments;\n    };\n    /**\n     *\n     */\n    sServObj.isEditing = function () {\n      return this.editing;\n    };\n    /**\n     *\n     */\n    sServObj.setEditing = function (n) {\n      this.editing = n;\n    };\n    /**\n     *\n     */\n    sServObj.countSelected = function () {\n      return this.curClickSegments.length;\n    };\n    /**\n     *\n     */\n    sServObj.getCurrentSample = function (perc) {\n      return this.curViewPort.sS + (this.curViewPort.eS - this.curViewPort.sS) * perc;\n    };\n    /**\n     *\n     */\n    sServObj.getCurrentPercent = function (sample) {\n      return sample * (100 / (this.curViewPort.eS - this.curViewPort.sS) / 100);\n    };\n    /**\n     *\n     */\n    sServObj.getSamplesPerPixelVal = function (event) {\n      var start = parseFloat(this.curViewPort.sS);\n      var end = parseFloat(this.curViewPort.eS);\n      return (end - start) / event.originalEvent.target.width;\n    };\n    /**\n     * round to n decimal digits after the comma\n     * used to help display numbers with a given\n     * precision\n     */\n    sServObj.round = function (x, n) {\n      if (n < 1 || n > 14) {\n        console.error('error in call of round function!!');\n      }\n      var e = Math.pow(10, n);\n      var k = (Math.round(x * e) / e).toString();\n      if (k.indexOf('.') === -1) {\n        k += '.';\n      }\n      k += e.toString().substring(1);\n      return parseFloat(k.substring(0, k.indexOf('.') + n + 1));\n    };\n    /**\n     * calcs and returns start in secs\n     */\n    sServObj.getViewPortStartTime = function () {\n      return this.curViewPort.sS * 1 / Soundhandlerservice.wavJSO.SampleRate - 0.5 / Soundhandlerservice.wavJSO.SampleRate;\n    };\n    /**\n     * calcs and returns end time in secs\n     */\n    sServObj.getViewPortEndTime = function () {\n      return this.curViewPort.eS * 1 / Soundhandlerservice.wavJSO.SampleRate + 0.5 / Soundhandlerservice.wavJSO.SampleRate;\n    };\n    /**\n     * calcs and returns start in secs\n     */\n    sServObj.getSelectedStartTime = function () {\n      return this.curViewPort.selectS * 1 / Soundhandlerservice.wavJSO.SampleRate - 0.5 / Soundhandlerservice.wavJSO.SampleRate;\n    };\n    /**\n     * calcs and returns end time in secs\n     */\n    sServObj.getSelectedEndTime = function () {\n      return this.curViewPort.selectE * 1 / Soundhandlerservice.wavJSO.SampleRate + 0.5 / Soundhandlerservice.wavJSO.SampleRate;\n    };\n    /**\n     * set view port to start and end sample\n     * (with several out-of-bounds like checks)\n     *\n     * @param sSample start sample of view\n     * @param sSample end sample of view\n     */\n    sServObj.setViewPort = function (sSample, eSample) {\n      var oldStart = this.curViewPort.sS;\n      var oldEnd = this.curViewPort.eS;\n      if (sSample !== undefined) {\n        this.curViewPort.sS = Math.round(sSample);\n      }\n      if (eSample !== undefined) {\n        this.curViewPort.eS = Math.round(eSample);\n      }\n      // check if moving left or right is not out of bounds -> prevent zooming on edge when moving left/right\n      if (oldStart > this.curViewPort.sS && oldEnd > this.curViewPort.eS) {\n        //moved left\n        if (this.curViewPort.sS < 0) {\n          this.curViewPort.sS = 0;\n          this.curViewPort.eS = oldEnd + Math.abs(this.curViewPort.sS);\n        }\n      }\n      if (oldStart < this.curViewPort.sS && oldEnd < this.curViewPort.eS) {\n        //moved right\n        if (this.curViewPort.eS > Soundhandlerservice.wavJSO.Data.length) {\n          this.curViewPort.sS = oldStart;\n          this.curViewPort.eS = Soundhandlerservice.wavJSO.Data.length;\n        }\n      }\n      // check if in range\n      if (this.curViewPort.sS < 0) {\n        this.curViewPort.sS = 0;\n      }\n      if (this.curViewPort.eS > Soundhandlerservice.wavJSO.Data.length) {\n        this.curViewPort.eS = Soundhandlerservice.wavJSO.Data.length;\n      }\n      // check if at least 4 samples are showing (fixed max zoom size)\n      if (this.curViewPort.eS - this.curViewPort.sS < 4) {\n        this.curViewPort.sS = oldStart;\n        this.curViewPort.eS = oldEnd;\n      }\n    };\n    /**\n     * set view port to start and end sample\n     * (with several out-of-bounds like checks)\n     *\n     * @param zoomIn bool to specify zooming direction\n     * if set to true -> zoom in\n     * if set to false -> zoom out\n     */\n    sServObj.zoomViewPort = function (zoomIn, LevelService) {\n      var newStartS, newEndS, curMouseMoveSegmentStart;\n      var seg = this.getcurMouseSegment();\n      var d = this.curViewPort.eS - this.curViewPort.sS;\n      var isLastSeg = false;\n      if (seg !== undefined) {\n        if (this.getcurMouseisFirst()) {\n          // before first element\n          seg = LevelService.getItemDetails(sServObj.getcurMouseLevelName(), 0);\n        } else if (this.getcurMouseisLast()) {\n          seg = LevelService.getLastItem(sServObj.getcurMouseLevelName());\n          isLastSeg = true;\n        }\n        if (this.getcurMouseLevelType() === 'SEGMENT') {\n          if (isLastSeg) {\n            curMouseMoveSegmentStart = seg.sampleStart + seg.sampleDur;\n          } else {\n            curMouseMoveSegmentStart = seg.sampleStart;\n          }\n        } else {\n          curMouseMoveSegmentStart = seg.samplePoint;\n        }\n        var d1 = curMouseMoveSegmentStart - this.curViewPort.sS;\n        var d2 = this.curViewPort.eS - curMouseMoveSegmentStart;\n        if (zoomIn) {\n          newStartS = this.curViewPort.sS + d1 * 0.5;\n          newEndS = this.curViewPort.eS - d2 * 0.5;\n        } else {\n          newStartS = this.curViewPort.sS - d1 * 0.5;\n          newEndS = this.curViewPort.eS + d2 * 0.5;\n        }\n      } else {\n        if (zoomIn) {\n          newStartS = this.curViewPort.sS + ~~(d / 4);\n          newEndS = this.curViewPort.eS - ~~(d / 4);\n        } else {\n          newStartS = this.curViewPort.sS - ~~(d / 4);\n          newEndS = this.curViewPort.eS + ~~(d / 4);\n        }\n      }\n      this.setViewPort(newStartS, newEndS);\n    };\n    /**\n     * moves view port to the right or to the left\n     * without changing the zoom\n     *\n     * @param shiftRight bool to specify direction\n     * if set to true -> shift right\n     * if set to false -> shift left\n     */\n    sServObj.shiftViewPort = function (shiftRight) {\n      // my.removeLabelDoubleClick();\n      var newStartS, newEndS;\n      if (shiftRight) {\n        newStartS = this.curViewPort.sS + ~~((this.curViewPort.eS - this.curViewPort.sS) / 4);\n        newEndS = this.curViewPort.eS + ~~((this.curViewPort.eS - this.curViewPort.sS) / 4);\n      } else {\n        newStartS = this.curViewPort.sS - ~~((this.curViewPort.eS - this.curViewPort.sS) / 4);\n        newEndS = this.curViewPort.eS - ~~((this.curViewPort.eS - this.curViewPort.sS) / 4);\n      }\n      this.setViewPort(newStartS, newEndS);\n    };\n    /**\n     * sets all the curLevelAttrDefs array\n     * to hold the default attr. definitions\n     * which are the same as the level names\n     *\n     * @param levelDefs level definitions from the DBconfig\n     */\n    sServObj.setCurLevelAttrDefs = function (levelDefs) {\n      angular.forEach(levelDefs, function (ld) {\n        curLevelAttrDefs.push({\n          'levelName': ld.name,\n          'curAttrDefName': ld.name\n        });\n      });\n    };\n    /**\n     * set the current attribute definition name of the\n     * given levelName\n     *\n     * @param levelName name of level\n     * @param newAttrDefName\n     */\n    sServObj.setCurAttrDef = function (levelName, newAttrDefName, index) {\n      angular.forEach(curLevelAttrDefs, function (ad) {\n        if (ad.levelName === levelName) {\n          ad.curAttrDefName = newAttrDefName;\n          ad.curAttrDefIndex = index;\n        }\n      });\n    };\n    /**\n     * get the current attribute definition name of the\n     * given levelName\n     *\n     * @param levelName name of level\n     * @returns attrDefName\n     */\n    sServObj.getCurAttrDef = function (levelName) {\n      var curAttrDef;\n      angular.forEach(curLevelAttrDefs, function (ad) {\n        if (ad.levelName === levelName) {\n          curAttrDef = ad.curAttrDefName;\n        }\n      });\n      return curAttrDef;\n    };\n    /**\n     * get the current attribute definition index of the\n     * given levelName\n     *\n     * @param levelName name of level\n     * @returns attrDefName\n     */\n    sServObj.getCurAttrIndex = function (levelName) {\n      var curAttrDef;\n      angular.forEach(curLevelAttrDefs, function (ad) {\n        if (ad.levelName === levelName) {\n          if (ad.curAttrDefIndex === undefined) {\n            curAttrDef = 0;\n          } else {\n            curAttrDef = ad.curAttrDefIndex;\n          }\n        }\n      });\n      return curAttrDef;\n    };\n    /**\n\t*\n\t*/\n    sServObj.getX = function (e) {\n      return (e.offsetX || e.originalEvent.layerX) * (e.originalEvent.target.width / e.originalEvent.target.clientWidth);\n    };\n    /**\n\t*\n\t*/\n    sServObj.getY = function (e) {\n      return (e.offsetY || e.originalEvent.layerY) * (e.originalEvent.target.height / e.originalEvent.target.clientHeight);\n    };\n    /**\n     *\n     */\n    sServObj.resetToInitState = function () {\n      sServObj.initialize();\n    };\n    return sServObj;\n  }\n]);\n'use strict';\nangular.module('emuwebApp').directive('trackmouseinlevel', [\n  'viewState',\n  'LevelService',\n  'ConfigProviderService',\n  'HistoryService',\n  'Soundhandlerservice',\n  function (viewState, LevelService, ConfigProviderService, HistoryService, Soundhandlerservice) {\n    return {\n      restrict: 'A',\n      scope: { level: '=' },\n      link: function (scope, element, attr) {\n        var lastEventClick;\n        var lastEventClickId;\n        var lastEventRightClick;\n        var lastEventRightClickId;\n        var lastEventMove;\n        var lastEventMoveId;\n        var lastNeighbours;\n        var lastNeighboursMove;\n        var lastPCM;\n        var curMouseSampleNrInView;\n        var levelID = scope.level.name;\n        var levelType = scope.level.type;\n        /////////////////////////////\n        // Bindings\n        //\n        element.bind('click', function (event) {\n          event.preventDefault();\n          setLastMove(event, true);\n          setLastClick(event);\n        });\n        //\n        element.bind('contextmenu', function (event) {\n          event.preventDefault();\n          setLastMove(event, true);\n          setLastRightClick(event);\n        });\n        //\n        element.bind('dblclick', function (event) {\n          setLastMove(event, true);\n          if (ConfigProviderService.vals.restrictions.editItemName) {\n            setLastDblClick(event);\n          } else {\n            setLastClick(event);\n          }\n        });\n        //\n        element.bind('mousemove', function (event) {\n          if (!viewState.getdragBarActive()) {\n            var moveLine = true;\n            var samplesPerPixel = viewState.getSamplesPerPixelVal(event);\n            curMouseSampleNrInView = viewState.getX(event) * samplesPerPixel;\n            var moveBy = curMouseSampleNrInView - lastPCM;\n            if (samplesPerPixel <= 1 && scope.this.level.items.length > 0) {\n              var zoomEventMove = LevelService.getClosestItem(curMouseSampleNrInView + viewState.curViewPort.sS, scope.this.level.name, Soundhandlerservice.wavJSO.Data.length);\n              // absolute movement in pcm below 1 pcm per pixel\n              if (scope.this.level.type === 'SEGMENT') {\n                if (zoomEventMove.isFirst === true && zoomEventMove.isLast === false) {\n                  // before first elem\n                  moveBy = Math.ceil(curMouseSampleNrInView + viewState.curViewPort.sS - LevelService.getItemDetails(scope.this.level.name, 0).sampleStart);\n                } else if (zoomEventMove.isFirst === false && zoomEventMove.isLast === true) {\n                  // after last elem\n                  var lastItem = LevelService.getLastItem(scope.this.level.name);\n                  moveBy = Math.ceil(curMouseSampleNrInView + viewState.curViewPort.sS - lastItem.sampleStart - lastItem.sampleDur);\n                } else {\n                  moveBy = Math.ceil(curMouseSampleNrInView + viewState.curViewPort.sS - LevelService.getItemFromLevelById(scope.this.level.name, zoomEventMove.nearest.id).sampleStart);\n                }\n              } else {\n                moveBy = Math.ceil(curMouseSampleNrInView + viewState.curViewPort.sS - LevelService.getItemFromLevelById(scope.this.level.name, zoomEventMove.nearest.id).samplePoint - 0.5);  // 0.5 to break between samples not on\n              }\n            } else {\n              // relative movement in pcm above 1 pcm per pixel\n              moveBy = Math.round(curMouseSampleNrInView - lastPCM);\n            }\n          }\n          var mbutton = 0;\n          if (event.buttons === undefined) {\n            mbutton = event.which;\n          } else {\n            mbutton = event.buttons;\n          }\n          switch (mbutton) {\n          case 1:\n            //console.log('Left mouse button pressed');\n            break;\n          case 2:\n            //console.log('Middle mouse button pressed');\n            break;\n          case 3:\n            //console.log('Right mouse button pressed');\n            break;\n          default:\n            if (!viewState.getdragBarActive()) {\n              if (ConfigProviderService.vals.restrictions.editItemSize && event.shiftKey) {\n                LevelService.deleteEditArea();\n                if (viewState.getcurMouseSegment() !== undefined) {\n                  viewState.movingBoundary = true;\n                  if (scope.this.level.type === 'SEGMENT') {\n                    if (viewState.getcurMouseisFirst() || viewState.getcurMouseisLast()) {\n                      var seg, leftMost, rightB;\n                      // before first segment\n                      if (viewState.getcurMouseisFirst()) {\n                        seg = LevelService.getItemDetails(scope.this.level.name, 0);\n                        viewState.movingBoundarySample = seg.sampleStart + moveBy;\n                      } else if (viewState.getcurMouseisLast()) {\n                        seg = LevelService.getLastItem(scope.this.level.name);\n                        viewState.movingBoundarySample = seg.sampleStart + seg.sampleDur + moveBy;\n                      }\n                    } else {\n                      viewState.movingBoundarySample = viewState.getcurMouseSegment().sampleStart + moveBy;\n                      seg = viewState.getcurMouseSegment();\n                    }\n                    LevelService.moveBoundary(scope.this.level.name, seg.id, moveBy, viewState.getcurMouseisFirst(), viewState.getcurMouseisLast());\n                    HistoryService.updateCurChangeObj({\n                      'type': 'ESPS',\n                      'action': 'MOVEBOUNDARY',\n                      'name': scope.this.level.name,\n                      'id': seg.id,\n                      'movedBy': moveBy,\n                      'isFirst': viewState.getcurMouseisFirst(),\n                      'isLast': viewState.getcurMouseisLast()\n                    });\n                  } else {\n                    seg = viewState.getcurMouseSegment();\n                    viewState.movingBoundarySample = viewState.getcurMouseSegment().samplePoint + moveBy;\n                    LevelService.movePoint(scope.this.level.name, seg.id, moveBy);\n                    HistoryService.updateCurChangeObj({\n                      'type': 'ESPS',\n                      'action': 'MOVEPOINT',\n                      'name': scope.this.level.name,\n                      'id': seg.id,\n                      'movedBy': moveBy\n                    });\n                  }\n                  lastPCM = curMouseSampleNrInView;\n                  viewState.selectBoundary();\n                  moveLine = false;\n                }\n              } else if (ConfigProviderService.vals.restrictions.editItemSize && event.altKey) {\n                LevelService.deleteEditArea();\n                if (scope.this.level.type == 'SEGMENT') {\n                  seg = viewState.getcurClickSegments();\n                  LevelService.moveSegment(scope.this.level.name, seg[0].id, seg.length, moveBy);\n                  HistoryService.updateCurChangeObj({\n                    'type': 'ESPS',\n                    'action': 'MOVESEGMENT',\n                    'name': scope.this.level.name,\n                    'id': seg[0].id,\n                    'length': seg.length,\n                    'movedBy': moveBy\n                  });\n                  lastPCM = curMouseSampleNrInView;\n                  viewState.selectBoundary();\n                }\n              } else {\n                viewState.movingBoundary = false;\n              }\n            }\n            break;\n          }\n          if (!viewState.getdragBarActive()) {\n            setLastMove(event, moveLine);\n          }\n        });\n        //\n        element.bind('mousedown', function (event) {\n          viewState.movingBoundary = true;\n          setLastMove(event, true);\n        });\n        //\n        element.bind('mouseup', function (event) {\n          viewState.movingBoundary = false;\n          setLastMove(event, true);\n        });\n        //\n        element.bind('mouseout', function (event) {\n          viewState.movingBoundary = false;\n          setLastMove(event, true);\n        });\n        //\n        /////////////////////////\n        /**\n         *\n         */\n        function setLastClick(x) {\n          curMouseSampleNrInView = viewState.getX(x) * viewState.getSamplesPerPixelVal(x);\n          LevelService.deleteEditArea();\n          viewState.setEditing(false);\n          viewState.focusInTextField = false;\n          lastEventClick = LevelService.getClosestItem(curMouseSampleNrInView + viewState.curViewPort.sS, scope.this.level.name, Soundhandlerservice.wavJSO.Data.length);\n          if (lastEventClick.current !== undefined && lastEventClick.nearest !== undefined) {\n            LevelService.setlasteditArea('_' + lastEventClick.current.id);\n            LevelService.setlasteditAreaElem(element.parent());\n            viewState.setcurClickLevel(levelID, levelType, scope.$index);\n            viewState.setcurClickSegment(lastEventClick.current);\n          }\n          lastPCM = curMouseSampleNrInView;\n          scope.$apply();\n        }\n        /**\n         *\n         */\n        function setLastRightClick(x) {\n          if (viewState.getcurClickLevelName() !== levelID) {\n            setLastClick(x);\n          }\n          curMouseSampleNrInView = viewState.getX(x) * viewState.getSamplesPerPixelVal(x);\n          LevelService.deleteEditArea();\n          lastEventClick = LevelService.getClosestItem(curMouseSampleNrInView + viewState.curViewPort.sS, scope.this.level.name, Soundhandlerservice.wavJSO.Data.length);\n          if (lastEventClick.current !== undefined && lastEventClick.nearest !== undefined) {\n            viewState.setcurClickLevel(levelID, levelType, scope.$index);\n            viewState.setcurClickSegmentMultiple(lastEventClick.current);\n            viewState.selectBoundary();\n          }\n          lastPCM = curMouseSampleNrInView;\n          scope.$apply();\n        }\n        /**\n         *\n         */\n        function setLastDblClick(x) {\n          curMouseSampleNrInView = viewState.getX(x) * viewState.getSamplesPerPixelVal(x);\n          lastEventClick = LevelService.getClosestItem(curMouseSampleNrInView + viewState.curViewPort.sS, scope.this.level.name, Soundhandlerservice.wavJSO.Data.length);\n          if (lastEventClick.current !== undefined && lastEventClick.nearest !== undefined) {\n            if (levelType === 'SEGMENT') {\n              if (lastEventClick.current.sampleStart >= viewState.curViewPort.sS) {\n                if (lastEventClick.current.sampleStart + lastEventClick.current.sampleDur <= viewState.curViewPort.eS) {\n                  viewState.setcurClickLevel(levelID, levelType, scope.$index);\n                  viewState.setcurClickSegment(lastEventClick.current);\n                  LevelService.setlasteditArea('_' + lastEventClick.current.id);\n                  LevelService.setlasteditAreaElem(element.parent());\n                  viewState.setEditing(true);\n                  LevelService.openEditArea(lastEventClick.current, element.parent(), levelType);\n                  viewState.focusInTextField = true;\n                } else {\n                  console.log('Editing out of right bound !');\n                }\n              } else {\n                console.log('Editing out of left bound !');\n              }\n            } else {\n              viewState.setcurClickLevel(levelID, levelType, scope.$index);\n              viewState.setcurClickSegment(lastEventClick.current);\n              LevelService.setlasteditArea('_' + lastEventClick.current.id);\n              LevelService.setlasteditAreaElem(element.parent());\n              viewState.setEditing(true);\n              LevelService.openEditArea(lastEventClick.current, element.parent(), levelType);\n              viewState.focusInTextField = true;\n            }\n          }\n          lastPCM = curMouseSampleNrInView;\n          scope.$apply();\n        }\n        /**\n         *\n         */\n        function setLastMove(x, doChange) {\n          curMouseSampleNrInView = viewState.getX(x) * viewState.getSamplesPerPixelVal(x);\n          lastEventMove = LevelService.getClosestItem(curMouseSampleNrInView + viewState.curViewPort.sS, scope.this.level.name, Soundhandlerservice.wavJSO.Data.length);\n          if (doChange) {\n            if (lastEventMove.current !== undefined && lastEventMove.nearest !== undefined) {\n              lastNeighboursMove = LevelService.getItemNeighboursFromLevel(scope.this.level.name, lastEventMove.nearest.id, lastEventMove.nearest.id);\n              viewState.setcurMouseSegment(lastEventMove.nearest, lastNeighboursMove, lastPCM, lastEventMove.isFirst, lastEventMove.isLast);\n            }\n          }\n          viewState.setcurMouseLevelName(levelID);\n          viewState.setcurMouseLevelType(levelType);\n          lastPCM = curMouseSampleNrInView;\n          scope.$apply();\n        }\n      }\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').directive('handleglobalkeystrokes', [\n  '$timeout',\n  'viewState',\n  'Soundhandlerservice',\n  'ConfigProviderService',\n  'HistoryService',\n  'LevelService',\n  'AnagestService',\n  function ($timeout, viewState, Soundhandlerservice, ConfigProviderService, HistoryService, LevelService, AnagestService) {\n    return {\n      restrict: 'A',\n      link: function postLink(scope) {\n        $(document).bind('keydown', function (e) {\n          if (!scope.firefox) {\n            var code = e.keyCode ? e.keyCode : e.which;\n            if (code == 8 || code == 9 || code == 27 || code == 37 || code == 38 || code == 39 || code == 40 || code == 32) {\n              applyKeyCode(code, e);\n            }\n          }\n        });\n        $(document).bind('keypress', function (e) {\n          var code = e.keyCode ? e.keyCode : e.which;\n          applyKeyCode(code, e);\n        });\n        function applyKeyCode(code, e) {\n          scope.$apply(function () {\n            // check if mouse has to be in labeler for key mappings\n            if (ConfigProviderService.vals.main.catchMouseForKeyBinding) {\n              if (!viewState.mouseInEmuWebApp) {\n                return;\n              }\n            }\n            //scope.setlastkeycode(code, e.shiftKey);\n            if (viewState.focusInTextField) {\n              if (code === ConfigProviderService.vals.keyMappings.createNewItemAtSelection) {\n                if (viewState.isEditing()) {\n                  var editingElement = LevelService.getItemFromLevelById(viewState.getcurClickLevelName(), LevelService.getlastID());\n                  var attrIndex = viewState.getCurAttrIndex(viewState.getcurClickLevelName());\n                  HistoryService.addObjToUndoStack({\n                    'type': 'ESPS',\n                    'action': 'RENAMELABEL',\n                    'name': viewState.getcurClickLevelName(),\n                    'id': LevelService.getlastID(),\n                    'attrIndex': attrIndex,\n                    'oldValue': editingElement.labels[attrIndex].value,\n                    'newValue': $('.' + LevelService.getlasteditArea()).val()\n                  });\n                  LevelService.renameLabel(viewState.getcurClickLevelName(), LevelService.getlastID(), viewState.getCurAttrIndex(viewState.getcurClickLevelName()), $('.' + LevelService.getlasteditArea()).val());\n                  LevelService.deleteEditArea();\n                  viewState.focusInTextField = false;\n                }\n              }\n              if (code === ConfigProviderService.vals.keyMappings.esc) {\n                LevelService.deleteEditArea();\n                viewState.focusInTextField = false;\n              }\n              if (code === 13) {\n                e.preventDefault();\n                e.stopPropagation();\n              }\n              viewState.setcurClickSegment(LevelService.getItemFromLevelById(viewState.getcurClickLevelName(), LevelService.getlastID()));\n            } else {\n              LevelService.deleteEditArea();\n              // delegate keyboard keyMappings according to keyMappings of scope\n              // zoomAll\n              if (code === ConfigProviderService.vals.keyMappings.zoomAll) {\n                if (viewState.getPermission('zoom')) {\n                  viewState.setViewPort(0, Soundhandlerservice.wavJSO.Data.length);\n                } else {\n                }\n              }\n              // zoomIn\n              if (code === ConfigProviderService.vals.keyMappings.zoomIn) {\n                if (viewState.getPermission('zoom')) {\n                  viewState.zoomViewPort(true, LevelService);\n                } else {\n                }\n              }\n              // zoomOut\n              if (code === ConfigProviderService.vals.keyMappings.zoomOut) {\n                if (viewState.getPermission('zoom')) {\n                  viewState.zoomViewPort(false, LevelService);\n                } else {\n                }\n              }\n              // shiftViewPortLeft\n              if (code === ConfigProviderService.vals.keyMappings.shiftViewPortLeft) {\n                if (viewState.getPermission('zoom')) {\n                  viewState.shiftViewPort(false);\n                } else {\n                }\n              }\n              // shiftViewPortRight\n              if (code === ConfigProviderService.vals.keyMappings.shiftViewPortRight) {\n                if (viewState.getPermission('zoom')) {\n                  viewState.shiftViewPort(true);\n                } else {\n                }\n              }\n              // zoomSel\n              if (code === ConfigProviderService.vals.keyMappings.zoomSel) {\n                if (viewState.getPermission('zoom')) {\n                  viewState.setViewPort(viewState.curViewPort.selectS, viewState.curViewPort.selectE);\n                } else {\n                }\n              }\n              // playEntireFile\n              if (code === ConfigProviderService.vals.keyMappings.playEntireFile) {\n                if (viewState.getPermission('playaudio')) {\n                  if (ConfigProviderService.vals.restrictions.playback) {\n                    Soundhandlerservice.playFromTo(0, Soundhandlerservice.wavJSO.Data.length);\n                    viewState.animatePlayHead(0, Soundhandlerservice.wavJSO.Data.length);\n                  }\n                } else {\n                }\n              }\n              // playAllInView\n              if (code === ConfigProviderService.vals.keyMappings.playAllInView) {\n                if (viewState.getPermission('playaudio')) {\n                  if (ConfigProviderService.vals.restrictions.playback) {\n                    Soundhandlerservice.playFromTo(viewState.curViewPort.sS, viewState.curViewPort.eS);\n                    viewState.animatePlayHead(viewState.curViewPort.sS, viewState.curViewPort.eS);\n                  }\n                } else {\n                }\n              }\n              // playSelected\n              if (code === ConfigProviderService.vals.keyMappings.playSelected) {\n                if (viewState.getPermission('playaudio')) {\n                  if (ConfigProviderService.vals.restrictions.playback) {\n                    Soundhandlerservice.playFromTo(viewState.curViewPort.selectS, viewState.curViewPort.selectE);\n                    viewState.animatePlayHead(viewState.curViewPort.selectS, viewState.curViewPort.selectE);\n                  }\n                } else {\n                }\n              }\n              // selectFirstContourCorrectionTool\n              if (code === ConfigProviderService.vals.keyMappings.selectFirstContourCorrectionTool) {\n                if (viewState.getPermission('labelAction')) {\n                  if (ConfigProviderService.vals.restrictions.correctionTool) {\n                    viewState.curCorrectionToolNr = 1;\n                  }\n                }\n              }\n              // selectSecondContourCorrectionTool\n              if (code === ConfigProviderService.vals.keyMappings.selectSecondContourCorrectionTool) {\n                if (viewState.getPermission('labelAction')) {\n                  if (ConfigProviderService.vals.restrictions.correctionTool) {\n                    viewState.curCorrectionToolNr = 2;\n                  }\n                }\n              }\n              // selectThirdContourCorrectionTool\n              if (code === ConfigProviderService.vals.keyMappings.selectThirdContourCorrectionTool) {\n                if (viewState.getPermission('labelAction')) {\n                  if (ConfigProviderService.vals.restrictions.correctionTool) {\n                    viewState.curCorrectionToolNr = 3;\n                  }\n                }\n              }\n              // selectFourthContourCorrectionTool\n              if (code === ConfigProviderService.vals.keyMappings.selectFourthContourCorrectionTool) {\n                if (viewState.getPermission('labelAction')) {\n                  if (ConfigProviderService.vals.restrictions.correctionTool) {\n                    viewState.curCorrectionToolNr = 4;\n                  }\n                }\n              }\n              // selectNOContourCorrectionTool\n              if (code === ConfigProviderService.vals.keyMappings.selectNoContourCorrectionTool) {\n                if (viewState.getPermission('labelAction')) {\n                  if (ConfigProviderService.vals.restrictions.correctionTool) {\n                    viewState.curCorrectionToolNr = undefined;\n                  }\n                }\n              }\n              // levelUp\n              if (code === ConfigProviderService.vals.keyMappings.levelUp) {\n                if (viewState.getPermission('labelAction')) {\n                  viewState.selectLevel(false, ConfigProviderService.vals.perspectives[viewState.curPerspectiveIdx].levelCanvases.order, LevelService);  // pass in LevelService to prevent circular deps\n                }\n              }\n              // levelDown\n              if (code === ConfigProviderService.vals.keyMappings.levelDown) {\n                if (viewState.getPermission('labelAction')) {\n                  viewState.selectLevel(true, ConfigProviderService.vals.perspectives[viewState.curPerspectiveIdx].levelCanvases.order, LevelService);  // pass LevelService to prevent circular deps\n                }\n              }\n              // preselected boundary snap to top\n              if (code === ConfigProviderService.vals.keyMappings.snapBoundaryToNearestTopBoundary) {\n                if (viewState.getPermission('labelAction')) {\n                  if (ConfigProviderService.vals.restrictions.editItemSize) {\n                    var mouseSeg = viewState.getcurMouseSegment();\n                    var levelName = viewState.getcurMouseLevelName();\n                    var levelType = viewState.getcurMouseLevelType();\n                    var neighbor = viewState.getcurMouseNeighbours();\n                    var minDist = LevelService.snapBoundary(true, levelName, mouseSeg, neighbor, levelType);\n                    if (minDist === false) {\n                    } else {\n                      if (levelType === 'EVENT') {\n                        HistoryService.updateCurChangeObj({\n                          'type': 'ESPS',\n                          'action': 'MOVEPOINT',\n                          'name': levelName,\n                          'id': mouseSeg.id,\n                          'movedBy': minDist\n                        });\n                      } else if (levelType === 'SEGMENT') {\n                        HistoryService.updateCurChangeObj({\n                          'type': 'ESPS',\n                          'action': 'MOVEBOUNDARY',\n                          'name': levelName,\n                          'id': mouseSeg.id,\n                          'movedBy': minDist,\n                          'position': 0\n                        });\n                      }\n                      HistoryService.addCurChangeObjToUndoStack();\n                    }\n                  }\n                }\n              }\n              // preselected boundary snap to bottom\n              if (code === ConfigProviderService.vals.keyMappings.snapBoundaryToNearestBottomBoundary) {\n                if (viewState.getPermission('labelAction')) {\n                  if (ConfigProviderService.vals.restrictions.editItemSize) {\n                    var mouseSeg = viewState.getcurMouseSegment();\n                    var levelName = viewState.getcurMouseLevelName();\n                    var levelType = viewState.getcurMouseLevelType();\n                    var neighbor = viewState.getcurMouseNeighbours();\n                    var minDist = LevelService.snapBoundary(false, levelName, mouseSeg, neighbor, levelType);\n                    if (minDist == false) {\n                    } else {\n                      if (levelType === 'EVENT') {\n                        HistoryService.updateCurChangeObj({\n                          'type': 'ESPS',\n                          'action': 'MOVEPOINT',\n                          'name': levelName,\n                          'id': mouseSeg.id,\n                          'movedBy': minDist\n                        });\n                      } else if (levelType === 'SEGMENT') {\n                        HistoryService.updateCurChangeObj({\n                          'type': 'ESPS',\n                          'action': 'MOVEBOUNDARY',\n                          'name': levelName,\n                          'id': mouseSeg.id,\n                          'movedBy': minDist,\n                          'position': 0\n                        });\n                      }\n                      HistoryService.addCurChangeObjToUndoStack();\n                    }\n                  }\n                }\n              }\n              // preselected boundary to nearest zero crossing\n              if (code === ConfigProviderService.vals.keyMappings.snapBoundaryToNearestZeroCrossing) {\n                if (viewState.getPermission('labelAction')) {\n                  if (ConfigProviderService.vals.restrictions.editItemSize) {\n                    var dist;\n                    if (viewState.getcurMouseLevelType() === 'SEGMENT') {\n                      dist = LevelService.calcDistanceToNearestZeroCrossing(viewState.getcurMouseSegment().sampleStart);\n                    } else {\n                      dist = LevelService.calcDistanceToNearestZeroCrossing(viewState.getcurMouseSegment().samplePoint);\n                    }\n                    if (dist !== 0) {\n                      var seg = viewState.getcurMouseSegment();\n                      var neigh = viewState.getcurMouseNeighbours();\n                      var levelname = viewState.getcurMouseLevelName();\n                      LevelService.moveBoundary(levelname, seg.id, dist, 0);\n                      HistoryService.updateCurChangeObj({\n                        'type': 'ESPS',\n                        'action': 'MOVEBOUNDARY',\n                        'name': levelname,\n                        'id': seg.id,\n                        'movedBy': dist,\n                        'position': 0\n                      });\n                      HistoryService.addCurChangeObjToUndoStack();\n                    }\n                  }\n                }\n              }\n              // expand Segments\n              if (code === ConfigProviderService.vals.keyMappings.expandSelSegmentsRight) {\n                if (viewState.getPermission('labelAction')) {\n                  if (ConfigProviderService.vals.restrictions.editItemSize) {\n                    if (viewState.getcurClickLevelName() === undefined) {\n                      scope.dials.open('views/error.html', 'ModalCtrl', 'Expand Segments Error: Please select a Level first');\n                    } else {\n                      if (viewState.getselected().length === 0) {\n                        scope.dials.open('views/error.html', 'ModalCtrl', 'Expand Segments Error: Please select one or more Segments first');\n                      } else {\n                        var changeTime = parseInt(ConfigProviderService.vals.labelCanvasConfig.addTimeValue, 10);\n                        if (ConfigProviderService.vals.labelCanvasConfig.addTimeMode === 'relative') {\n                          changeTime = ConfigProviderService.vals.labelCanvasConfig.addTimeValue * (Soundhandlerservice.wavJSO.Data.length / 100);\n                        }\n                        LevelService.expandSegment(true, viewState.getcurClickSegments(), viewState.getcurClickLevelName(), changeTime);\n                        HistoryService.addObjToUndoStack({\n                          'type': 'ESPS',\n                          'action': 'EXPANDSEGMENTS',\n                          'levelName': viewState.getcurClickLevelName(),\n                          'item': viewState.getcurClickSegments(),\n                          'rightSide': true,\n                          'changeTime': changeTime\n                        });\n                        viewState.selectBoundary();\n                      }\n                    }\n                  }\n                }\n              }\n              // expand Segment left\n              if (code === ConfigProviderService.vals.keyMappings.expandSelSegmentsLeft) {\n                if (viewState.getPermission('labelAction')) {\n                  if (ConfigProviderService.vals.restrictions.editItemSize) {\n                    if (viewState.getcurClickLevelName() === undefined) {\n                      scope.dials.open('views/error.html', 'ModalCtrl', 'Expand Segments Error: Please select a Level first');\n                    } else {\n                      if (viewState.getselected().length === 0) {\n                        scope.dials.open('views/error.html', 'ModalCtrl', 'Expand Segments Error: Please select one or more Segments first');\n                      } else {\n                        if (ConfigProviderService.vals.labelCanvasConfig.addTimeMode === 'absolute') {\n                          var changeTime = parseInt(ConfigProviderService.vals.labelCanvasConfig.addTimeValue, 10);\n                        } else if (ConfigProviderService.vals.labelCanvasConfig.addTimeMode === 'relative') {\n                          var changeTime = ConfigProviderService.vals.labelCanvasConfig.addTimeValue * (Soundhandlerservice.wavJSO.Data.length / 100);\n                        } else {\n                          scope.dials.open('views/error.html', 'ModalCtrl', 'Expand Segements Error: Error in Configuration (Value labelCanvasConfig.addTimeMode)');\n                        }\n                        LevelService.expandSegment(false, viewState.getcurClickSegments(), viewState.getcurClickLevelName(), changeTime);\n                        HistoryService.addObjToUndoStack({\n                          'type': 'ESPS',\n                          'action': 'EXPANDSEGMENTS',\n                          'levelName': viewState.getcurClickLevelName(),\n                          'item': viewState.getcurClickSegments(),\n                          'rightSide': false,\n                          'changeTime': changeTime\n                        });\n                        viewState.selectBoundary();\n                      }\n                    }\n                  }\n                }\n              }\n              // shrink Segments Left\n              if (code === ConfigProviderService.vals.keyMappings.shrinkSelSegmentsLeft) {\n                if (viewState.getPermission('labelAction')) {\n                  if (ConfigProviderService.vals.restrictions.editItemSize) {\n                    if (viewState.getcurClickLevelName() === undefined) {\n                      scope.dials.open('views/error.html', 'ModalCtrl', 'Expand Segments Error: Please select a Level first');\n                    } else {\n                      if (viewState.getselected().length === 0) {\n                        scope.dials.open('views/error.html', 'ModalCtrl', 'Expand Segments Error: Please select one or more Segments first');\n                      } else {\n                        if (ConfigProviderService.vals.labelCanvasConfig.addTimeMode === 'absolute') {\n                          var changeTime = parseInt(ConfigProviderService.vals.labelCanvasConfig.addTimeValue, 10);\n                        } else if (ConfigProviderService.vals.labelCanvasConfig.addTimeMode === 'relative') {\n                          var changeTime = ConfigProviderService.vals.labelCanvasConfig.addTimeValue * (Soundhandlerservice.wavJSO.Data.length / 100);\n                        } else {\n                          scope.dials.open('views/error.html', 'ModalCtrl', 'Expand Segements Error: Error in Configuration (Value labelCanvasConfig.addTimeMode)');\n                        }\n                        LevelService.expandSegment(true, viewState.getcurClickSegments(), viewState.getcurClickLevelName(), -changeTime);\n                        HistoryService.addObjToUndoStack({\n                          'type': 'ESPS',\n                          'action': 'EXPANDSEGMENTS',\n                          'levelName': viewState.getcurClickLevelName(),\n                          'item': viewState.getcurClickSegments(),\n                          'rightSide': true,\n                          'changeTime': -changeTime\n                        });\n                        viewState.selectBoundary();\n                      }\n                    }\n                  }\n                }\n              }\n              // shrink Segments Right\n              if (code === ConfigProviderService.vals.keyMappings.shrinkSelSegmentsRight) {\n                if (viewState.getPermission('labelAction')) {\n                  if (ConfigProviderService.vals.restrictions.editItemSize) {\n                    if (viewState.getcurClickLevelName() === undefined) {\n                      scope.dials.open('views/error.html', 'ModalCtrl', 'Expand Segments Error: Please select a Level first');\n                    } else {\n                      if (viewState.getselected().length === 0) {\n                        scope.dials.open('views/error.html', 'ModalCtrl', 'Expand Segments Error: Please select one or more Segments first');\n                      } else {\n                        if (ConfigProviderService.vals.labelCanvasConfig.addTimeMode === 'absolute') {\n                          var changeTime = parseInt(ConfigProviderService.vals.labelCanvasConfig.addTimeValue, 10);\n                        } else if (ConfigProviderService.vals.labelCanvasConfig.addTimeMode === 'relative') {\n                          var changeTime = ConfigProviderService.vals.labelCanvasConfig.addTimeValue * (Soundhandlerservice.wavJSO.Data.length / 100);\n                        } else {\n                          scope.dials.open('views/error.html', 'ModalCtrl', 'Expand Segements Error: Error in Configuration (Value labelCanvasConfig.addTimeMode)');\n                        }\n                        LevelService.expandSegment(false, viewState.getcurClickSegments(), viewState.getcurClickLevelName(), -changeTime);\n                        HistoryService.addObjToUndoStack({\n                          'type': 'ESPS',\n                          'action': 'EXPANDSEGMENTS',\n                          'levelName': viewState.getcurClickLevelName(),\n                          'item': viewState.getcurClickSegments(),\n                          'rightSide': false,\n                          'changeTime': -changeTime\n                        });\n                        viewState.selectBoundary();\n                      }\n                    }\n                  }\n                }\n              }\n              // toggleSideBars\n              if (code === ConfigProviderService.vals.keyMappings.toggleSideBarLeft) {\n                if (viewState.getPermission('toggleSideBars')) {\n                  // check if menu button in showing -> if not -> no submenu open\n                  if (ConfigProviderService.vals.activeButtons.openMenu) {\n                    viewState.togglesubmenuOpen(ConfigProviderService.vals.colors.transitionTime);\n                  }\n                }\n              }\n              // toggleSideBars\n              if (code === ConfigProviderService.vals.keyMappings.toggleSideBarRight) {\n                if (viewState.getPermission('toggleSideBars')) {\n                  // check if menu button in showing -> if not -> no submenu open\n                  if (ConfigProviderService.vals.activeButtons.openMenu) {\n                    viewState.setRightsubmenuOpen(!viewState.getRightsubmenuOpen());\n                  }\n                }\n              }\n              // select Segments in viewport selection\n              if (code === ConfigProviderService.vals.keyMappings.selectSegmentsInSelection) {\n                if (viewState.getPermission('labelAction')) {\n                  if (viewState.getcurClickLevelName() === undefined) {\n                    scope.dials.open('views/error.html', 'ModalCtrl', 'Selection Error : Please select a Level first');\n                  } else {\n                    viewState.selectSegmentsInSelection(LevelService.data.levels);\n                  }\n                }\n              }\n              // selPrevItem (arrow key left)\n              if (code === ConfigProviderService.vals.keyMappings.selPrevItem) {\n                if (viewState.getPermission('labelAction')) {\n                  if (viewState.getcurClickSegments().length > 0) {\n                    var idLeft = viewState.getcurClickSegments()[0].id;\n                    var idRight = viewState.getcurClickSegments()[viewState.getcurClickSegments().length - 1].id;\n                    var lastNeighboursMove = LevelService.getItemNeighboursFromLevel(viewState.getcurClickLevelName(), idLeft, idRight);\n                    if (lastNeighboursMove.left !== undefined) {\n                      if (lastNeighboursMove.left.sampleStart !== undefined) {\n                        // check if in view\n                        if (lastNeighboursMove.left.sampleStart > viewState.curViewPort.sS) {\n                          if (e.shiftKey) {\n                            // select multiple while shift\n                            viewState.setcurClickSegmentMultiple(lastNeighboursMove.left);\n                            LevelService.setlasteditArea('_' + lastNeighboursMove.left.id);\n                            viewState.selectBoundary();\n                          } else {\n                            viewState.setcurClickSegment(lastNeighboursMove.left);\n                            LevelService.setlasteditArea('_' + lastNeighboursMove.left.id);\n                          }\n                        }\n                      } else {\n                        // check if in view\n                        if (lastNeighboursMove.left.samplePoint > viewState.curViewPort.sS) {\n                          if (e.shiftKey) {\n                            // select multiple while shift\n                            viewState.setcurClickSegmentMultiple(lastNeighboursMove.left);\n                            LevelService.setlasteditArea('_' + lastNeighboursMove.left.id);\n                            viewState.selectBoundary();\n                          } else {\n                            viewState.setcurClickSegment(lastNeighboursMove.left);\n                            LevelService.setlasteditArea('_' + lastNeighboursMove.left.id);\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n              // selNextItem (arrow key right)\n              if (code === ConfigProviderService.vals.keyMappings.selNextItem) {\n                if (viewState.getPermission('labelAction')) {\n                  if (viewState.getcurClickSegments().length > 0) {\n                    var idLeft = viewState.getcurClickSegments()[0].id;\n                    var idRight = viewState.getcurClickSegments()[viewState.getcurClickSegments().length - 1].id;\n                    var lastNeighboursMove = LevelService.getItemNeighboursFromLevel(viewState.getcurClickLevelName(), idLeft, idRight);\n                    if (lastNeighboursMove.right !== undefined) {\n                      // check if in view\n                      if (lastNeighboursMove.right.sampleStart + lastNeighboursMove.right.sampleDur < viewState.curViewPort.eS) {\n                        if (e.shiftKey) {\n                          // select multiple while shift\n                          viewState.setcurClickSegmentMultiple(lastNeighboursMove.right);\n                          LevelService.setlasteditArea('_' + lastNeighboursMove.right.id);\n                          viewState.selectBoundary();\n                        } else {\n                          viewState.setcurClickSegment(lastNeighboursMove.right);\n                          LevelService.setlasteditArea('_' + lastNeighboursMove.right.id);\n                        }\n                      }\n                    } else {\n                    }\n                  }\n                }\n              }\n              // selNextPrevItem (tab key and tab+shift key)\n              if (code === ConfigProviderService.vals.keyMappings.selNextPrevItem) {\n                if (viewState.getPermission('labelAction')) {\n                  if (viewState.getcurClickSegments().length > 0) {\n                    var idLeft = viewState.getcurClickSegments()[0].id;\n                    var idRight = viewState.getcurClickSegments()[viewState.getcurClickSegments().length - 1].id;\n                    var lastNeighboursMove = LevelService.getItemNeighboursFromLevel(viewState.getcurClickLevelName(), idLeft, idRight);\n                    if (e.shiftKey) {\n                      if (lastNeighboursMove.left !== undefined) {\n                        if (lastNeighboursMove.left.sampleStart !== undefined) {\n                          // check if in view\n                          if (lastNeighboursMove.left.sampleStart + lastNeighboursMove.left.sampleDur > viewState.curViewPort.sS) {\n                            viewState.setcurClickSegment(lastNeighboursMove.left, lastNeighboursMove.left.id);\n                            LevelService.setlasteditArea('_' + lastNeighboursMove.left.id);\n                          }\n                        } else {\n                          // check if in view\n                          if (lastNeighboursMove.left.samplePoint > viewState.curViewPort.sS) {\n                            viewState.setcurClickSegment(lastNeighboursMove.left, lastNeighboursMove.left.id);\n                            LevelService.setlasteditArea('_' + lastNeighboursMove.left.id);\n                          }\n                        }\n                      }\n                    } else {\n                      if (lastNeighboursMove.right !== undefined) {\n                        if (lastNeighboursMove.right.sampleStart !== undefined) {\n                          // check if in view\n                          if (lastNeighboursMove.right.sampleStart < viewState.curViewPort.eS) {\n                            viewState.setcurClickSegment(lastNeighboursMove.right, lastNeighboursMove.right.id);\n                            LevelService.setlasteditArea('_' + lastNeighboursMove.right.id);\n                          }\n                        } else {\n                          // check if in view\n                          if (lastNeighboursMove.right.samplePoint < viewState.curViewPort.eS) {\n                            viewState.setcurClickSegment(lastNeighboursMove.right, lastNeighboursMove.right.id);\n                            LevelService.setlasteditArea('_' + lastNeighboursMove.right.id);\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n              // createNewItemAtSelection\n              if (code === ConfigProviderService.vals.keyMappings.createNewItemAtSelection) {\n                if (viewState.getPermission('labelAction')) {\n                  if (ConfigProviderService.vals.restrictions.addItem) {\n                    if (viewState.getselectedRange().start === viewState.curViewPort.selectS && viewState.getselectedRange().end === viewState.curViewPort.selectE) {\n                      if (viewState.getcurClickSegments().length === 1) {\n                        // check if in view\n                        if (viewState.getselectedRange().start >= viewState.curViewPort.sS && viewState.getselectedRange().end <= viewState.curViewPort.eS) {\n                          viewState.setEditing(true);\n                          LevelService.openEditArea(viewState.getcurClickSegments()[0], LevelService.getlasteditAreaElem(), viewState.getcurClickLevelType());\n                          scope.cursorInTextField();\n                        }\n                      } else {\n                        scope.dials.open('views/error.html', 'ModalCtrl', 'Modify Error: Please select a single Segment.');\n                      }\n                    } else {\n                      if (viewState.curViewPort.selectE == -1 && viewState.curViewPort.selectS == -1) {\n                        scope.dials.open('views/error.html', 'ModalCtrl', 'Error : Please select a Segment or Point to modify it\\'s name. Or select a level plus a range in the viewport in order to insert a new Segment.');\n                      } else {\n                        if (viewState.getcurClickLevelType() === 'SEGMENT') {\n                          var seg = LevelService.getClosestItem(viewState.curViewPort.selectS, viewState.getcurClickLevelName(), Soundhandlerservice.wavJSO.Data.length).current;\n                          if (seg.sampleStart === viewState.curViewPort.selectS && seg.sampleStart + seg.sampleDur + 1 === viewState.curViewPort.selectE) {\n                            viewState.setcurClickLevel(viewState.getcurClickLevelName(), viewState.getcurClickLevelType(), scope.$index);\n                            viewState.setcurClickSegment(seg.current);\n                            LevelService.setlasteditArea('_' + seg.id);\n                            viewState.setEditing(true);\n                            LevelService.openEditArea(seg, LevelService.getlasteditAreaElem(), viewState.getcurClickLevelType());\n                            viewState.focusInTextField = true;\n                          } else {\n                            var insSeg = LevelService.insertSegment(viewState.getcurClickLevelName(), viewState.curViewPort.selectS, viewState.curViewPort.selectE, ConfigProviderService.vals.labelCanvasConfig.newSegmentName);\n                            if (!insSeg.ret) {\n                              scope.dials.open('views/error.html', 'ModalCtrl', 'Error : You are not allowed to insert a Segment here.');\n                            } else {\n                              HistoryService.addObjToUndoStack({\n                                'type': 'ESPS',\n                                'action': 'INSERTSEGMENTS',\n                                'name': viewState.getcurClickLevelName(),\n                                'start': viewState.curViewPort.selectS,\n                                'end': viewState.curViewPort.selectE,\n                                'ids': insSeg.ids,\n                                'segName': ConfigProviderService.vals.labelCanvasConfig.newSegmentName\n                              });\n                            }\n                          }\n                        } else {\n                          var levelDef = ConfigProviderService.getLevelDefinition(viewState.getcurClickLevelName());\n                          if (typeof levelDef.anagestConfig === 'undefined') {\n                            var insPoint = LevelService.insertPoint(viewState.getcurClickLevelName(), viewState.curViewPort.selectS, ConfigProviderService.vals.labelCanvasConfig.newEventName);\n                            if (insPoint.alreadyExists) {\n                              scope.dials.open('views/error.html', 'ModalCtrl', 'Error: You are not allowed to insert a Point here.');\n                            } else {\n                              HistoryService.addObjToUndoStack({\n                                'type': 'ESPS',\n                                'action': 'INSERTPOINT',\n                                'name': viewState.getcurClickLevelName(),\n                                'start': viewState.curViewPort.selectS,\n                                'id': insPoint.id,\n                                'pointName': ConfigProviderService.vals.labelCanvasConfig.newEventName\n                              });\n                            }\n                          } else {\n                            AnagestService.insertAnagestEvents();\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                  }\n                }\n              }\n              // undo\n              if (code === ConfigProviderService.vals.keyMappings.undo) {\n                if (viewState.getPermission('labelAction')) {\n                  HistoryService.undo();\n                }\n              }\n              // redo\n              if (code === ConfigProviderService.vals.keyMappings.redo) {\n                if (viewState.getPermission('labelAction')) {\n                  HistoryService.redo();\n                }\n              }\n              // deletePreselBoundary\n              if (code === ConfigProviderService.vals.keyMappings.deletePreselBoundary) {\n                if (viewState.getPermission('labelAction')) {\n                  if (!e.shiftKey) {\n                    if (ConfigProviderService.vals.restrictions.deleteItemBoundary) {\n                      var seg = viewState.getcurMouseSegment();\n                      var isFirst = viewState.getcurMouseisFirst();\n                      var isLast = viewState.getcurMouseisLast();\n                      var levelname = viewState.getcurMouseLevelName();\n                      var type = viewState.getcurMouseLevelType();\n                      if (seg !== undefined) {\n                        if (type === 'SEGMENT') {\n                          var deletedSegment = LevelService.deleteBoundary(levelname, seg.id, isFirst, isLast);\n                          HistoryService.addObjToUndoStack({\n                            'type': 'ESPS',\n                            'action': 'DELETEBOUNDARY',\n                            'name': levelname,\n                            'id': seg.id,\n                            'isFirst': isFirst,\n                            'isLast': isLast,\n                            'deletedSegment': deletedSegment\n                          });\n                          // reset to undefined\n                          viewState.setcurMouseSegment(undefined, undefined, undefined);\n                          viewState.setcurClickSegment(deletedSegment.clickSeg);\n                        } else {\n                          var deletedPoint = LevelService.deletePoint(levelname, seg.id);\n                          HistoryService.addObjToUndoStack({\n                            'type': 'ESPS',\n                            'action': 'DELETEPOINT',\n                            'name': levelname,\n                            'start': deletedPoint.samplePoint,\n                            'id': deletedPoint.id,\n                            'pointName': deletedPoint.labels[0].value\n                          });\n                          // reset to undefined\n                          viewState.setcurMouseSegment(undefined, undefined, undefined);\n                        }\n                      } else {\n                      }\n                    }\n                  } else {\n                    if (ConfigProviderService.vals.restrictions.deleteItem) {\n                      var seg = viewState.getcurClickSegments();\n                      if (seg !== undefined && seg.length > 0) {\n                        var levelname = viewState.getcurClickLevelName();\n                        if (viewState.getcurClickLevelType() === 'SEGMENT') {\n                          var deletedSegment = LevelService.deleteSegments(levelname, seg[0].id, seg.length);\n                          HistoryService.addObjToUndoStack({\n                            'type': 'ESPS',\n                            'action': 'DELETESEGMENTS',\n                            'name': levelname,\n                            'id': seg[0].id,\n                            'length': seg.length,\n                            'deletedSegment': deletedSegment\n                          });\n                          viewState.setcurMouseSegment(undefined, undefined, undefined);\n                          viewState.setcurClickSegment(deletedSegment.clickSeg);\n                        } else {\n                          scope.dials.open('views/error.html', 'ModalCtrl', 'Delete Error: You can not delete Segments on Point Levels.');\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n              if (!e.metaKey && !e.ctrlKey) {\n                e.preventDefault();\n                e.stopPropagation();\n              }\n            }\n          });\n        }\n        scope.safeApply = function (fn) {\n          var phase = this.$root.$$phase;\n          if (phase == '$apply' || phase == '$digest') {\n            if (fn && typeof fn === 'function') {\n              fn();\n            }\n          } else {\n            this.$apply(fn);\n          }\n        };\n        //remove binding on destroy\n        scope.$on('$destroy', function () {\n          $(window).off('keydown');\n        });\n      }\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').directive('delete', function () {\n  return {\n    restrict: 'A',\n    link: function (scope, element, attr) {\n      var name = scope.this.level.name;\n      element.bind('click', function () {\n        scope.vs.setcurClickLevelName(name, attr.delete);\n        scope.dials.open('views/deleteLevel.html', 'ModalCtrl', name);\n      });\n    }\n  };\n});\n'use strict';\nangular.module('emuwebApp').directive('resize', function () {\n  return {\n    restrict: 'A',\n    link: function (scope, element) {\n      var elem = element.parent().parent();\n      var elemHeight = 0;\n      var deleteButton = elem.find(element.parent().children()[0]);\n      var resizeButton = elem.find(element.parent().children()[1]);\n      var saveButton = elem.find(element.parent().children()[2]);\n      element.bind('click', function () {\n        if (scope.open) {\n          scope.open = false;\n          elemHeight = elem.css('height');\n          elem.css({ 'height': '30px' });\n          if (scope.cps.vals.activeButtons.deleteSingleLevel) {\n            deleteButton.hide();\n          }\n          if (scope.cps.vals.activeButtons.saveSingleLevel) {\n            saveButton.hide();\n          }\n        } else {\n          scope.open = true;\n          elem.css({ 'height': elemHeight });\n          if (scope.cps.vals.activeButtons.deleteSingleLevel) {\n            deleteButton.show();\n          }\n          if (scope.cps.vals.activeButtons.saveSingleLevel) {\n            saveButton.show();\n          }\n        }\n        scope.updateView();\n      });\n    }\n  };\n});\n'use strict';\nangular.module('emuwebApp').directive('enlarge', [\n  '$rootScope',\n  'viewState',\n  'ConfigProviderService',\n  function ($rootScope, viewState, ConfigProviderService) {\n    return {\n      restrict: 'A',\n      link: function (scope, element, attrs) {\n        scope.$watch('viewState.curPerspectiveIdx', function () {\n          if (!$.isEmptyObject(ConfigProviderService.vals.perspectives)) {\n            if (!$.isEmptyObject(viewState.curPerspectiveIdx)) {\n              console.log(viewState.curPerspectiveIdx);\n              if (ConfigProviderService.vals.perspectives[viewState.curPerspectiveIdx].signalCanvases.order.length === 1) {\n                element.hide();\n              } else {\n                element.show();\n              }\n            }\n          }\n        }, true);\n        var open = false;\n        element.bind('click', function () {\n          if (open) {\n            open = false;\n            viewState.setenlarge(-1);\n          } else {\n            open = true;\n            viewState.setenlarge(attrs.enlarge);\n          }\n          $rootScope.$apply();\n        });\n      }\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').directive('save', [\n  'dialogService',\n  'Espsparserservice',\n  function (dialogService, Espsparserservice) {\n    return {\n      restrict: 'A',\n      link: function (scope, element, attr) {\n        var name = scope.this.level.name;\n        element.bind('click', function () {\n          scope.vs.setcurClickLevelName(name, attr.save);\n          Espsparserservice.asyncParseJSO(name).then(function (result) {\n            dialogService.openExport('views/export.html', 'ExportCtrl', result.data, name + '_esps.txt');\n          });\n        });\n      }\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').directive('previewtrack', [\n  'viewState',\n  'Soundhandlerservice',\n  function (viewState, Soundhandlerservice) {\n    return {\n      restrict: 'A',\n      scope: {},\n      link: function (scope, element) {\n        var startPCM = -1;\n        ///////////////\n        // bindings\n        //\n        element.bind('click', function (x) {\n          if (!$.isEmptyObject(Soundhandlerservice.wavJSO)) {\n            var width = viewState.curViewPort.eS - viewState.curViewPort.sS;\n            startPCM = viewState.getX(x) * (Soundhandlerservice.wavJSO.Data.length / x.originalEvent.target.width);\n            if (!viewState.focusInTextField) {\n              scope.$apply(function () {\n                viewState.setViewPort(startPCM - width / 2, startPCM + width / 2);\n              });\n            }\n          }\n        });\n        //\n        element.bind('mousedown', function (x) {\n          if (!$.isEmptyObject(Soundhandlerservice.wavJSO)) {\n            startPCM = viewState.getX(x) * (Soundhandlerservice.wavJSO.Data.length / x.originalEvent.target.width);\n          }\n        });\n        //\n        element.bind('mousemove', function (x) {\n          var mbutton = 0;\n          if (x.buttons === undefined) {\n            mbutton = x.which;\n          } else {\n            mbutton = x.buttons;\n          }\n          switch (mbutton) {\n          case 1:\n            if (startPCM !== -1) {\n              var width = viewState.curViewPort.eS - viewState.curViewPort.sS;\n              startPCM = viewState.getX(x) * (Soundhandlerservice.wavJSO.Data.length / x.originalEvent.target.width);\n              if (!viewState.focusInTextField) {\n                scope.$apply(function () {\n                  viewState.setViewPort(startPCM - width / 2, startPCM + width / 2);\n                });\n              }\n            }\n            break;\n          }\n        });\n        //\n        element.bind('mouseup', function () {\n          startPCM = -1;\n        });\n        //\n        element.bind('mouseout', function () {\n          startPCM = -1;\n        });\n      }\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').service('Iohandlerservice', [\n  '$rootScope',\n  '$http',\n  '$location',\n  '$q',\n  'HistoryService',\n  'viewState',\n  'Soundhandlerservice',\n  'Ssffparserservice',\n  'Wavparserservice',\n  'Textgridparserservice',\n  'ConfigProviderService',\n  'Espsparserservice',\n  'Ssffdataservice',\n  'Websockethandler',\n  function Iohandlerservice($rootScope, $http, $location, $q, HistoryService, viewState, Soundhandlerservice, Ssffparserservice, Wavparserservice, Textgridparserservice, ConfigProviderService, Espsparserservice, Ssffdataservice, Websockethandler) {\n    // shared service object\n    var sServObj = {};\n    // $http.defaults.useXDomain = true;\n    sServObj.wsH = Websockethandler;\n    /**\n\t\t * default config is always loaded from same origin\n\t\t */\n    sServObj.httpGetDefaultConfig = function () {\n      var prom = $http.get('configFiles/default_emuwebappConfig.json');\n      return prom;\n    };\n    /**\n\t\t * default config is always loaded from same origin\n\t\t */\n    sServObj.httpGetPath = function (path, respType) {\n      var prom = $http.get(path, { responseType: respType });\n      return prom;\n    };\n    ////////////////////////////\n    // EMU-webApp protocol begins here\n    //\n    /**\n\t\t *\n\t\t */\n    sServObj.getProtocol = function () {\n      var getProm;\n      if (ConfigProviderService.vals.main.comMode === 'CORS') {\n        alert('CORS version of getProtocol not implemented');\n      } else if (ConfigProviderService.vals.main.comMode === 'WS') {\n        getProm = Websockethandler.getProtocol();\n      }\n      return getProm;\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.getDoUserManagement = function () {\n      var getProm;\n      if (ConfigProviderService.vals.main.comMode === 'CORS') {\n        alert('CORS version of getDoUserManagement not implemented');\n      } else if (ConfigProviderService.vals.main.comMode === 'WS') {\n        getProm = Websockethandler.getDoUserManagement();\n      }\n      return getProm;\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.logOnUser = function (name, pwd) {\n      var getProm;\n      if (ConfigProviderService.vals.main.comMode === 'CORS') {\n        alert('CORS version of logOnUser not implemented');\n      } else if (ConfigProviderService.vals.main.comMode === 'WS') {\n        getProm = Websockethandler.logOnUser(name, pwd);\n      }\n      return getProm;\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.getDBconfigFile = function (nameOfDB) {\n      var getProm;\n      if (ConfigProviderService.vals.main.comMode === 'CORS') {\n        alert('CORS version of getDBconfigFile not implemented');\n      } else if (ConfigProviderService.vals.main.comMode === 'WS') {\n        getProm = Websockethandler.getDBconfigFile();\n      } else if (ConfigProviderService.vals.main.comMode === 'DEMO') {\n        getProm = $http.get('demoDBs/' + nameOfDB + '/' + nameOfDB + '_DBconfig.json');\n      }\n      return getProm;\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.getBundleList = function (nameOfDB) {\n      var getProm;\n      if (ConfigProviderService.vals.main.comMode === 'CORS') {\n        alert('CORS version of getBundleList not implemented');\n      } else if (ConfigProviderService.vals.main.comMode === 'WS') {\n        getProm = Websockethandler.getBundleList();\n      } else if (ConfigProviderService.vals.main.comMode === 'DEMO') {\n        getProm = $http.get('demoDBs/' + nameOfDB + '/' + nameOfDB + '_bundleList.json');\n      }\n      return getProm;\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.getBundle = function (name, nameOfDB) {\n      var getProm;\n      if (ConfigProviderService.vals.main.comMode === 'CORS') {\n        alert('CORS version of getBundle not implemented');\n      } else if (ConfigProviderService.vals.main.comMode === 'WS') {\n        getProm = Websockethandler.getBundle(name);\n      } else if (ConfigProviderService.vals.main.comMode === 'DEMO') {\n        // getProm = $http.get('testData/newAE/SES0000/' + name + '/' + name + '.json');\n        getProm = $http.get('demoDBs/' + nameOfDB + '/' + name + '_bndl.json');\n      }\n      return getProm;\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.saveBundle = function (bundleData) {\n      var getProm;\n      if (ConfigProviderService.vals.main.comMode === 'CORS') {\n        alert('CORS version of saveBundle not implemented');\n      } else if (ConfigProviderService.vals.main.comMode === 'WS') {\n        getProm = Websockethandler.saveBundle(bundleData);\n      }\n      // else if (ConfigProviderService.vals.main.comMode === 'DEMO') {\n      // getProm = $http.get('testData/newAE/SES0000/' + name + '/' + name + '.json');\n      // \tgetProm = $http.get('testData/testAeBundle.json'); // SIC SIC SIC HARDCODED -> name is ignored\n      // }\n      return getProm;\n    };\n    //\n    // EMU-webApp protocol ends here\n    ////////////////////////////\n    /**\n\t\t * pass through to according parser\n\t\t */\n    sServObj.parseLabelFile = function (string, annotates, name, fileType) {\n      var prom;\n      if (fileType === 'ESPS') {\n        prom = Espsparserservice.asyncParseEsps(string, ConfigProviderService.embeddedVals.labelGetUrl, 'embeddedESPS');\n      } else if (fileType === 'TEXTGRID') {\n        prom = Textgridparserservice.asyncParseTextGrid(string, ConfigProviderService.embeddedVals.labelGetUrl, 'embeddedTEXTGRID');\n      }\n      return prom;\n    };\n    return sServObj;\n  }\n]);\n'use strict';\nangular.module('emuwebApp').service('Soundhandlerservice', [\n  '$document',\n  'Binarydatamaniphelper',\n  function Soundhandlerservice($document, Binarydatamaniphelper) {\n    // shared service object\n    var sServObj = {};\n    sServObj.wavJSO = {};\n    sServObj.player = $document[0].createElement('audio');\n    sServObj.player.isPlaying = false;\n    sServObj.setPlayerSrc = function (buf) {\n      var base64String = Binarydatamaniphelper.arrayBufferToBase64(buf);\n      this.player.src = 'data:audio/wav;base64,' + base64String;\n    };\n    sServObj.resetPlayerSrcFromTo = function (sampleStart, endSample) {\n      var bytePerSample = this.wavJSO.BitsPerSample / 8;\n      var header = this.wavJSO.origArrBuf.subarray(0, 44);\n      var data = this.wavJSO.origArrBuf.subarray(44, this.wavJSO.Data.length * bytePerSample);\n      var dv = new DataView(header);\n      dv.setUint32(40, (endSample - sampleStart) * bytePerSample, true);\n      // var Subchunk2Size = dv.getUint32(40, true);\n      // console.log(Subchunk2Size);\n      var newData = data.subarray(sampleStart * bytePerSample, (endSample - sampleStart) * bytePerSample);\n      var tmp = new Uint8Array(header.byteLength + newData.byteLength);\n      tmp.set(new Uint8Array(header), 0);\n      tmp.set(new Uint8Array(newData), header.byteLength);\n      var base64String = Binarydatamaniphelper.arrayBufferToBase64(tmp.buffer);\n      this.player.src = 'data:audio/wav;base64,' + base64String;\n    };\n    sServObj.playFromTo = function (sampleStart, endSample) {\n      this.resetPlayerSrcFromTo(sampleStart, endSample);\n      if (this.player.isPlaying) {\n        this.player.isPlaying = false;\n        this.player.pause();\n      } else {\n        this.player.isPlaying = true;\n        this.player.play();\n      }\n    };\n    sServObj.player.addEventListener('ended', function () {\n      this.isPlaying = false;\n    }, false);\n    return sServObj;\n  }\n]);\n'use strict';\nangular.module('emuwebApp').directive('drawssff', [\n  'viewState',\n  'ConfigProviderService',\n  'Ssffdataservice',\n  'HistoryService',\n  'fontScaleService',\n  function (viewState, ConfigProviderService, Ssffdataservice, HistoryService, fontScaleService) {\n    return {\n      restrict: 'A',\n      scope: {},\n      link: function postLink(scope, element, atts) {\n        var canvas = element[0];\n        var trackName;\n        var assTrackName = '';\n        var lastDraw = Date.now();\n        // add watch vars to scope\n        scope.vs = viewState;\n        scope.hists = HistoryService;\n        scope.ssffds = Ssffdataservice;\n        ////////////////////\n        // observes\n        // observe attribute\n        atts.$observe('ssffTrackname', function (val) {\n          trackName = val;\n        });\n        ////////////////////\n        // watches\n        //watch viewPort change\n        scope.$watch('vs.curViewPort', function (newValue, oldValue) {\n          if (oldValue.sS !== newValue.sS || oldValue.eS !== newValue.eS) {\n            handleUpdate(newValue, oldValue);\n          }\n        }, true);\n        //watch perspective change\n        scope.$watch('vs.curPerspectiveIdx', function (newValue, oldValue) {\n          handleUpdate(newValue, oldValue);\n        }, true);\n        //watch vs.curCorrectionToolNr change\n        scope.$watch('vs.curCorrectionToolNr', function (newValue, oldValue) {\n          handleUpdate(newValue, oldValue);\n        }, true);\n        //watch hists.\n        scope.$watch('hists.movesAwayFromLastSave', function (newValue, oldValue) {\n          handleUpdate(newValue, oldValue);\n        }, true);\n        // watch ssffds.data change\n        scope.$watch('ssffds.data.length', function (newValue, oldValue) {\n          handleUpdate(newValue, oldValue);\n        }, true);\n        // watch vs.spectroSettings change\n        scope.$watch('vs.spectroSettings', function (newValue, oldValue) {\n          handleUpdate(newValue, oldValue);\n        }, true);\n        //\n        //////////////////////\n        /**\n         *\n         */\n        function handleUpdate() {\n          var ctx = canvas.getContext('2d');\n          ctx.clearRect(0, 0, canvas.width, canvas.height);\n          if (!$.isEmptyObject(Ssffdataservice.data)) {\n            if (Ssffdataservice.data.length !== 0) {\n              assTrackName = '';\n              // check assignments (= overlays)\n              ConfigProviderService.vals.perspectives[viewState.curPerspectiveIdx].signalCanvases.assign.forEach(function (ass, i) {\n                if (ass.signalCanvasName === trackName) {\n                  assTrackName = ass.ssffTrackName;\n                  var tr = ConfigProviderService.getSsffTrackConfig(ass.ssffTrackName);\n                  var col = Ssffdataservice.getColumnOfTrack(tr.name, tr.columnName);\n                  var sRaSt = Ssffdataservice.getSampleRateAndStartTimeOfTrack(tr.name);\n                  var minMaxLims = ConfigProviderService.getLimsOfTrack(tr.name);\n                  // draw values  \n                  drawValues(viewState, canvas, ConfigProviderService, col, sRaSt.sampleRate, sRaSt.startTime, minMaxLims);\n                }\n              });\n              assTrackName = '';\n              // draw ssffTrack onto own canvas\n              if (trackName !== 'OSCI' && trackName !== 'SPEC') {\n                // console.log('#######here')\n                // console.log(trackName)\n                var tr = ConfigProviderService.getSsffTrackConfig(trackName);\n                var col = Ssffdataservice.getColumnOfTrack(tr.name, tr.columnName);\n                var sRaSt = Ssffdataservice.getSampleRateAndStartTimeOfTrack(tr.name);\n                var minMaxLims = ConfigProviderService.getLimsOfTrack(tr.name);\n                // draw values  \n                drawValues(viewState, canvas, ConfigProviderService, col, sRaSt.sampleRate, sRaSt.startTime, minMaxLims);\n              }\n            }\n          } else {\n            var ctx = canvas.getContext('2d');\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n          }\n        }\n        /**\n         * draw values onto canvas\n         */\n        function drawValues(viewState, canvas, config, col, sR, sT, minMaxLims) {\n          var ctx = canvas.getContext('2d');\n          // create a destination canvas. Here the altered image will be placed\n          // ctx.fillStyle = \"rgba(\" + transparentColor.r + \", \" + transparentColor.g + \", \" + transparentColor.b + \", 1.0)\";\n          // ctx.clearRect(0, 0, canvas.width, canvas.height);\n          var minVal, maxVal;\n          if (trackName === 'SPEC' && assTrackName === 'FORMANTS') {\n            minVal = viewState.spectroSettings.rangeFrom;\n            maxVal = viewState.spectroSettings.rangeTo;\n          } else {\n            minVal = col._minVal;\n            maxVal = col._maxVal;\n          }\n          var startTimeVP = viewState.getViewPortStartTime();\n          var endTimeVP = viewState.getViewPortEndTime();\n          var colStartSampleNr = Math.round(startTimeVP * sR + sT);\n          var colEndSampleNr = Math.round(endTimeVP * sR + sT);\n          var nrOfSamples = colEndSampleNr - colStartSampleNr;\n          // console.log('###################################');\n          // console.log(col.name);\n          // console.log(startTimeVP);\n          // console.log(endTimeVP);\n          var curSampleArrs = col.values.slice(colStartSampleNr, colStartSampleNr + nrOfSamples);\n          if (nrOfSamples < canvas.width && nrOfSamples >= 2) {\n            var x, y, prevX, prevY, prevVal, curSampleInCol, curSampleInColTime;\n            ////////////////////////////////\n            // NEW VERSION\n            ////////////////////////////////\n            angular.forEach(curSampleArrs[0], function (contourVal, contourNr) {\n              // console.log(contourNr);\n              if ($.isEmptyObject(minMaxLims) || contourNr >= minMaxLims.minContourIdx && contourNr <= minMaxLims.maxContourIdx) {\n                // set color\n                if ($.isEmptyObject(minMaxLims)) {\n                  ctx.strokeStyle = 'hsl(' + contourNr * (360 / curSampleArrs[0].length) + ',80%, 50%)';\n                  ctx.fillStyle = 'hsl(' + contourNr * (360 / curSampleArrs[0].length) + ',80%, 50%)';\n                } else {\n                  var l = minMaxLims.maxContourIdx - minMaxLims.minContourIdx + 1;\n                  ctx.strokeStyle = 'hsl(' + contourNr * (360 / l) + ',80%, 50%)';\n                  ctx.fillStyle = 'hsl(' + contourNr * (360 / l) + ',80%, 50%)';\n                }\n                // overwrite color settings if they are preconfigured\n                var contColors = ConfigProviderService.getContourColorsOfTrack(assTrackName);\n                if (contColors !== undefined) {\n                  if (contColors.colors[contourNr] !== undefined) {\n                    ctx.strokeStyle = ConfigProviderService.vals.perspectives[viewState.curPerspectiveIdx].signalCanvases.contourColors[0].colors[contourNr];\n                    ctx.fillStyle = ConfigProviderService.vals.perspectives[viewState.curPerspectiveIdx].signalCanvases.contourColors[0].colors[contourNr];\n                  }\n                }\n                // mark selected\n                // console.log(viewState.curCorrectionToolNr);\n                if (viewState.curCorrectionToolNr - 1 === contourNr && trackName === 'SPEC' && assTrackName === 'FORMANTS') {\n                  ctx.strokeStyle = ConfigProviderService.vals.colors.selectedContourColor;\n                  ctx.fillStyle = ConfigProviderService.vals.colors.selectedContourColor;\n                }\n                ctx.beginPath();\n                // first line from sample not in view (left)\n                if (colStartSampleNr >= 1) {\n                  var leftBorder = col.values[colStartSampleNr - 1];\n                  var leftVal = leftBorder[contourNr];\n                  curSampleInCol = colStartSampleNr - 1;\n                  curSampleInColTime = 1 / sR * curSampleInCol + sT;\n                  x = (curSampleInColTime - startTimeVP) / (endTimeVP - startTimeVP) * canvas.width;\n                  y = canvas.height - (leftVal - minVal) / (maxVal - minVal) * canvas.height;\n                  ctx.moveTo(x, y);\n                }\n                angular.forEach(curSampleArrs, function (curArr, curArrIdx) {\n                  // console.log(curArr[contourNr]);\n                  curSampleInCol = colStartSampleNr + curArrIdx;\n                  curSampleInColTime = 1 / sR * curSampleInCol + sT;\n                  x = (curSampleInColTime - startTimeVP) / (endTimeVP - startTimeVP) * canvas.width;\n                  y = canvas.height - (curArr[contourNr] - minVal) / (maxVal - minVal) * canvas.height;\n                  ctx.arc(x, y - 1, 2, 0, 2 * Math.PI, false);\n                  ctx.lineTo(x, y);\n                });\n                // last line from sample not in view (right)\n                if (colEndSampleNr < col.values.length - 1) {\n                  var rightBorder = col.values[colEndSampleNr + 1];\n                  var rightVal = rightBorder[contourNr];\n                  curSampleInCol = colEndSampleNr + 1;\n                  curSampleInColTime = 1 / sR * curSampleInCol + sT;\n                  x = (curSampleInColTime - startTimeVP) / (endTimeVP - startTimeVP) * canvas.width;\n                  y = canvas.height - (rightVal - minVal) / (maxVal - minVal) * canvas.height;\n                  ctx.lineTo(x, y);\n                }\n                ctx.stroke();  // ctx.fill();\n              }\n            });  ////////////////////////////////\n                 // OLD VERSION\n                 ////////////////////////////////\n                 // curSampleArrs.forEach(function (valRep, valIdx) {\n                 //   valRep.forEach(function (val, idx) {\n                 //     if ($.isEmptyObject(minMaxLims) || (idx >= minMaxLims.min && idx <= minMaxLims.max)) {\n                 //       curSampleInCol = colStartSampleNr + valIdx;\n                 //       curSampleInColTime = (1 / sR * curSampleInCol) + sT;\n                 //       x = (curSampleInColTime - startTimeVP) / (endTimeVP - startTimeVP) * canvas.width;\n                 //       y = canvas.height - ((val - minVal) / (maxVal - minVal) * canvas.height);\n                 //       // set color\n                 //       if ($.isEmptyObject(minMaxLims)) {\n                 //         ctx.strokeStyle = 'hsl(' + idx * (360 / valRep.length) + ',80%, 50%)';\n                 //         ctx.fillStyle = 'hsl(' + idx * (360 / valRep.length) + ',80%, 50%)';\n                 //       } else {\n                 //         var l = (minMaxLims.max - minMaxLims.min) + 1;\n                 //         ctx.strokeStyle = 'hsl(' + idx * (360 / l) + ',80%, 50%)';\n                 //         ctx.fillStyle = 'hsl(' + idx * (360 / l) + ',80%, 50%)';\n                 //       }\n                 //       // draw dot\n                 //       // if (val !== null) {\n                 //       //   ctx.beginPath();\n                 //       //   ctx.arc(x, y - 1, 2, 0, 2 * Math.PI, false);\n                 //       //   ctx.closePath();\n                 //       //   ctx.stroke();\n                 //       //   ctx.fill();\n                 //       // }\n                 //       if (valIdx !== 0) {\n                 //         curSampleInCol = colStartSampleNr + valIdx - 1;\n                 //         curSampleInColTime = (1 / sR * curSampleInCol) + sT;\n                 //         prevX = (curSampleInColTime - startTimeVP) / (endTimeVP - startTimeVP) * canvas.width;\n                 //         prevY = canvas.height - ((curSampleArrs[valIdx - 1][idx] - minVal) / (maxVal - minVal) * canvas.height);\n                 //         // mark selected\n                 //         if (viewState.curCorrectionToolNr - 1 === idx && trackName === 'SPEC' && assTrackName === 'FORMANTS') {\n                 //           ctx.strokeStyle = 'white';\n                 //           ctx.fillStyle = 'white';\n                 //         }\n                 //         // draw line\n                 //         if (val !== null && prevVal !== null) {\n                 //           ctx.beginPath();\n                 //           ctx.arc(x, y - 1, 2, 0, 2 * Math.PI, false);\n                 //           ctx.moveTo(prevX, prevY);\n                 //           ctx.lineTo(x, y);\n                 //           ctx.stroke();\n                 //           ctx.fill();\n                 //         }\n                 //         prevVal = val;\n                 //         //check if last sample\n                 //         if (valIdx === curSampleArrs.length - 1) {\n                 //           if (colEndSampleNr !== col.values.length - 1) {\n                 //             // lines to right boarder samples not in view\n                 //             var rightBorder = col.values[colEndSampleNr + 1];\n                 //             val = rightBorder[idx];\n                 //             curSampleInCol = colEndSampleNr + 1;\n                 //             curSampleInColTime = (1 / sR * curSampleInCol) + sT;\n                 //             var nextX = (curSampleInColTime - startTimeVP) / (endTimeVP - startTimeVP) * canvas.width;\n                 //             var nextY = canvas.height - ((val - minVal) / (maxVal - minVal) * canvas.height);\n                 //             // draw line\n                 //             ctx.beginPath();\n                 //             ctx.moveTo(x, y);\n                 //             ctx.lineTo(nextX, nextY);\n                 //             ctx.stroke();\n                 //             ctx.fill();\n                 //           }\n                 //         }\n                 //       } else {\n                 //         // lines to left boarder samples not in view\n                 //         if (colStartSampleNr !== 0) {\n                 //           var leftBorder = col.values[colStartSampleNr - 1];\n                 //           val = leftBorder[idx];\n                 //           curSampleInCol = colStartSampleNr - 1;\n                 //           curSampleInColTime = (1 / sR * curSampleInCol) + sT;\n                 //           prevX = (curSampleInColTime - startTimeVP) / (endTimeVP - startTimeVP) * canvas.width;\n                 //           prevY = canvas.height - ((val - minVal) / (maxVal - minVal) * canvas.height);\n                 //           // mark selected\n                 //           if (viewState.curCorrectionToolNr - 1 === idx && trackName === 'SPEC' && assTrackName === 'FORMANTS') {\n                 //             ctx.strokeStyle = 'white';\n                 //             ctx.fillStyle = 'white';\n                 //           }\n                 //           // draw line\n                 //           ctx.beginPath();\n                 //           ctx.moveTo(prevX, prevY);\n                 //           ctx.lineTo(x, y);\n                 //           ctx.stroke();\n                 //           ctx.fill();\n                 //         }\n                 //       }\n                 //     }\n                 //   });\n                 // });\n          } else {\n            ctx.strokeStyle = 'red';\n            var txt;\n            // var tW;\n            var horizontalText;\n            if (nrOfSamples <= 2) {\n              horizontalText = fontScaleService.getTextImageTwoLines(ctx, 'Zoom out to', 'see contour(s)', ConfigProviderService.vals.font.fontPxSize, ConfigProviderService.vals.font.fontType, ConfigProviderService.vals.colors.crossHairsColor);\n              // ctx.fillStyle = ConfigProviderService.vals.colors.levelColor;\n              // ctx.fillRect(0, 0, canvas.width, canvas.height);\n              ctx.drawImage(horizontalText, 0, 0, horizontalText.width, horizontalText.height, canvas.width / 2 - horizontalText.width / 2, 25, horizontalText.width, horizontalText.height);\n            } else {\n              txt = 'Zoom in to see contour(s)';\n              horizontalText = fontScaleService.getTextImageTwoLines(ctx, 'Zoom in to', 'see contour(s)', ConfigProviderService.vals.font.fontPxSize, ConfigProviderService.vals.font.fontType, ConfigProviderService.vals.colors.crossHairsColor);\n              // ctx.fillStyle = ConfigProviderService.vals.colors.levelColor;\n              // ctx.fillRect(0, 0, canvas.width, canvas.height);              \n              ctx.drawImage(horizontalText, 0, 0, horizontalText.width, horizontalText.height, canvas.width / 2 - horizontalText.width / 2, 25, horizontalText.width, horizontalText.height);\n            }\n          }\n        }  //function\n      }\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').service('Ssffparserservice', [\n  '$q',\n  function Ssffparserservice($q) {\n    // shared service object\n    var sServObj = {};\n    var worker = new Worker('scripts/workers/ssffParserWorker.js');\n    var defer;\n    // add event listener to worker to respond to messages\n    worker.addEventListener('message', function (e) {\n      if (e.data.status.type === 'SUCCESS') {\n        defer.resolve(e.data);\n      } else {\n        defer.reject(e.data);\n      }\n    }, false);\n    /**\n\t\t * parse array of ssff file using webworker\n\t\t * @param array of ssff files encoded as base64 stings\n\t\t * @returns promise\n\t\t */\n    sServObj.asyncParseSsffArr = function (ssffArray) {\n      defer = $q.defer();\n      worker.postMessage({\n        'cmd': 'parseArr',\n        'ssffArr': ssffArray\n      });\n      // Send data to our worker.\n      return defer.promise;\n    };\n    /**\n\t\t * convert jso to ssff binary file using webworker\n\t\t * @param java script object of ssff file (internal rep)\n\t\t * @returns promise\n\t\t */\n    sServObj.asyncJso2ssff = function (jso) {\n      defer = $q.defer();\n      worker.postMessage({\n        'cmd': 'jso2ssff',\n        'jso': JSON.stringify(jso)\n      });\n      // Send data to our worker.\n      return defer.promise;\n    };\n    return sServObj;\n  }\n]);\n'use strict';\nangular.module('emuwebApp').directive('mouseTrackAndCorrectionTool', [\n  'viewState',\n  'ConfigProviderService',\n  'Ssffdataservice',\n  'Drawhelperservice',\n  'HistoryService',\n  'Soundhandlerservice',\n  function (viewState, ConfigProviderService, Ssffdataservice, Drawhelperservice, HistoryService, Soundhandlerservice) {\n    return {\n      restrict: 'A',\n      scope: {},\n      link: function (scope, element, atts) {\n        var curMouseSample;\n        var dragStartSample;\n        var dragEndSample;\n        var canvas = element[0];\n        var ctx = canvas.getContext('2d');\n        // var elem = element[0];\n        var tr, col, sRaSt;\n        var trackName;\n        var bundleName;\n        /////////////////////////////\n        // observe attribute\n        atts.$observe('ssffTrackname', function (val) {\n          if (val) {\n            trackName = val;\n          }\n        });\n        // bundleName needed to reset tr, col, sRaSt on bundle change\n        atts.$observe('bundleName', function (val) {\n          if (val) {\n            bundleName = val;\n            if (!$.isEmptyObject(Ssffdataservice.data)) {\n              if (Ssffdataservice.data.length !== 0) {\n                tr = ConfigProviderService.getSsffTrackConfig('FORMANTS');\n                if (tr !== undefined) {\n                  col = Ssffdataservice.getColumnOfTrack(tr.name, tr.columnName);\n                  sRaSt = Ssffdataservice.getSampleRateAndStartTimeOfTrack(tr.name);\n                }\n              }\n            }\n          }\n        });\n        /////////////////////////////\n        // Bindings\n        element.bind('mousedown', function (event) {\n          dragStartSample = Math.round(viewState.getX(event) * viewState.getSamplesPerPixelVal(event) + viewState.curViewPort.sS);\n          dragEndSample = dragStartSample;\n          viewState.select(dragStartSample, dragStartSample);\n          //Drawhelperservice.drawViewPortTimes(ctx, true);\n          switchMarkupContext(event);\n          scope.$apply();\n        });\n        element.bind('mousemove', function (event) {\n          var mbutton = 0;\n          if (event.buttons === undefined) {\n            mbutton = event.which;\n          } else {\n            mbutton = event.buttons;\n          }\n          // perform mouse tracking\n          var mouseX = viewState.getX(event);\n          viewState.curMousePosSample = Math.round(viewState.curViewPort.sS + mouseX / element[0].width * (viewState.curViewPort.eS - viewState.curViewPort.sS));\n          switch (mbutton) {\n          case 0:\n            if (viewState.getPermission('labelAction')) {\n              switchMarkupContext(event);\n              if (!$.isEmptyObject(Ssffdataservice.data)) {\n                if (Ssffdataservice.data.length !== 0) {\n                  if (!viewState.getdragBarActive()) {\n                    if (viewState.curCorrectionToolNr !== undefined && !viewState.getdragBarActive() && !$.isEmptyObject(ConfigProviderService.getAssignment(trackName))) {\n                      // var col = Ssffdataservice.data[0].Columns[0];\n                      if (tr === undefined) {\n                        tr = ConfigProviderService.getSsffTrackConfig('FORMANTS');\n                        col = Ssffdataservice.getColumnOfTrack(tr.name, tr.columnName);\n                        sRaSt = Ssffdataservice.getSampleRateAndStartTimeOfTrack(tr.name);\n                      }\n                      var startTimeVP = viewState.getViewPortStartTime();\n                      var endTimeVP = viewState.getViewPortEndTime();\n                      var colStartSampleNr = Math.round(startTimeVP * sRaSt.sampleRate + sRaSt.startTime);\n                      var colEndSampleNr = Math.round(endTimeVP * sRaSt.sampleRate + sRaSt.startTime);\n                      var nrOfSamples = colEndSampleNr - colStartSampleNr;\n                      var curSampleArrs = col.values.slice(colStartSampleNr, colStartSampleNr + nrOfSamples);\n                      // console.log(colStartSampleNr)\n                      var curMouseTime = startTimeVP + viewState.getX(event) / event.originalEvent.target.width * (endTimeVP - startTimeVP);\n                      var curMouseSample = Math.round((curMouseTime + sRaSt.startTime) * sRaSt.sampleRate) - 1;\n                      //-1 for in view correction\n                      var curMouseSampleTime = 1 / sRaSt.sampleRate * curMouseSample + sRaSt.startTime;\n                      if (curMouseSample - colStartSampleNr < 0 || curMouseSample - colStartSampleNr >= curSampleArrs.length) {\n                        console.log('early return');\n                        return;\n                      }\n                      viewState.curPreselColumnSample = curMouseSample - colStartSampleNr;\n                      var x = (curMouseSampleTime - startTimeVP) / (endTimeVP - startTimeVP) * canvas.width;\n                      var y = canvas.height - curSampleArrs[viewState.curPreselColumnSample][viewState.curCorrectionToolNr - 1] / (viewState.spectroSettings.rangeTo - viewState.spectroSettings.rangeFrom) * canvas.height;\n                      // draw sample\n                      ctx.strokeStyle = 'black';\n                      ctx.fillStyle = 'black';\n                      ctx.beginPath();\n                      ctx.arc(x, y - 1, 2, 0, 2 * Math.PI, false);\n                      ctx.closePath();\n                      ctx.stroke();\n                      ctx.fill();\n                      if (event.shiftKey) {\n                        var oldValue = angular.copy(curSampleArrs[viewState.curPreselColumnSample][viewState.curCorrectionToolNr - 1]);\n                        var newValue = viewState.spectroSettings.rangeTo - viewState.getY(event) / event.originalEvent.target.height * viewState.spectroSettings.rangeTo;\n                        // SIC only using rangeTo\n                        curSampleArrs[viewState.curPreselColumnSample][viewState.curCorrectionToolNr - 1] = viewState.spectroSettings.rangeTo - viewState.getY(event) / event.originalEvent.target.height * viewState.spectroSettings.rangeTo;\n                        var updateObj = HistoryService.updateCurChangeObj({\n                            'type': 'SSFF',\n                            'trackName': tr.name,\n                            'sampleBlockIdx': colStartSampleNr + viewState.curPreselColumnSample,\n                            'sampleIdx': viewState.curCorrectionToolNr - 1,\n                            'oldValue': oldValue,\n                            'newValue': newValue\n                          });\n                        //draw updateObj as overlay\n                        for (var key in updateObj) {\n                          curMouseSampleTime = 1 / sRaSt.sampleRate * updateObj[key].sampleBlockIdx + sRaSt.startTime;\n                          x = (curMouseSampleTime - startTimeVP) / (endTimeVP - startTimeVP) * canvas.width;\n                          y = canvas.height - updateObj[key].newValue / (viewState.spectroSettings.rangeTo - viewState.spectroSettings.rangeFrom) * canvas.height;\n                          // draw sample\n                          ctx.strokeStyle = 'red';\n                          ctx.fillStyle = 'red';\n                          // ctx.lineWidth = 4;\n                          ctx.beginPath();\n                          ctx.arc(x, y - 1, 2, 0, 2 * Math.PI, false);\n                          ctx.closePath();\n                          ctx.stroke();\n                          ctx.fill();\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n            break;\n          case 1:\n            if (!viewState.getdragBarActive()) {\n              setSelectDrag(event);\n            }\n            break;\n          }\n          scope.$apply();\n        });\n        element.bind('mouseup', function (event) {\n          if (!viewState.getdragBarActive()) {\n            setSelectDrag(event);\n            switchMarkupContext(event);\n          }\n        });\n        // on mouse leave clear markup canvas\n        element.bind('mouseleave', function (event) {\n          if (!$.isEmptyObject(Soundhandlerservice)) {\n            if (!$.isEmptyObject(Soundhandlerservice.wavJSO)) {\n              // if (!$.isEmptyObject(Ssffdataservice.data)) {\n              // if (Ssffdataservice.data.length !== 0) {\n              if (!viewState.getdragBarActive()) {\n                if (viewState.getPermission('labelAction')) {\n                  switchMarkupContext(event, false);\n                }\n              }  // }\n                 // }\n            }\n          }\n        });\n        //\n        ////////////////////\n        function switchMarkupContext(event, leave) {\n          ctx.clearRect(0, 0, canvas.width, canvas.height);\n          // draw current viewport selected\n          if (atts.ssffTrackname == 'OSCI') {\n            Drawhelperservice.drawViewPortTimes(ctx, true);\n            Drawhelperservice.drawCurViewPortSelected(ctx, true);\n          } else if (atts.ssffTrackname == 'SPEC') {\n            Drawhelperservice.drawCurViewPortSelected(ctx, false);\n            Drawhelperservice.drawMinMaxAndName(ctx, '', viewState.spectroSettings.rangeFrom, viewState.spectroSettings.rangeTo, 2);\n          } else {\n            var tr = ConfigProviderService.getSsffTrackConfig(atts.ssffTrackname);\n            var col = Ssffdataservice.getColumnOfTrack(tr.name, tr.columnName);\n            Drawhelperservice.drawCurViewPortSelected(ctx, false);\n            Drawhelperservice.drawMinMaxAndName(ctx, atts.ssffTrackname, col._minVal, col._maxVal, 2);\n          }\n          // draw crossHairs\n          if (leave !== false && ConfigProviderService.vals.restrictions.drawCrossHairs) {\n            Drawhelperservice.drawCrossHairs(ctx, event, viewState.spectroSettings.rangeFrom, viewState.spectroSettings.rangeTo, 'Hz', atts.ssffTrackname);\n          }\n          // draw moving boundary line if moving\n          Drawhelperservice.drawMovingBoundaryLine(ctx);\n        }\n        function setSelectDrag(event) {\n          curMouseSample = Math.round(viewState.getX(event) * viewState.getSamplesPerPixelVal(event) + viewState.curViewPort.sS);\n          if (curMouseSample > dragStartSample) {\n            dragEndSample = curMouseSample;\n            viewState.select(dragStartSample, dragEndSample);\n          } else {\n            dragStartSample = curMouseSample;\n            viewState.select(dragStartSample, dragEndSample);\n          }\n          scope.$apply();\n        }\n      }\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').service('Drawhelperservice', [\n  'viewState',\n  'ConfigProviderService',\n  'Soundhandlerservice',\n  'fontScaleService',\n  'Ssffdataservice',\n  function Drawhelperservice(viewState, ConfigProviderService, Soundhandlerservice, fontScaleService, Ssffdataservice) {\n    //shared service object to be returned\n    var sServObj = {};\n    function getScale(ctx, str, scale) {\n      return ctx.measureText(str).width * scale;\n    }\n    function getScaleWidth(ctx, str1, str2, scaleX) {\n      if (str1.toString().length > str2.toString().length) {\n        return getScale(ctx, str1, scaleX);\n      } else {\n        return getScale(ctx, str2, scaleX);\n      }\n    }\n    /**\n\t\t * drawing method to draw single line between two\n\t\t * envelope points. Is used by drawOsciOnCanvas if\n\t\t * envelope drawing is done\n\t\t * @param index\n\t\t * @param value\n\t\t * @param max\n\t\t * @param prevPeak\n\t\t * @param canvas\n\t\t */\n    function drawFrame(viewState, index, value, max, prevPeak, canvas, config) {\n      var ctx = canvas.getContext('2d');\n      //cur\n      var w = 1;\n      var h = Math.round(value * (canvas.height / max));\n      //rel to max\n      var x = index * w;\n      var y = Math.round((canvas.height - h) / 2);\n      //prev\n      // var prevW = 1;\n      var prevH = Math.round(prevPeak * (canvas.height / max));\n      var prevX = (index - 1) * w;\n      var prevY = Math.round((canvas.height - prevH) / 2);\n      // if (posC >= x) {\n      // \tconsole.error('here...')\n      // \tctx.fillStyle = config.vals.colors.playProgressColor;\n      // \tctx.strokeStyle = config.vals.colors.playProgressColor;\n      // } else {\n      ctx.fillStyle = config.vals.colors.osciColor;\n      ctx.strokeStyle = config.vals.colors.osciColor;\n      // }\n      // ctx.beginPath();\n      ctx.moveTo(prevX, prevY);\n      ctx.lineTo(x, y);  // ctx.stroke();\n    }\n    sServObj.osciPeaks = [];\n    /**\n\t\t * get current peaks to be drawn\n\t\t * if drawing over sample exact -> samples\n\t\t * if multiple samples per pixel -> calculate envelope points\n\t\t */\n    sServObj.calculatePeaks = function (viewState, canvas, data) {\n      var samplePerPx = (viewState.curViewPort.eS + 1 - viewState.curViewPort.sS) / canvas.width;\n      // PCM Samples per new pixel + one to correct for subtraction\n      var numberOfChannels = 1;\n      // hardcode for now...\n      var peaks = [];\n      var minPeak = Infinity;\n      var maxPeak = -Infinity;\n      var relData;\n      if (samplePerPx <= 1) {\n        // check if view at start            \n        if (viewState.curViewPort.sS === 0) {\n          relData = data.subarray(viewState.curViewPort.sS, viewState.curViewPort.eS + 2);  // +2 to compensate for length\n        } else {\n          relData = data.subarray(viewState.curViewPort.sS - 1, viewState.curViewPort.eS + 2);  // +2 to compensate for length\n        }\n        minPeak = Math.min.apply(Math, relData);\n        maxPeak = Math.max.apply(Math, relData);\n        peaks = Array.prototype.slice.call(relData);\n      } else {\n        relData = data.subarray(viewState.curViewPort.sS, viewState.curViewPort.eS);\n        for (var curPxIdx = 0; curPxIdx < canvas.width; curPxIdx++) {\n          var avrVal = 0;\n          for (var c = 0; c < numberOfChannels; c++) {\n            var vals = relData.subarray(curPxIdx * samplePerPx, (curPxIdx + 1) * samplePerPx);\n            // var peak = -Infinity;\n            var sum = 0;\n            for (var p = 0, l = vals.length; p < l; p++) {\n              // if (vals[p] > peak) {\n              // \tpeak = vals[p];\n              // }\n              sum += vals[p];\n            }\n            avrVal += sum / vals.length;\n          }\n          peaks[curPxIdx] = avrVal;\n          if (avrVal > maxPeak) {\n            maxPeak = avrVal;\n          }\n        }\n      }\n      //else\n      return {\n        'peaks': peaks,\n        'minPeak': minPeak,\n        'maxPeak': maxPeak,\n        'samplePerPx': samplePerPx\n      };\n    };\n    /**\n\t\t * @param cps color provider service\n\t\t */\n    sServObj.freshRedrawDrawOsciOnCanvas = function (viewState, canvas, allPeakVals, buffer, config) {\n      var ctx = canvas.getContext('2d');\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      //set font\n      // ctx.font = (this.params.fontPxSize + \"px\" + \" \" + this.params.fontType);\n      if (allPeakVals.peaks && allPeakVals.samplePerPx >= 1) {\n        ctx.beginPath();\n        allPeakVals.peaks.forEach(function (peak, index) {\n          if (index !== 0) {\n            drawFrame(viewState, index, peak, allPeakVals.maxPeak, allPeakVals.peaks[index - 1], canvas, config);\n          }\n        });\n        ctx.stroke();\n      } else if (allPeakVals.samplePerPx < 1) {\n        // console.log(\"at 0 over sample exact\")\n        var hDbS = 1 / allPeakVals.samplePerPx / 2;\n        // half distance between samples\n        var sNr = viewState.curViewPort.sS;\n        // over sample exact\n        ctx.strokeStyle = config.vals.colors.osciColor;\n        ctx.fillStyle = config.vals.colors.osciColor;\n        // ctx.beginPath();\n        var i;\n        if (viewState.curViewPort.sS === 0) {\n          ctx.moveTo(hDbS, (allPeakVals.peaks[0] - allPeakVals.minPeak) / (allPeakVals.maxPeak - allPeakVals.minPeak) * canvas.height);\n          for (i = 0; i < allPeakVals.peaks.length; i++) {\n            ctx.lineTo(i / allPeakVals.samplePerPx + hDbS, (allPeakVals.peaks[i] - allPeakVals.minPeak) / (allPeakVals.maxPeak - allPeakVals.minPeak) * canvas.height);\n          }\n          ctx.stroke();\n          // draw sample dots\n          for (i = 0; i < allPeakVals.peaks.length; i++) {\n            ctx.beginPath();\n            ctx.arc(i / allPeakVals.samplePerPx + hDbS, (allPeakVals.peaks[i] - allPeakVals.minPeak) / (allPeakVals.maxPeak - allPeakVals.minPeak) * canvas.height - 3, 4, 0, 2 * Math.PI, false);\n            ctx.stroke();\n            ctx.fill();\n            if (config.vals.restrictions.drawSampleNrs) {\n              ctx.strokeText(sNr, i / allPeakVals.samplePerPx + hDbS, (allPeakVals.peaks[i] - allPeakVals.minPeak) / (allPeakVals.maxPeak - allPeakVals.minPeak) * canvas.height - 10);\n              sNr = sNr + 1;\n            }\n          }\n        } else {\n          //draw lines\n          ctx.beginPath();\n          ctx.moveTo(-hDbS, canvas.height - (allPeakVals.peaks[0] - allPeakVals.minPeak) / (allPeakVals.maxPeak - allPeakVals.minPeak) * canvas.height);\n          for (i = 1; i <= allPeakVals.peaks.length; i++) {\n            ctx.lineTo(i / allPeakVals.samplePerPx - hDbS, canvas.height - ((allPeakVals.peaks[i] - allPeakVals.minPeak) / (allPeakVals.maxPeak - allPeakVals.minPeak) * canvas.height + 3));\n          }\n          ctx.stroke();\n          // draw sample dots\n          for (i = 1; i <= allPeakVals.peaks.length; i++) {\n            ctx.beginPath();\n            ctx.arc(i / allPeakVals.samplePerPx - hDbS, canvas.height - (allPeakVals.peaks[i] - allPeakVals.minPeak) / (allPeakVals.maxPeak - allPeakVals.minPeak) * canvas.height - 3, 4, 0, 2 * Math.PI, false);\n            ctx.stroke();\n            ctx.fill();\n            if (config.vals.restrictions.drawSampleNrs) {\n              ctx.fillText(sNr, i / allPeakVals.samplePerPx - hDbS, canvas.height - (allPeakVals.peaks[i] - allPeakVals.minPeak) / (allPeakVals.maxPeak - allPeakVals.minPeak) * canvas.height - 10);\n              sNr = sNr + 1;\n            }\n          }\n        }\n      }\n      if (config.vals.restrictions.drawZeroLine) {\n        // draw zero line\n        ctx.strokeStyle = config.vals.colors.zeroLineColor;\n        ctx.fillStyle = config.vals.colors.zeroLineColor;\n        // see if Chrome ->dashed line\n        if (navigator.vendor === 'Google Inc.') {\n          ctx.setLineDash([2]);\n        }\n        if (allPeakVals.samplePerPx >= 1) {\n          ctx.beginPath();\n          ctx.moveTo(0, canvas.height / 2);\n          ctx.lineTo(canvas.width, canvas.height / 2);\n          ctx.stroke();\n          ctx.fillText('0', 5, canvas.height / 2 - 5, canvas.width);\n        } else {\n          var zeroLineY = canvas.height - (0 - allPeakVals.minPeak) / (allPeakVals.maxPeak - allPeakVals.minPeak) * canvas.height;\n          ctx.beginPath();\n          ctx.moveTo(0, zeroLineY);\n          ctx.lineTo(canvas.width, zeroLineY);\n          ctx.stroke();\n          ctx.fill();\n          ctx.fillText('0', 5, canvas.height - (0 - allPeakVals.minPeak) / (allPeakVals.maxPeak - allPeakVals.minPeak) * canvas.height - 5, canvas.width);\n        }\n        // see if Chrome ->dashed line\n        if (navigator.vendor === 'Google Inc.') {\n          ctx.setLineDash([0]);\n        }\n      }\n    };\n    /**\n\t\t * drawing method to drawMovingBoundaryLine\n\t\t */\n    sServObj.drawMovingBoundaryLine = function (ctx) {\n      var xOffset, sDist;\n      sDist = viewState.getSampleDist(ctx.canvas.width);\n      // calc. offset dependant on type of level of mousemove  -> default is sample exact\n      if (viewState.getcurMouseLevelType() === 'SEGMENT') {\n        xOffset = 0;\n      } else {\n        xOffset = sDist / 2;\n      }\n      if (viewState.movingBoundary) {\n        ctx.fillStyle = ConfigProviderService.vals.colors.selectedBoundaryColor;\n        var p = Math.round(viewState.getPos(ctx.canvas.width, viewState.movingBoundarySample));\n        if (viewState.getcurMouseisLast()) {\n          ctx.fillRect(p + sDist, 0, 1, ctx.canvas.height);\n        } else {\n          ctx.fillRect(p + xOffset, 0, 1, ctx.canvas.height);\n        }\n      }\n    };\n    /**\n\t\t * drawing method to drawCurViewPortSelected\n\t\t */\n    sServObj.drawCurViewPortSelected = function (ctx, drawTimeAndSamples) {\n      var xOffset, sDist, space, horizontalText, scaleX;\n      sDist = viewState.getSampleDist(ctx.canvas.width);\n      // calc. offset dependant on type of level of mousemove  -> default is sample exact\n      if (viewState.getcurMouseLevelType() === 'seg') {\n        xOffset = 0;\n      } else {\n        xOffset = sDist / 2;\n      }\n      var posS = viewState.getPos(ctx.canvas.width, viewState.curViewPort.selectS);\n      var posE = viewState.getPos(ctx.canvas.width, viewState.curViewPort.selectE);\n      if (posS === posE) {\n        ctx.fillStyle = ConfigProviderService.vals.colors.selectedBorderColor;\n        ctx.fillRect(posS + xOffset, 0, 2, ctx.canvas.height);\n        if (drawTimeAndSamples) {\n          if (viewState.curViewPort.sS !== viewState.curViewPort.selectS && viewState.curViewPort.selectS !== -1) {\n            scaleX = ctx.canvas.width / ctx.canvas.offsetWidth;\n            space = getScaleWidth(ctx, viewState.curViewPort.selectS, viewState.round(viewState.curViewPort.selectS / Soundhandlerservice.wavJSO.SampleRate, 6), scaleX);\n            horizontalText = fontScaleService.getTextImageTwoLines(ctx, viewState.curViewPort.selectS, viewState.round(viewState.curViewPort.selectS / Soundhandlerservice.wavJSO.SampleRate, 6), ConfigProviderService.vals.font.fontPxSize, ConfigProviderService.vals.font.fontType, ConfigProviderService.vals.colors.labelColor, true);\n            ctx.drawImage(horizontalText, 0, 0, horizontalText.width, horizontalText.height, posE + 5, 0, horizontalText.width, horizontalText.height);\n          }\n        }\n      } else {\n        ctx.fillStyle = ConfigProviderService.vals.colors.selectedAreaColor;\n        ctx.fillRect(posS, 0, posE - posS, ctx.canvas.height);\n        ctx.strokeStyle = ConfigProviderService.vals.colors.selectedBorderColor;\n        ctx.beginPath();\n        ctx.moveTo(posS, 0);\n        ctx.lineTo(posS, ctx.canvas.height);\n        ctx.moveTo(posE, 0);\n        ctx.lineTo(posE, ctx.canvas.height);\n        ctx.closePath();\n        ctx.stroke();\n        if (drawTimeAndSamples) {\n          // start values\n          scaleX = ctx.canvas.width / ctx.canvas.offsetWidth;\n          space = getScaleWidth(ctx, viewState.curViewPort.selectS, viewState.round(viewState.curViewPort.selectS / Soundhandlerservice.wavJSO.SampleRate, 6), scaleX);\n          horizontalText = fontScaleService.getTextImageTwoLines(ctx, viewState.curViewPort.selectS, viewState.round(viewState.curViewPort.selectS / Soundhandlerservice.wavJSO.SampleRate, 6), ConfigProviderService.vals.font.fontPxSize, ConfigProviderService.vals.font.fontType, ConfigProviderService.vals.colors.labelColor, false);\n          ctx.drawImage(horizontalText, 0, 0, horizontalText.width, horizontalText.height, posS - space - 5, 0, horizontalText.width, horizontalText.height);\n          // end values\n          horizontalText = fontScaleService.getTextImageTwoLines(ctx, viewState.curViewPort.selectE, viewState.round(viewState.curViewPort.selectE / Soundhandlerservice.wavJSO.SampleRate, 6), ConfigProviderService.vals.font.fontPxSize, ConfigProviderService.vals.font.fontType, ConfigProviderService.vals.colors.labelColor, true);\n          ctx.drawImage(horizontalText, 0, 0, horizontalText.width, horizontalText.height, posE + 5, 0, horizontalText.width, horizontalText.height);\n          // dur values\n          // check if space\n          space = getScale(ctx, viewState.round((viewState.curViewPort.selectE - viewState.curViewPort.selectS) / Soundhandlerservice.wavJSO.SampleRate, 6), scaleX);\n          if (posE - posS > space) {\n            var str1 = viewState.curViewPort.selectE - viewState.curViewPort.selectS - 1;\n            var str2 = viewState.round((viewState.curViewPort.selectE - viewState.curViewPort.selectS) / Soundhandlerservice.wavJSO.SampleRate, 6);\n            space = getScaleWidth(ctx, str1, str2, scaleX);\n            horizontalText = fontScaleService.getTextImageTwoLines(ctx, str1, str2, ConfigProviderService.vals.font.fontPxSize, ConfigProviderService.vals.font.fontType, ConfigProviderService.vals.colors.labelColor, false);\n            ctx.drawImage(horizontalText, 0, 0, horizontalText.width, horizontalText.height, posS + (posE - posS) / 2 - space / 2, 0, horizontalText.width, horizontalText.height);\n          }\n        }\n      }\n    };\n    /**\n\t\t * drawing method to drawCrossHairs\n\t\t */\n    sServObj.drawCrossHairs = function (ctx, mouseEvt, min, max, unit, trackname) {\n      if (ConfigProviderService.vals.restrictions.drawCrossHairs) {\n        // ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n        ctx.strokeStyle = ConfigProviderService.vals.colors.crossHairsColor;\n        ctx.fillStyle = ConfigProviderService.vals.colors.crossHairsColor;\n        // see if Chrome -> dashed line\n        if (navigator.vendor === 'Google Inc.') {\n          ctx.setLineDash([2]);\n        }\n        // draw lines\n        var mouseX = viewState.getX(mouseEvt);\n        var mouseY = viewState.getY(mouseEvt);\n        if (navigator.vendor === 'Google Inc.') {\n          ctx.setLineDash([0]);\n        }\n        // draw frequency / sample / time\n        ctx.font = ConfigProviderService.vals.font.fontPxSize + 'px' + ' ' + ConfigProviderService.vals.font.fontType;\n        var mouseFreq = viewState.round(max - mouseY / ctx.canvas.height * max, 2);\n        // SIC only uses max\n        var tW = ctx.measureText(mouseFreq + unit).width;\n        var s1 = Math.round(viewState.curViewPort.sS + mouseX / ctx.canvas.width * (viewState.curViewPort.eS - viewState.curViewPort.sS));\n        var s2 = viewState.round(viewState.getViewPortStartTime() + mouseX / ctx.canvas.width * (viewState.getViewPortEndTime() - viewState.getViewPortStartTime()), 6);\n        var horizontalText = fontScaleService.getTextImage(ctx, mouseFreq + unit, ConfigProviderService.vals.font.fontPxSize, ConfigProviderService.vals.font.fontType, ConfigProviderService.vals.colors.crossHairsColor, true);\n        var verticalText = fontScaleService.getTextImageTwoLines(ctx, s1, s2, ConfigProviderService.vals.font.fontPxSize, ConfigProviderService.vals.font.fontType, ConfigProviderService.vals.colors.crossHairsColor, true);\n        if (max !== undefined || min !== undefined) {\n          if (trackname == 'OSCI') {\n            // no horizontal values\t\t\n            ctx.beginPath();\n            //ctx.moveTo(0, mouseY);\n            //ctx.lineTo(5, mouseY + 5);\n            //ctx.moveTo(0, mouseY);\n            //ctx.lineTo(ctx.canvas.width, mouseY);\n            //ctx.lineTo(ctx.canvas.width - 5, mouseY + 5);\n            ctx.moveTo(mouseX, 0);\n            ctx.lineTo(mouseX, ctx.canvas.height);\n            ctx.stroke();\n          } else if (trackname == 'SPEC') {\n            ctx.drawImage(horizontalText, 0, 0, horizontalText.width, horizontalText.height, 5, mouseY, horizontalText.width, horizontalText.height);\n            ctx.drawImage(horizontalText, 0, 0, horizontalText.width, horizontalText.height, ctx.canvas.width - 5 - tW * (ctx.canvas.width / ctx.canvas.offsetWidth), mouseY, horizontalText.width, horizontalText.height);\n            ctx.beginPath();\n            ctx.moveTo(0, mouseY);\n            ctx.lineTo(5, mouseY + 5);\n            ctx.moveTo(0, mouseY);\n            ctx.lineTo(ctx.canvas.width, mouseY);\n            ctx.lineTo(ctx.canvas.width - 5, mouseY + 5);\n            ctx.moveTo(mouseX, 0);\n            ctx.lineTo(mouseX, ctx.canvas.height);\n            ctx.stroke();\n          } else {\n            // draw min max an name of track\n            var tr = ConfigProviderService.getSsffTrackConfig(trackname);\n            var col = Ssffdataservice.getColumnOfTrack(tr.name, tr.columnName);\n            mouseFreq = viewState.round(col._maxVal - mouseY / ctx.canvas.height * col._maxVal, 2);\n            horizontalText = fontScaleService.getTextImage(ctx, mouseFreq, ConfigProviderService.vals.font.fontPxSize, ConfigProviderService.vals.font.fontType, ConfigProviderService.vals.colors.crossHairsColor, true);\n            ctx.drawImage(horizontalText, 0, 0, horizontalText.width, horizontalText.height, 5, mouseY, horizontalText.width, horizontalText.height);\n            ctx.drawImage(horizontalText, 0, 0, horizontalText.width, horizontalText.height, ctx.canvas.width - 5 - tW * (ctx.canvas.width / ctx.canvas.offsetWidth), mouseY, horizontalText.width, horizontalText.height);\n            ctx.beginPath();\n            ctx.moveTo(0, mouseY);\n            ctx.lineTo(5, mouseY + 5);\n            ctx.moveTo(0, mouseY);\n            ctx.lineTo(ctx.canvas.width, mouseY);\n            ctx.lineTo(ctx.canvas.width - 5, mouseY + 5);\n            ctx.moveTo(mouseX, 0);\n            ctx.lineTo(mouseX, ctx.canvas.height);\n            ctx.stroke();\n          }\n        }\n        ctx.drawImage(verticalText, 0, 0, verticalText.width, verticalText.height, mouseX + 5, 0, verticalText.width, verticalText.height);\n      }\n    };\n    /**\n\t\t * drawing method to drawMinMaxAndName\n\t\t * @param ctx is context to be drawn on\n\t\t * @param trackName name of track to be drawn in the center of the canvas (left aligned)\n\t\t * @param min value to be drawn at the bottom of the canvas (left aligned)\n\t\t * @param max value to be drawn at the top of the canvas (left aligned)\n\t\t * @param round value to round to for min/max values (== digits after comma)\n\t\t */\n    sServObj.drawMinMaxAndName = function (ctx, trackName, min, max, round) {\n      // ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n      ctx.strokeStyle = ConfigProviderService.vals.colors.labelColor;\n      ctx.fillStyle = ConfigProviderService.vals.colors.labelColor;\n      // var scaleX = ctx.canvas.width / ctx.canvas.offsetWidth;\n      var scaleY = ctx.canvas.height / ctx.canvas.offsetHeight;\n      var smallFontSize = ConfigProviderService.vals.font.fontPxSize * 3 / 4;\n      var th = smallFontSize * scaleY;\n      // draw corner pointers\n      ctx.beginPath();\n      ctx.moveTo(0, 0);\n      ctx.lineTo(5, 5);\n      ctx.moveTo(0, ctx.canvas.height);\n      ctx.lineTo(5, ctx.canvas.height - 5);\n      ctx.stroke();\n      ctx.closePath();\n      // draw ssffTrackName\n      if (trackName !== '') {\n        ctx.font = ConfigProviderService.vals.font.fontPxSize + 'px' + ' ' + ConfigProviderService.vals.font.fontType;\n        var trackNameImg = fontScaleService.getTextImage(ctx, trackName, ConfigProviderService.vals.font.fontPxSize, ConfigProviderService.vals.font.fontType, ConfigProviderService.vals.colors.labelColor, true);\n        ctx.drawImage(trackNameImg, 0, ctx.canvas.height / 2 - ConfigProviderService.vals.font.fontPxSize * scaleY / 2);\n      }\n      // draw min/max vals\n      if (max !== undefined) {\n        var labelTxtImg = fontScaleService.getTextImage(ctx, 'max: ' + viewState.round(max, round), smallFontSize, ConfigProviderService.vals.font.fontType, ConfigProviderService.vals.colors.endBoundaryColor);\n        ctx.drawImage(labelTxtImg, 5, 5, labelTxtImg.width, labelTxtImg.height);\n      }\n      // draw min/max vals\n      if (min !== undefined) {\n        labelTxtImg = fontScaleService.getTextImage(ctx, 'min: ' + viewState.round(min, round), smallFontSize, ConfigProviderService.vals.font.fontType, ConfigProviderService.vals.colors.endBoundaryColor);\n        ctx.drawImage(labelTxtImg, 5, ctx.canvas.height - th - 5, labelTxtImg.width, labelTxtImg.height);\n      }\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.drawViewPortTimes = function (ctx) {\n      ctx.strokeStyle = ConfigProviderService.vals.colors.labelColor;\n      ctx.fillStyle = ConfigProviderService.vals.colors.labelColor;\n      ctx.font = ConfigProviderService.vals.font.fontPxSize + 'px' + ' ' + ConfigProviderService.vals.font.fontType;\n      // lines to corners\n      ctx.beginPath();\n      ctx.moveTo(0, 0);\n      ctx.lineTo(5, 5);\n      ctx.moveTo(ctx.canvas.width, 0);\n      ctx.lineTo(ctx.canvas.width - 5, 5);\n      ctx.closePath();\n      ctx.stroke();\n      var scaleX = ctx.canvas.width / ctx.canvas.offsetWidth;\n      var scaleY = ctx.canvas.height / ctx.canvas.offsetHeight;\n      var sTime;\n      var eTime;\n      var horizontalText;\n      var space;\n      if (viewState.curViewPort) {\n        //draw time and sample nr\n        sTime = viewState.round(viewState.curViewPort.sS / Soundhandlerservice.wavJSO.SampleRate, 6);\n        eTime = viewState.round(viewState.curViewPort.eS / Soundhandlerservice.wavJSO.SampleRate, 6);\n        horizontalText = fontScaleService.getTextImageTwoLines(ctx, viewState.curViewPort.sS, sTime, ConfigProviderService.vals.font.fontPxSize, ConfigProviderService.vals.font.fontType, ConfigProviderService.vals.colors.labelColor, true);\n        // ctx.drawImage(horizontalText, 0, 0, horizontalText.width, horizontalText.height, 0, 0, horizontalText.width, horizontalText.height);\n        ctx.drawImage(horizontalText, 5, 5);\n        space = getScaleWidth(ctx, viewState.curViewPort.eS, eTime, scaleX);\n        horizontalText = fontScaleService.getTextImageTwoLines(ctx, viewState.curViewPort.eS, eTime, ConfigProviderService.vals.font.fontPxSize, ConfigProviderService.vals.font.fontType, ConfigProviderService.vals.colors.labelColor, false);\n        ctx.drawImage(horizontalText, 0, 0, horizontalText.width, horizontalText.height, ctx.canvas.width - space - 5, 0, horizontalText.width, horizontalText.height);  //draw dot at edge of image\n                                                                                                                                                                         // var spaceW = getScaleWidth(ctx, viewState.curViewPort.eS, eTime, scaleX);\n                                                                                                                                                                         // var startPoint = (Math.PI / 180) * 0;\n                                                                                                                                                                         // var endPoint = (Math.PI / 180) * 360;\n                                                                                                                                                                         // ctx.beginPath();\n                                                                                                                                                                         // ctx.arc(spaceW, config.vals.font.fontPxSize * 2 * scaleY, 10, startPoint, endPoint, true);\n                                                                                                                                                                         // ctx.fill();\n                                                                                                                                                                         // ctx.closePath();\n      }\n    };\n    return sServObj;\n  }\n]);\n'use strict';\nangular.module('emuwebApp').service('HistoryService', [\n  '$log',\n  'Ssffdataservice',\n  'LevelService',\n  'ConfigProviderService',\n  'viewState',\n  'Soundhandlerservice',\n  function HistoryService($log, Ssffdataservice, LevelService, ConfigProviderService, viewState, Soundhandlerservice) {\n    // shared service object\n    var sServObj = {};\n    sServObj.movesAwayFromLastSave = 0;\n    //////////////////////////////////////////\n    // new dual stack implementation\n    //private\n    var undoStack = [];\n    var redoStack = [];\n    var curChangeObj = {};\n    // applyChanges should be called by undo redo functions\n    function applyChange(changeObj, applyOldVal) {\n      Object.keys(changeObj).forEach(function (key) {\n        var cur = changeObj[key];\n        if (cur.type === 'SSFF') {\n          if (applyOldVal) {\n            var tr = ConfigProviderService.getSsffTrackConfig(cur.trackName);\n            var col = Ssffdataservice.getColumnOfTrack(tr.name, tr.columnName);\n            col.values[cur.sampleBlockIdx][cur.sampleIdx] = cur.oldValue;\n          } else {\n            var tr = ConfigProviderService.getSsffTrackConfig(cur.trackName);\n            var col = Ssffdataservice.getColumnOfTrack(tr.name, tr.columnName);\n            col.values[cur.sampleBlockIdx][cur.sampleIdx] = cur.newValue;\n          }\n        } else if (cur.type === 'ESPS') {\n          switch (cur.action) {\n          case 'MOVEBOUNDARY':\n            if (applyOldVal) {\n              LevelService.moveBoundary(cur.name, cur.id, -cur.movedBy, cur.isFirst, cur.isLast);\n            } else {\n              LevelService.moveBoundary(cur.name, cur.id, cur.movedBy, cur.isFirst, cur.isLast);\n            }\n            break;\n          case 'MOVESEGMENT':\n            if (applyOldVal) {\n              LevelService.moveSegment(cur.name, cur.id, cur.length, -cur.movedBy);\n            } else {\n              LevelService.moveSegment(cur.name, cur.id, cur.length, cur.movedBy);\n            }\n            break;\n          case 'MOVEPOINT':\n            if (applyOldVal) {\n              LevelService.movePoint(cur.name, cur.id, -cur.movedBy);\n            } else {\n              LevelService.movePoint(cur.name, cur.id, cur.movedBy);\n            }\n            break;\n          case 'RENAMELABEL':\n            if (applyOldVal) {\n              LevelService.renameLabel(cur.name, cur.id, cur.attrIndex, cur.oldValue);\n            } else {\n              LevelService.renameLabel(cur.name, cur.id, cur.attrIndex, cur.newValue);\n            }\n            break;\n          case 'RENAMELEVEL':\n            if (applyOldVal) {\n              LevelService.renameLevel(cur.newname, cur.name, cur.curPerspectiveIdx);\n            } else {\n              LevelService.renameLevel(cur.name, cur.newname, cur.curPerspectiveIdx);\n            }\n            break;\n          case 'DELETELEVEL':\n            if (applyOldVal) {\n              LevelService.addLevel(cur.level, cur.id, cur.curPerspectiveIdx);\n            } else {\n              LevelService.deleteLevel(cur.id, cur.curPerspectiveIdx);\n            }\n            break;\n          case 'ADDLEVEL':\n            if (applyOldVal) {\n              LevelService.deleteLevel(cur.id, cur.curPerspectiveIdx);\n            } else {\n              LevelService.addLevel(cur.level, cur.id, cur.curPerspectiveIdx);\n            }\n            break;\n          case 'DELETEBOUNDARY':\n            if (applyOldVal) {\n              LevelService.deleteBoundaryInvers(cur.name, cur.id, cur.isFirst, cur.isLast, cur.deletedSegment);\n            } else {\n              LevelService.deleteBoundary(cur.name, cur.id, cur.isFirst, cur.isLast);\n            }\n            break;\n          case 'DELETESEGMENTS':\n            if (applyOldVal) {\n              LevelService.deleteSegmentsInvers(cur.name, cur.id, cur.length, cur.deletedSegment);\n            } else {\n              LevelService.deleteSegments(cur.name, cur.id, cur.length);\n            }\n            break;\n          case 'INSERTSEGMENTS':\n            if (applyOldVal) {\n              LevelService.insertSegmentInvers(cur.name, cur.start, cur.end, cur.segName);\n            } else {\n              LevelService.insertSegment(cur.name, cur.start, cur.end, cur.segName, cur.ids);\n            }\n            break;\n          case 'INSERTPOINT':\n            if (applyOldVal) {\n              LevelService.deletePoint(cur.name, cur.id);\n            } else {\n              LevelService.insertPoint(cur.name, cur.start, cur.pointName, cur.id);\n            }\n            break;\n          case 'DELETEPOINT':\n            if (applyOldVal) {\n              LevelService.insertPoint(cur.name, cur.start, cur.pointName, cur.id);\n            } else {\n              LevelService.deletePoint(cur.name, cur.id);\n            }\n            break;\n          case 'EXPANDSEGMENTS':\n            if (applyOldVal) {\n              LevelService.expandSegment(cur.rightSide, cur.item, cur.levelName, -cur.changeTime);\n            } else {\n              LevelService.expandSegment(cur.rightSide, cur.item, cur.levelName, cur.changeTime);\n            }\n            break;\n          }\n        }\n      });\n    }\n    /////////////////////////////////////\n    // public API\n    /**\n\t\t *\n\t\t */\n    sServObj.updateCurChangeObj = function (dataObj) {\n      // console.log(dataObj);\n      var dataKey;\n      if (dataObj.type === 'SSFF') {\n        dataKey = String(dataObj.type + '#' + dataObj.trackName) + '#' + String(dataObj.sampleBlockIdx) + '#' + String(dataObj.sampleIdx);\n        console.log(dataKey);\n        // update curChangeObj\n        if (!curChangeObj[dataKey]) {\n          curChangeObj[dataKey] = dataObj;\n        } else {\n          // console.log('here' + curChangeObj[dataKey].oldValue);\n          // keep init old value\n          dataObj.oldValue = curChangeObj[dataKey].oldValue;\n          curChangeObj[dataKey] = dataObj;\n        }\n      } else if (dataObj.type === 'ESPS') {\n        switch (dataObj.action) {\n        case 'MOVEBOUNDARY':\n        case 'MOVEPOINT':\n        case 'MOVESEGMENT':\n        case 'INSERTPOINT':\n          dataKey = String(dataObj.type + '#' + dataObj.action + '#' + dataObj.name + '#' + dataObj.id);\n          if (!curChangeObj[dataKey]) {\n            curChangeObj[dataKey] = dataObj;\n          } else {\n            dataObj.movedBy += curChangeObj[dataKey].movedBy;\n            curChangeObj[dataKey] = dataObj;\n          }\n          break;\n        }\n      }\n      return curChangeObj;\n    };\n    // addCurChangeObjToUndoStack\n    sServObj.addCurChangeObjToUndoStack = function () {\n      // empty redo stack\n      redoStack = [];\n      // add to undoStack\n      if (!$.isEmptyObject(curChangeObj)) {\n        undoStack.push(curChangeObj);\n        sServObj.movesAwayFromLastSave += 1;\n      }\n      $log.info(curChangeObj);\n      // reset curChangeObj\n      curChangeObj = {};\n    };\n    // addCurChangeObjToUndoStack\n    sServObj.addObjToUndoStack = function (obj) {\n      // empty redo stack\n      redoStack = [];\n      var tmpObj = {};\n      var dataKey = String(obj.type + '#' + obj.action + '#' + obj.name + '#' + obj.id);\n      tmpObj[dataKey] = angular.copy(obj);\n      // add to undoStack\n      if (!$.isEmptyObject(tmpObj)) {\n        undoStack.push(tmpObj);\n        sServObj.movesAwayFromLastSave += 1;\n      }\n      // reset curChangeObj\n      curChangeObj = {};\n    };\n    // undo\n    sServObj.undo = function () {\n      if (undoStack.length > 0) {\n        // add to redo stack\n        var oldChangeObj = angular.copy(undoStack[undoStack.length - 1]);\n        redoStack.push(oldChangeObj);\n        applyChange(oldChangeObj, true);\n        // remove old \n        undoStack.pop();\n        sServObj.movesAwayFromLastSave -= 1;\n      }\n    };\n    // redo\n    sServObj.redo = function () {\n      if (redoStack.length > 0) {\n        var oldChangeObj = angular.copy(redoStack[redoStack.length - 1]);\n        undoStack.push(oldChangeObj);\n        applyChange(oldChangeObj, false);\n        redoStack.pop();\n        sServObj.movesAwayFromLastSave += 1;\n      }\n    };\n    // getNrOfPossibleUndos\n    sServObj.getNrOfPossibleUndos = function () {\n      return undoStack.length;\n    };\n    // return current History Stack\n    sServObj.getCurrentStack = function () {\n      return {\n        'undo': undoStack,\n        'redo': redoStack\n      };\n    };\n    // resetToInitState\n    sServObj.resetToInitState = function () {\n      undoStack = [];\n      redoStack = [];\n      curChangeObj = {};\n      sServObj.movesAwayFromLastSave = 0;\n    };\n    return sServObj;\n  }\n]);\n'use strict';\nangular.module('emuwebApp').service('Wavparserservice', [\n  '$q',\n  function Wavparserservice($q) {\n    // shared service object\n    var sServObj = {};\n    var worker = new Worker('scripts/workers/wavParserWorker.js');\n    var defer;\n    // add event listener to worker to respond to messages\n    worker.addEventListener('message', function (e) {\n      if (e.data.status.type === 'SUCCESS') {\n        defer.resolve(e.data.data);\n      } else {\n        defer.reject(e.data);\n      }\n    }, false);\n    /**\n\t\t * parse buffer containing wav file using webworker\n\t\t * @param buf\n\t\t * @returns promise\n\t\t */\n    sServObj.parseWavArrBuf = function (buf) {\n      defer = $q.defer();\n      worker.postMessage({\n        'cmd': 'parseBuf',\n        'buffer': buf\n      }, [buf]);\n      // Send data to our worker.\n      return defer.promise;\n    };\n    return sServObj;\n  }\n]);\n'use strict';\nangular.module('emuwebApp').service('Textgridparserservice', [\n  '$q',\n  'LevelService',\n  'viewState',\n  'Soundhandlerservice',\n  function Textgridparserservice($q, LevelService, viewState, Soundhandlerservice) {\n    // shared service object\n    var sServObj = {};\n    var worker = new Worker('scripts/workers/textGridParserWorker.js');\n    var defer;\n    // add event listener to worker to respond to messages\n    worker.addEventListener('message', function (e) {\n      if (e.data.status.type === 'SUCCESS') {\n        defer.resolve(e.data);\n      } else {\n        defer.reject(e.data);\n      }\n    }, false);\n    /**\n\t\t * parse level data to Textgrid File\n\t\t * @param level data\n\t\t * @returns promise\n\t\t */\n    sServObj.asyncToTextGrid = function () {\n      defer = $q.defer();\n      worker.postMessage({\n        'cmd': 'toTextGrid',\n        'levels': LevelService.getData().levels,\n        'sampleRate': Soundhandlerservice.wavJSO.SampleRate,\n        'buffLength': Soundhandlerservice.wavJSO.Data.length\n      });\n      // Send data to our worker.\n      return defer.promise;\n    };\n    /**\n\t\t * parse array of ssff file using webworker\n\t\t * @param array of ssff files encoded as base64 stings\n\t\t * @returns promise\n\t\t */\n    sServObj.asyncParseTextGrid = function (textGrid, annotates, name) {\n      console.log(textGrid, annotates, name);\n      defer = $q.defer();\n      worker.postMessage({\n        'cmd': 'parseTG',\n        'textGrid': textGrid,\n        'sampleRate': Soundhandlerservice.wavJSO.SampleRate,\n        'annotates': annotates,\n        'name': name\n      });\n      // Send data to our worker.\n      return defer.promise;\n    };\n    return sServObj;\n  }\n]);\n'use strict';\nangular.module('emuwebApp').factory('uuid', function () {\n  // shared service object\n  var sServObj = {};\n  function rand(s) {\n    var p = (Math.random().toString(16) + '000000000').substr(2, 8);\n    return s ? '-' + p.substr(0, 4) + '-' + p.substr(4, 4) : p;\n  }\n  //\n  sServObj.new = function () {\n    return rand() + rand(true) + rand(true) + rand();\n  };\n  sServObj.newHash = function () {\n    return rand() + rand(true) + rand(true) + rand();\n  };\n  //\n  sServObj.empty = function () {\n    return '00000000-0000-0000-0000-000000000000';\n  };\n  return sServObj;\n});\n'use strict';\nangular.module('emuwebApp').service('fontScaleService', function fontScaleService() {\n  // shared service object\n  var sServObj = {};\n  sServObj.lastTextWidth = null;\n  sServObj.spaceTop = 0;\n  /**\n\t\t *\n\t\t */\n  sServObj.getTextImage = function (ctxOriginal, text, fontPxSize, fontType, color) {\n    var scaleY = ctxOriginal.canvas.height / ctxOriginal.canvas.offsetHeight;\n    var scaleX = ctxOriginal.canvas.width / ctxOriginal.canvas.offsetWidth;\n    fontPxSize = Math.floor(fontPxSize + 2 - scaleY / 2);\n    var img = document.createElement('canvas');\n    img.setAttribute('width', Math.round(scaleX * 200));\n    img.setAttribute('height', Math.round(scaleY * 100));\n    var ctx = img.getContext('2d');\n    ctx.save();\n    ctx.font = fontPxSize + 'px' + ' ' + fontType;\n    ctx.fillStyle = color;\n    ctx.scale(scaleX, scaleY);\n    ctx.fillText(text, 0, fontPxSize + sServObj.spaceTop);\n    sServObj.lastTextWidth = ctx.measureText(text).width * scaleX;\n    // draw frame to see size\n    ctx.restore();\n    // ctx.fillStyle = \"red\";\n    // ctx.strokeStyle = \"red\";\n    // ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    // ctx.stroke();\n    return img;\n  };\n  /**\n\t\t *\n\t\t */\n  sServObj.getLastImageWidth = function () {\n    return sServObj.lastTextWidth;\n  };\n  /**\n\t\t *\n\t\t */\n  sServObj.getTextImageTwoLines = function (ctxOriginal, text, text2, fontPxSize, fontType, color, alignLeft) {\n    var scaleY = ctxOriginal.canvas.height / ctxOriginal.canvas.offsetHeight;\n    var scaleX = ctxOriginal.canvas.width / ctxOriginal.canvas.offsetWidth;\n    fontPxSize = Math.floor(fontPxSize + 2 - scaleY / 2);\n    var img = document.createElement('canvas');\n    img.setAttribute('width', Math.round(scaleX * 200));\n    img.setAttribute('height', Math.round(scaleY * 100));\n    var ctx = img.getContext('2d');\n    ctx.save();\n    ctx.font = fontPxSize + 'px' + ' ' + fontType;\n    ctx.fillStyle = color;\n    ctx.scale(scaleX, scaleY);\n    sServObj.lastTextWidth = ctx.measureText(text).width * scaleX;\n    if (alignLeft) {\n      ctx.fillText(text, 0, fontPxSize + sServObj.spaceTop);\n      ctx.fillText(text2, 0, 2 * fontPxSize + sServObj.spaceTop);\n    } else {\n      var a = ctx.measureText(text).width;\n      var b = ctx.measureText(text2).width;\n      // var c;\n      if (a > b) {\n        ctx.fillText(text, 0, fontPxSize + sServObj.spaceTop);\n        ctx.fillText(text2, a - b, 2 * fontPxSize + sServObj.spaceTop);\n      } else {\n        ctx.fillText(text, b - a, fontPxSize + sServObj.spaceTop);\n        ctx.fillText(text2, 0, 2 * fontPxSize + sServObj.spaceTop);\n      }\n    }\n    // draw frame to see size\n    ctx.restore();\n    // ctx.fillStyle = 'red';\n    // ctx.strokeStyle = 'red';\n    // ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    // ctx.stroke();\n    return img;\n  };\n  return sServObj;\n});\n'use strict';\nangular.module('emuwebApp').service('Espsparserservice', [\n  '$q',\n  'LevelService',\n  'Soundhandlerservice',\n  function Espsparserservice($q, LevelService, Soundhandlerservice) {\n    // shared service object\n    var sServObj = {};\n    var worker = new Worker('scripts/workers/espsParserWorker.js');\n    var defer;\n    // add event listener to worker to respond to messages\n    worker.addEventListener('message', function (e) {\n      if (e.data.status.type === 'SUCCESS') {\n        defer.resolve(e.data);\n      } else {\n        defer.reject(e.data);\n      }\n    }, false);\n    /**\n\t\t * parse ESPS file using webworker\n\t\t * @param esps\n\t\t * @param annotates\n\t\t * @param name\n\t\t * @returns promise\n\t\t */\n    sServObj.asyncParseEsps = function (esps, annotates, name) {\n      defer = $q.defer();\n      worker.postMessage({\n        'cmd': 'parseESPS',\n        'esps': esps,\n        'sampleRate': Soundhandlerservice.wavJSO.SampleRate,\n        'annotates': annotates,\n        'name': name\n      });\n      // Send data to our worker.\n      return defer.promise;\n    };\n    /**\n\t\t * parse JSO data to ESPS file using webworker\n\t\t * @param name\n\t\t * @param sampleRate\n\t\t * @returns promise\n\t\t */\n    sServObj.asyncParseJSO = function (name) {\n      defer = $q.defer();\n      worker.postMessage({\n        'cmd': 'parseJSO',\n        'level': LevelService.getLevelDetails(name).level,\n        'sampleRate': Soundhandlerservice.wavJSO.SampleRate\n      });\n      // Send data to our worker.\n      return defer.promise;\n    };\n    return sServObj;\n  }\n]);\n'use strict';\nangular.module('emuwebApp').controller('LoginCtrl', [\n  '$scope',\n  '$rootScope',\n  '$http',\n  'ConfigProviderService',\n  'Iohandlerservice',\n  'viewState',\n  'dialogService',\n  function ($scope, $rootScope, $http, ConfigProviderService, Iohandlerservice, viewState, dialogService) {\n    $scope.loginData = {\n      'username': '',\n      'password': '',\n      'errorMsg': ''\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.tryLogin = function () {\n      Iohandlerservice.logOnUser($scope.loginData.username, $scope.loginData.password).then(function (res) {\n        if (res === 'LOGGEDON') {\n          dialogService.close(true);\n        } else {\n          $scope.loginData.errorMsg = 'ERROR: ' + res;\n        }\n      });\n    };\n    // FOR DEVELOPMENT\n    // $scope.tryLogin(); // for autologin uncomment and set username + password\n    /**\n\t\t *\n\t\t */\n    $scope.cursorInTextField = function () {\n      viewState.focusInTextField = true;  // console.log(\"CURSOR\");\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.cursorOutOfTextField = function () {\n      viewState.focusInTextField = false;\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.cancel = function () {\n      dialogService.close(false);\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').service('Ssffdataservice', [\n  'viewState',\n  'Soundhandlerservice',\n  function Ssffdataservice(viewState, Soundhandlerservice) {\n    // shared service object\n    var sServObj = {};\n    sServObj.data = [];\n    /**\n\t\t *\n\t\t */\n    sServObj.getColumnOfTrack = function (trackName, columnName) {\n      var res;\n      sServObj.data.forEach(function (tr) {\n        if (tr.ssffTrackName === trackName) {\n          tr.Columns.forEach(function (col) {\n            if (col.name === columnName) {\n              res = col;\n            }\n          });\n        }\n      });\n      if (res !== undefined) {\n        return res;\n      } else {\n        alert('could not getColumnOfTrack of trackname: ' + trackName);\n      }\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.getSampleRateAndStartTimeOfTrack = function (trackName) {\n      var res = {};\n      sServObj.data.forEach(function (tr) {\n        if (tr.ssffTrackName === trackName) {\n          res.sampleRate = tr.sampleRate;\n          res.startTime = tr.startTime;\n        }\n      });\n      if (res !== undefined) {\n        return res;\n      } else {\n        alert('could not getSampleRateAndStartTimeOfTrack of trackname: ' + trackName);\n      }\n    };\n    /**\n\t\t * calculates the closest audio sample of\n\t\t * the passed in column sample nr\n\t\t */\n    sServObj.calculateSamplePosInVP = function (colSampleNr, sampleRate, startTime) {\n      var sampleTime = colSampleNr / sampleRate + startTime;\n      var audioSample = Math.round(sampleTime * Soundhandlerservice.wavJSO.SampleRate);\n      return audioSample;\n    };\n    return sServObj;\n  }\n]);\n'use strict';\nangular.module('emuwebApp').service('LevelService', [\n  '$q',\n  'ConfigProviderService',\n  'Soundhandlerservice',\n  'viewState',\n  'Ssffdataservice',\n  'ArrayHelperService',\n  function LevelService($q, ConfigProviderService, Soundhandlerservice, viewState, Ssffdataservice, ArrayHelperService) {\n    // shared service object\n    var sServObj = {};\n    sServObj.data = {};\n    // holding level data\n    sServObj.maxItemID = 0;\n    // max currently loaded level data Id\n    sServObj.lasteditArea = null;\n    // holding current edit area\n    sServObj.lasteditAreaElem = null;\n    // holding current edit area element\n    /**\n\t\t * search for the according label field in labels\n\t\t * and return its index\n\t\t *    @param attrDefName\n\t\t *    @param labels\n\t\t */\n    function getLabelIdx(attrDefName, labels) {\n      var labelIdx;\n      angular.forEach(labels, function (l, idx) {\n        if (l.name === attrDefName) {\n          labelIdx = idx;\n        }\n      });\n      return labelIdx;\n    }\n    ///////////////////////////////\n    // public api\n    sServObj.getData = function () {\n      return sServObj.data;\n    };\n    /**\n\t\t * sets annotation data and sets maxItemID by parsing id in elements\n\t\t */\n    sServObj.setData = function (data) {\n      angular.copy(data, sServObj.data);\n      angular.forEach(sServObj.data.levels, function (level) {\n        level.items.forEach(function (item) {\n          if (item.id > sServObj.maxItemID) {\n            sServObj.maxItemID = item.id;\n          }\n        });\n      });\n    };\n    /**\n\t\t * called externally by handlekeystrokes\n\t\t */\n    sServObj.getNewId = function () {\n      sServObj.maxItemID += 1;\n      return sServObj.maxItemID;\n    };\n    /**\n\t\t * called internally by functions\n\t\t */\n    sServObj.raiseId = function (amount) {\n      sServObj.maxItemID += amount;\n    };\n    /**\n\t\t * called internally by functions\n\t\t */\n    sServObj.lowerId = function (amount) {\n      sServObj.maxItemID -= amount;\n    };\n    /**\n\t\t * returns level details (level object and sorting id) by passing in level Name\n\t\t */\n    sServObj.getLevelDetails = function (name) {\n      var curLevel = null;\n      var id = null;\n      angular.forEach(sServObj.data.levels, function (level, num) {\n        if (level.name === name) {\n          curLevel = level;\n          id = num;\n        }\n      });\n      return {\n        level: curLevel,\n        id: id\n      };\n    };\n    /**\n\t\t * returns level details (level object and sorting id) by passing in level Name\n\t\t */\n    sServObj.getLevelsByType = function (types) {\n      var levels = [];\n      angular.forEach(sServObj.data.levels, function (level, num) {\n        var t = level.type;\n        if (types.indexOf(t) >= 0) {\n          levels.push(level);\n        }\n      });\n      return levels;\n    };\n    /**\n\t\t * gets element order by passing in elemtent id\n\t\t */\n    sServObj.getOrderById = function (name, eid) {\n      var ret = undefined;\n      angular.forEach(sServObj.data.levels, function (level) {\n        if (level.name === name) {\n          level.items.forEach(function (e, num) {\n            if (e.id === eid) {\n              ret = num;\n            }\n          });\n        }\n      });\n      return ret;\n    };\n    /**\n\t\t * gets element id by passing in element order\n\t\t */\n    sServObj.getIdByOrder = function (name, order) {\n      var ret = null;\n      angular.forEach(sServObj.data.levels, function (level) {\n        if (level.name === name) {\n          level.items.forEach(function (element, num) {\n            if (num == order) {\n              ret = element.id;\n            }\n          });\n        }\n      });\n      return ret;\n    };\n    /**\n\t\t * gets item details by passing in levelName and item order\n\t\t */\n    sServObj.getItemDetails = function (name, order) {\n      var details = null;\n      angular.forEach(sServObj.data.levels, function (level) {\n        if (level.name === name) {\n          level.items.forEach(function (element, num) {\n            if (num == order) {\n              details = element;\n            }\n          });\n        }\n      });\n      return details;\n    };\n    /**\n\t\t * gets element details by passing in levelName and elemtent order\n\t\t */\n    sServObj.getLastItem = function (name) {\n      var details = null;\n      angular.forEach(sServObj.data.levels, function (level) {\n        if (level.name === name) {\n          details = level.items[level.items.length - 1];\n        }\n      });\n      return details;\n    };\n    /**\n\t\t * get next Element in order\n\t\t */\n    sServObj.getNextItem = function (name, id) {\n      var details = null;\n      angular.forEach(sServObj.data.levels, function (level) {\n        if (level.name === name) {\n          level.items.forEach(function (element, num) {\n            if (element.id == id) {\n              details = level.items[num + 1];\n            }\n          });\n        }\n      });\n      return details;\n    };\n    /**\n\t\t * gets item from leve by passing in levelName and item id\n\t\t *\n\t\t * @return item\n\t\t */\n    sServObj.getItemFromLevelById = function (levelName, id) {\n      var foundItm = null;\n      angular.forEach(sServObj.data.levels, function (level) {\n        if (level.name === levelName) {\n          level.items.forEach(function (element) {\n            if (element.id == id) {\n              foundItm = element;\n            }\n          });\n        }\n      });\n      return foundItm;\n    };\n    /**\n\t\t * Getter for last edit Area Element\n\t\t *   @return lasteditAreaElem last edit Area Element\n\t\t */\n    sServObj.getlasteditAreaElem = function () {\n      return sServObj.lasteditAreaElem;\n    };\n    /**\n\t\t * Setter for last edit Area Element\n\t\t *   @param lasteditAreaElem last edit Area Element\n\t\t */\n    sServObj.setlasteditAreaElem = function (e) {\n      sServObj.lasteditAreaElem = e;\n    };\n    /**\n\t\t * Setter for last edit Area\n\t\t *   @param lasteditAreaElem last edit Area\n\t\t */\n    sServObj.setlasteditArea = function (name) {\n      sServObj.lasteditArea = name;\n    };\n    /**\n\t\t * Getter for last edit Area\n\t\t *   @return lasteditAreaElem last edit Area\n\t\t */\n    sServObj.getlasteditArea = function () {\n      return sServObj.lasteditArea;\n    };\n    /**\n\t\t * Getter for id of last edited Element\n\t\t *   @return lasteditAreaElem last edit Area\n\t\t */\n    sServObj.getlastID = function () {\n      return sServObj.lasteditArea.substr(1);\n    };\n    /**\n\t\t * Remove currently open html textarea (if there is a textarea open)\n\t\t * and set viewState.editing to false.\n\t\t */\n    sServObj.deleteEditArea = function () {\n      if (null !== sServObj.getlasteditArea()) {\n        $('.' + sServObj.getlasteditArea()).remove();\n      }\n      viewState.editing = false;\n    };\n    /**\n\t\t * Calculate values (x,y,width,height) for textarea to open\n\t\t * depending on the current Level type, the current canvas\n\t\t * and the current clicked Element\n\t\t *   @param lastEventClick the current clicked Level Element\n\t\t *   @param element the current html Element to get canvas from\n\t\t *   @param type the current Level type\n\t\t */\n    sServObj.openEditArea = function (lastEventClick, element, type) {\n      var levelName = viewState.getcurClickLevelName();\n      var attrDefName = viewState.getCurAttrDef(levelName);\n      // find labelIdx\n      var labelIdx = getLabelIdx(attrDefName, lastEventClick.labels);\n      var elem = element.find('canvas').context.getContext('2d');\n      var clientWidth = elem.canvas.clientWidth;\n      var clientOffset = elem.canvas.offsetLeft;\n      var top = elem.canvas.offsetTop;\n      var height = elem.canvas.clientHeight - 1;\n      var len = 10;\n      if (labelIdx !== undefined) {\n        if (lastEventClick.labels[labelIdx].value.length > 0) {\n          len = lastEventClick.labels[labelIdx].value.length * 7;\n        }\n      }\n      var editText = '';\n      if (lastEventClick.labels.length > 0) {\n        if (lastEventClick.labels[labelIdx] !== undefined) {\n          editText = lastEventClick.labels[labelIdx].value;\n        } else {\n          editText = '';\n        }\n      }\n      if (type === 'SEGMENT') {\n        var start = Math.floor(viewState.getPos(clientWidth, lastEventClick.sampleStart) + clientOffset);\n        var end = Math.ceil(viewState.getPos(clientWidth, lastEventClick.sampleStart + lastEventClick.sampleDur + 1) + clientOffset);\n        var width = end - start;\n        if (width < 2 * len) {\n          var zoom = viewState.curViewPort.eS - viewState.curViewPort.sS;\n          if (zoom <= 10) {\n            // if already zoomed in but text is still too long\n            sServObj.createEditArea(element, start, top, end - start, height, lastEventClick.labels[labelIdx].value, lastEventClick.id);\n          } else {\n            viewState.zoomViewPort(true, this);\n            sServObj.openEditArea(lastEventClick, element, type);\n            return;\n          }\n        }\n        sServObj.createEditArea(element, start, top, end - start, height, editText, lastEventClick.id);\n      } else {\n        var start = viewState.getPos(clientWidth, lastEventClick.samplePoint) + clientOffset - len / 2;\n        var end = viewState.getPos(clientWidth, lastEventClick.samplePoint) + clientOffset + len / 2;\n        var width = end - start;\n        if (width < 2 * len) {\n          width = 2 * len;\n        }\n        sServObj.createEditArea(element, start, top, width, height, editText, lastEventClick.id);\n      }\n      sServObj.createSelection(element.find('textarea')[0], 0, editText.length);\n    };\n    /**\n\t\t * Create a Text Selection in a html Textarea\n\t\t *   @param field the textarea element\n\t\t *   @param start the starting character position as int\n\t\t *   @param end the ending character position as int\n\t\t */\n    sServObj.createSelection = function (field, start, end) {\n      if (field.createTextRange) {\n        var selRange = field.createTextRange();\n        selRange.collapse(true);\n        selRange.moveStart('character', start);\n        selRange.moveEnd('character', end);\n        selRange.select();\n      } else if (field.setSelectionRange) {\n        field.setSelectionRange(start, end);\n      } else if (field.selectionStart) {\n        field.selectionStart = start;\n        field.selectionEnd = end;\n      }\n      field.focus();\n    };\n    /**\n\t\t * create a html textarea element at given\n\t\t *   @param x the x Position\n\t\t *   @param y the y Position\n\t\t *   @param width the Width\n\t\t *   @param height the Height\n\t\t *   @param label the Text Content of the Textarea\n\t\t *   @param labelid the id of the element\n\t\t */\n    sServObj.createEditArea = function (element, x, y, width, height, label, labelid) {\n      var textid = '_' + labelid;\n      element.prepend($('<textarea>').attr({\n        id: textid,\n        'class': textid + ' emuwebapp-labelEdit',\n        'ng-model': 'message',\n        'autofocus': 'true'\n      }).css({\n        'left': Math.round(x + 2) + 'px',\n        'top': Math.round(y) + 'px',\n        'width': Math.round(width) - 4 + 'px',\n        'height': Math.round(height) - 1 + 'px',\n        'padding-top': Math.round(height / 3 + 1) + 'px',\n        'overflow-x': 'hidden',\n        'overflow-y': 'hidden'\n      }).text(label));\n    };\n    /**\n\t\t * insert a new Item with id labelname start and duration at position on level\n\t\t */\n    sServObj.insertItemDetails = function (id, levelname, position, labelname, start, duration) {\n      var attrdefs = ConfigProviderService.getLevelDefinition(levelname).attributeDefinitions;\n      var curAttrDef = viewState.getCurAttrDef(levelname);\n      var newElement;\n      if (attrdefs === undefined) {\n        // ugly hack if attrdefs undefined\n        attrdefs = [];\n      }\n      angular.forEach(sServObj.data.levels, function (level) {\n        if (level.name === levelname) {\n          if (level.type == 'SEGMENT') {\n            newElement = {\n              id: id,\n              sampleStart: start,\n              sampleDur: duration,\n              labels: []\n            };\n            if (attrdefs.length > 0) {\n              for (var i = 0; i < attrdefs.length; i++) {\n                if (attrdefs[i].name === curAttrDef) {\n                  newElement.labels.push({\n                    name: levelname,\n                    value: labelname\n                  });\n                } else {\n                  newElement.labels.push({\n                    name: attrdefs[i].name,\n                    value: ''\n                  });\n                }\n              }\n            } else {\n              newElement.labels.push({\n                name: levelname,\n                value: labelname\n              });\n            }\n          } else if (level.type == 'EVENT') {\n            newElement = {\n              id: id,\n              samplePoint: start,\n              labels: []\n            };\n            if (attrdefs.length > 0) {\n              for (var i = 0; i < attrdefs.length; i++) {\n                if (attrdefs[i].name === curAttrDef) {\n                  newElement.labels.push({\n                    name: levelname,\n                    value: labelname\n                  });\n                } else {\n                  newElement.labels.push({\n                    name: attrdefs[i].name,\n                    value: ''\n                  });\n                }\n              }\n            } else {\n              newElement.labels.push({\n                name: levelname,\n                value: labelname\n              });\n            }\n          }\n          level.items.splice(position, 0, newElement);\n        }\n      });\n    };\n    /**\n\t\t * sets element details by passing in levelName and elemtent id\n\t\t */\n    sServObj.updateSegItemInLevel = function (levelname, id, labelname, labelIdx, start, duration) {\n      angular.forEach(sServObj.data.levels, function (level) {\n        if (level.name === levelname) {\n          level.items.forEach(function (element) {\n            if (element.id == id) {\n              if (start !== undefined) {\n                element.sampleStart = start;\n              }\n              if (duration !== undefined) {\n                element.sampleDur = duration;\n              }\n              if (labelname !== undefined) {\n                element.labels[labelIdx].value = labelname;\n              }\n            }\n          });\n        }\n      });\n    };\n    /**\n\t\t * sets element details by passing in levelName and elemtent id\n\t\t */\n    sServObj.setPointDetails = function (levelname, id, labelname, start) {\n      angular.forEach(sServObj.data.levels, function (level) {\n        if (level.name === levelname) {\n          level.items.forEach(function (element) {\n            if (element.id == id) {\n              element.samplePoint = start;\n              element.labels[0].value = labelname;\n            }\n          });\n        }\n      });\n    };\n    /**\n\t\t * gets item details by passing in levelName and item id's\n\t\t */\n    sServObj.getItemNeighboursFromLevel = function (levelName, firstid, lastid) {\n      var left = undefined;\n      var right = undefined;\n      angular.forEach(sServObj.data.levels, function (level) {\n        if (level.name === levelName) {\n          level.items.forEach(function (itm, num) {\n            if (itm.id == firstid) {\n              left = level.items[num - 1];\n            }\n            if (itm.id == lastid) {\n              right = level.items[num + 1];\n            }\n          });\n        }\n      });\n      return {\n        left: left,\n        right: right\n      };\n    };\n    /**\n\t\t * get item details by passing in level, sampleNr and maximum pcm\n\t\t *\n\t\t * @param level\n\t\t * @param sampleNr\n\t\t * @param maximum \n\t\t * @returns object of the form {current: item, nearest: item, isFirst: boolean, isLast: boolean} where \n\t\t * - current is the actual item where the mouse is\n\t\t * - nearest is the item next to the current one depending on where the mouse is (ie if over 50% right element, under 50% left element)\n\t\t * - isFirst is true if the mouse is before the first item\n\t\t * - isLast is true if the mouse is after the last item\n\t\t *          \n\t\t */\n    sServObj.getClosestItem = function (sampleNr, levelname, maximum) {\n      var level = sServObj.getLevelDetails(levelname).level;\n      var current = undefined;\n      var nearest = undefined;\n      var isFirst = undefined;\n      var isLast = undefined;\n      if (level.items.length > 0) {\n        current = nearest = level.items[0];\n        isFirst = true;\n        isLast = false;\n        if (level.type === 'SEGMENT') {\n          angular.forEach(level.items, function (itm, index) {\n            if (sampleNr >= itm.sampleStart - 0.5) {\n              // 0.5 sample correction\n              if (sampleNr <= itm.sampleStart + itm.sampleDur + 0.5) {\n                // 0.5 sample correction\n                if (sampleNr - itm.sampleStart >= itm.sampleDur / 2) {\n                  if (level.items[index + 1] !== undefined) {\n                    current = level.items[index];\n                    nearest = level.items[index + 1];\n                    isLast = false;\n                  } else {\n                    isLast = true;\n                    current = nearest = level.items[level.items.length - 1];\n                  }\n                } else {\n                  isLast = false;\n                  current = nearest = level.items[index];\n                }\n              }\n              isFirst = false;\n            }\n            if (sampleNr >= itm.sampleStart - 0.5) {\n              if (sampleNr <= itm.sampleStart + itm.sampleDur + 0.5) {\n                // 0.5 sample correction\n                current = itm;\n              } else {\n                isLast = true;\n                current = nearest = level.items[level.items.length - 1];\n              }\n            }\n          });\n        } else {\n          var spaceLower = 0;\n          var spaceHigher = 0;\n          isFirst = false;\n          isLast = false;\n          angular.forEach(level.items, function (evt, index) {\n            if (index < level.items.length - 1) {\n              spaceHigher = evt.samplePoint + (level.items[index + 1].samplePoint - level.items[index].samplePoint) / 2;\n            } else {\n              spaceHigher = maximum;\n            }\n            if (index > 0) {\n              spaceLower = evt.samplePoint - (level.items[index].samplePoint - level.items[index - 1].samplePoint) / 2;\n            } else {\n              spaceLower = 0;\n            }\n            if (sampleNr <= spaceHigher && sampleNr >= spaceLower) {\n              current = nearest = evt;\n            }\n          });\n        }\n      }\n      return {\n        current: current,\n        nearest: nearest,\n        isFirst: isFirst,\n        isLast: isLast\n      };\n    };\n    /**\n\t\t * deletes a level by its name\n\t\t */\n    sServObj.deleteLevel = function (levelIndex, curPerspectiveIdx) {\n      var lvl = sServObj.data.levels[levelIndex];\n      sServObj.data.levels.splice(levelIndex, 1);\n      ConfigProviderService.vals.perspectives[curPerspectiveIdx].levelCanvases.order.splice(levelIndex, 1);\n      return lvl;\n    };\n    /**\n\t\t * adds a level by its name\n\t\t */\n    sServObj.addLevel = function (originalLevel, levelIndex, curPerspectiveIdx) {\n      if (sServObj.data.levels !== undefined) {\n        sServObj.data.levels.splice(levelIndex, 0, originalLevel);\n        ConfigProviderService.vals.perspectives[curPerspectiveIdx].levelCanvases.order.splice(levelIndex, 0, originalLevel.name);\n      } else {\n        sServObj.data.levels = [];\n        sServObj.data.levels.splice(levelIndex, 0, originalLevel);\n        ConfigProviderService.vals.perspectives[curPerspectiveIdx].levelCanvases.order.splice(levelIndex, 0, originalLevel.name);\n      }\n    };\n    /**\n\t\t * rename the label of an element by passing in level name and id\n\t\t */\n    sServObj.renameLabel = function (levelName, id, attrIndex, newLabelName) {\n      sServObj.updateSegItemInLevel(levelName, id, newLabelName, attrIndex);\n    };\n    /**\n\t\t * rename the label of a level by passing in level name and id\n\t\t */\n    sServObj.renameLevel = function (oldname, newname, curPerspectiveIdx) {\n      //rename level name\n      angular.forEach(sServObj.data.levels, function (level) {\n        if (level.name === oldname) {\n          level.name = newname;\n          // rename all first label names to match new \n          angular.forEach(level.items, function (item) {\n            item.labels[0].name = newname;\n          });\n        }\n      });\n      // update order name as well\n      ConfigProviderService.vals.perspectives[curPerspectiveIdx].levelCanvases.order[ConfigProviderService.vals.perspectives[curPerspectiveIdx].levelCanvases.order.indexOf(oldname)] = newname;\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.deleteSegmentsInvers = function (name, id, length, deletedSegment) {\n      var attrDefName = viewState.getCurAttrDef(name);\n      var labelIdx;\n      var x, insertPoint;\n      insertPoint = 0;\n      angular.forEach(sServObj.data.levels, function (level) {\n        if (level.name === name) {\n          insertPoint = deletedSegment.order;\n          for (x in deletedSegment.segments) {\n            level.items.splice(insertPoint++, 0, deletedSegment.segments[x]);\n          }\n        }\n      });\n      var lastNeighbours = sServObj.getItemNeighboursFromLevel(name, deletedSegment.segments[0].id, deletedSegment.segments[deletedSegment.segments.length - 1].id);\n      if (lastNeighbours.left !== undefined && lastNeighbours.right === undefined) {\n        labelIdx = getLabelIdx(attrDefName, lastNeighbours.left.labels);\n        sServObj.updateSegItemInLevel(name, lastNeighbours.left.id, lastNeighbours.left.labels[labelIdx].value, labelIdx, lastNeighbours.left.sampleStart, lastNeighbours.left.sampleDur - deletedSegment.timeRight);\n      } else if (lastNeighbours.left === undefined && lastNeighbours.right !== undefined) {\n        labelIdx = getLabelIdx(attrDefName, lastNeighbours.right.labels);\n        sServObj.updateSegItemInLevel(name, lastNeighbours.right.id, lastNeighbours.right.labels[labelIdx].value, labelIdx, lastNeighbours.right.sampleStart + deletedSegment.timeLeft, lastNeighbours.right.sampleDur - deletedSegment.timeLeft);\n      } else if (lastNeighbours.left === undefined && lastNeighbours.right === undefined) {\n      } else {\n        labelIdx = getLabelIdx(attrDefName, lastNeighbours.left.labels);\n        sServObj.updateSegItemInLevel(name, lastNeighbours.left.id, lastNeighbours.left.labels[labelIdx].value, labelIdx, lastNeighbours.left.sampleStart, lastNeighbours.left.sampleDur - deletedSegment.timeLeft);\n        sServObj.updateSegItemInLevel(name, lastNeighbours.right.id, lastNeighbours.right.labels[labelIdx].value, labelIdx, lastNeighbours.right.sampleStart + deletedSegment.timeRight, lastNeighbours.right.sampleDur - deletedSegment.timeRight);\n      }\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.deleteSegments = function (name, id, length) {\n      var firstSegment = sServObj.getItemFromLevelById(name, id);\n      var firstOrder = sServObj.getOrderById(name, id);\n      var lastSegment = sServObj.getItemDetails(name, firstOrder + length - 1);\n      var neighbours = sServObj.getItemNeighboursFromLevel(name, firstSegment.id, lastSegment.id);\n      var timeLeft = 0;\n      var timeRight = 0;\n      var deleteOrder = null;\n      var deletedSegment = null;\n      var clickSeg = null;\n      var attrDefName = viewState.getCurAttrDef(name);\n      var labelIdx = getLabelIdx(attrDefName, firstSegment.labels);\n      for (var i = firstOrder; i < firstOrder + length; i++) {\n        timeLeft += sServObj.getItemDetails(name, i).sampleDur + 1;\n      }\n      if (timeLeft % 2 == 0) {\n        timeLeft = timeLeft / 2;\n        timeRight = timeLeft;\n      } else {\n        timeLeft = Math.ceil(timeLeft / 2);\n        timeRight = timeLeft - 1;\n      }\n      angular.forEach(sServObj.data.levels, function (level) {\n        if (level.name === name) {\n          angular.forEach(level.items, function (evt, order) {\n            if (evt.id == id) {\n              deleteOrder = order;\n              deletedSegment = level.items.splice(deleteOrder, length);\n            }\n          });\n        }\n      });\n      if (neighbours.left !== undefined && neighbours.right === undefined) {\n        sServObj.updateSegItemInLevel(name, neighbours.left.id, undefined, labelIdx, neighbours.left.sampleStart, neighbours.left.sampleDur + timeRight);\n        clickSeg = neighbours.left;\n      } else if (neighbours.left === undefined && neighbours.right !== undefined) {\n        sServObj.updateSegItemInLevel(name, neighbours.right.id, undefined, labelIdx, neighbours.right.sampleStart - timeLeft, neighbours.right.sampleDur + timeLeft);\n        clickSeg = neighbours.right;\n      } else if (neighbours.left === undefined && neighbours.right === undefined) {\n        // nothing left to do level empty now\n        viewState.setcurMouseSegment(undefined, undefined, undefined);\n      } else {\n        sServObj.updateSegItemInLevel(name, neighbours.left.id, undefined, labelIdx, neighbours.left.sampleStart, neighbours.left.sampleDur + timeLeft);\n        sServObj.updateSegItemInLevel(name, neighbours.right.id, undefined, labelIdx, neighbours.right.sampleStart - timeRight, neighbours.right.sampleDur + timeRight);\n        clickSeg = neighbours.left;\n      }\n      return {\n        order: deleteOrder,\n        segments: deletedSegment,\n        timeLeft: timeLeft,\n        timeRight: timeRight,\n        clickSeg: clickSeg\n      };\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.insertSegmentInvers = function (name, start, end, newLabel) {\n      var ret = true;\n      var diff, diff2;\n      angular.forEach(sServObj.data.levels, function (t) {\n        if (t.name === name) {\n          if (start == end) {\n            var startOrder = -1;\n            angular.forEach(t.items, function (evt, order) {\n              if (start == evt.sampleStart) {\n                startOrder = order;\n                ret = true;\n              }\n            });\n            if (ret) {\n              var diff = 0;\n              if (t.items[startOrder] !== undefined) {\n                diff = t.items[startOrder].sampleDur + 1;\n              }\n              if (t.items[startOrder - 1] !== undefined) {\n                // if not leftmost item\n                t.items[startOrder - 1].sampleDur += diff;\n              }\n              t.items.splice(startOrder, 1);\n            }\n          } else {\n            var startOrder = -1;\n            angular.forEach(t.items, function (evt, order) {\n              if (start == evt.sampleStart) {\n                startOrder = order;\n                ret = true;\n              }\n            });\n            if (ret) {\n              if (t.items[startOrder + 1] === undefined) {\n                // if rightmost item\n                t.items.splice(startOrder - 1, 2);\n              } else if (t.items[startOrder - 1] === undefined) {\n                // if leftmost item\n                t.items.splice(startOrder, 2);\n              } else {\n                // in the middle\n                diff = t.items[startOrder].sampleDur + 1;\n                diff2 = t.items[startOrder + 1].sampleDur + 1;\n                t.items[startOrder - 1].sampleDur += diff + diff2;\n                t.items.splice(startOrder, 2);  //sServObj.lowerId(2);\t    \n              }\n            }\n          }\n        }\n      });\n      return ret;\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.insertSegment = function (name, start, end, newLabel, ids) {\n      var ret = true;\n      angular.forEach(sServObj.data.levels, function (level) {\n        if (level.name === name) {\n          if (start == end) {\n            if (level.items.length == 0) {\n              // if on an empty level\n              return {\n                ret: false,\n                ids: ids\n              };\n            } else {\n              // if not on an empty level\n              if (ids === undefined) {\n                ids = [];\n                ids[0] = sServObj.getNewId();\n              }\n              var startID = -1;\n              if (start < level.items[0].sampleStart) {\n                // before first segment\n                var diff = level.items[0].sampleStart - start;\n                sServObj.insertItemDetails(ids[0], name, 0, newLabel, start, diff - 1);\n              } else if (start > level.items[level.items.length - 1].sampleStart + level.items[level.items.length - 1].sampleDur) {\n                // after last segment\n                var newStart = level.items[level.items.length - 1].sampleStart + level.items[level.items.length - 1].sampleDur + 1;\n                sServObj.insertItemDetails(ids[0], name, level.items.length, newLabel, newStart, start - newStart);\n              } else {\n                angular.forEach(level.items, function (evt, id) {\n                  if (start >= evt.sampleStart && start <= evt.sampleStart + evt.sampleDur) {\n                    startID = id;\n                  }\n                  if (evt.sampleStart == start) {\n                    ret = false;\n                  }\n                  if (evt.sampleStart + evt.sampleDur + 1 == start) {\n                    ret = false;\n                  }\n                });\n                if (ret) {\n                  var diff = start - level.items[startID].sampleStart - 1;\n                  sServObj.insertItemDetails(ids[0], name, startID + 1, newLabel, start, level.items[startID].sampleDur - diff - 1);\n                  level.items[startID].sampleDur = diff;\n                }\n              }\n            }\n          } else {\n            if (ids === undefined) {\n              ids = [];\n              ids[0] = sServObj.getNewId();\n              ids[1] = sServObj.getNewId();\n            }\n            if (level.items.length == 0) {\n              // if on an empty level\n              sServObj.insertItemDetails(ids[0], name, 0, newLabel, start, end - start - 1);\n            } else {\n              // if not on an empty level\t\t\t\t\n              if (end < level.items[0].sampleStart) {\n                // before first segment\n                var diff = level.items[0].sampleStart - end - 1;\n                var diff2 = end - start - 1;\n                sServObj.insertItemDetails(ids[0], name, 0, newLabel, end, diff);\n                sServObj.insertItemDetails(ids[1], name, 0, newLabel, start, diff2);\n              } else if (start > level.items[level.items.length - 1].sampleStart + level.items[level.items.length - 1].sampleDur) {\n                // after last segment\n                var diff = start - (level.items[level.items.length - 1].sampleStart + level.items[level.items.length - 1].sampleDur) - 1;\n                var diff2 = end - start - 1;\n                var len = level.items.length;\n                sServObj.insertItemDetails(ids[0], name, len, newLabel, level.items[level.items.length - 1].sampleStart + level.items[level.items.length - 1].sampleDur, diff);\n                sServObj.insertItemDetails(ids[1], name, len + 1, newLabel, start, diff2);\n              } else {\n                // in the middle\t\t\t\n                var startID = -1;\n                var endID = -1;\n                angular.forEach(level.items, function (evt, id) {\n                  if (start >= evt.sampleStart && start <= evt.sampleStart + evt.sampleDur) {\n                    startID = id;\n                  }\n                  if (end >= evt.sampleStart && end <= evt.sampleStart + evt.sampleDur) {\n                    endID = id;\n                  }\n                });\n                ret = startID === endID;\n                if (ret && startID !== -1) {\n                  var diff = start - level.items[startID].sampleStart - 1;\n                  var diff2 = end - start - 1;\n                  sServObj.insertItemDetails(ids[0], name, startID + 1, newLabel, start, diff2);\n                  sServObj.insertItemDetails(ids[1], name, startID + 2, newLabel, end, level.items[startID].sampleDur - diff - 1 - diff2 - 1);\n                  level.items[startID].sampleDur = diff;\n                }\n              }\n            }\n          }\n        }\n      });\n      return {\n        ret: ret,\n        ids: ids\n      };\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.insertPoint = function (name, start, pointName, id) {\n      var ret = false;\n      var alreadyExists = false;\n      var pos = undefined;\n      angular.forEach(sServObj.data.levels, function (level) {\n        if (level.name === name && level.type === 'EVENT') {\n          var last = level.items[0].samplePoint;\n          angular.forEach(level.items, function (evt, order) {\n            if (Math.floor(start) === Math.floor(evt.samplePoint)) {\n              alreadyExists = true;\n            }\n            if (start > evt.samplePoint) {\n              pos = order + 1;\n            }\n          });\n        }\n      });\n      if (!alreadyExists) {\n        if (id === undefined) {\n          id = sServObj.getNewId();\n        }\n        sServObj.insertItemDetails(id, name, pos, pointName, start);\n      }\n      return {\n        alreadyExists: alreadyExists,\n        id: id\n      };\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.deletePoint = function (name, id) {\n      var ret = false;\n      angular.forEach(sServObj.data.levels, function (t) {\n        if (t.name === name && t.type == 'EVENT') {\n          var last = 0;\n          angular.forEach(t.items, function (evt, order) {\n            if (!ret) {\n              if (id == evt.id) {\n                ret = evt;\n                t.items.splice(order, 1);\n              }\n            }\n          });\n        }\n      });\n      return ret;\n    };\n    /**\n\t\t *   delete a single boundary between items\n\t\t *   @param toDelete\n\t\t *   @param name\n\t\t *   @param levelType\n\t\t */\n    sServObj.deleteBoundary = function (name, id, isFirst, isLast) {\n      var toDelete = sServObj.getItemFromLevelById(name, id);\n      var last = null;\n      var retOrder = null;\n      var retEvt = null;\n      var clickSeg = null;\n      angular.forEach(sServObj.data.levels, function (level) {\n        if (level.name === name) {\n          last = level.items[0];\n          angular.forEach(level.items, function (evt, order) {\n            if (level.type === 'SEGMENT') {\n              if (toDelete.sampleStart == evt.sampleStart && toDelete.sampleDur == evt.sampleDur) {\n                if (order === 0 && isFirst) {\n                  level.items.splice(order, 1);\n                  retOrder = order;\n                  retEvt = evt;\n                  clickSeg = level.items[0];\n                } else if (order === level.items.length - 1 && isLast) {\n                  level.items.splice(order, 1);\n                  retOrder = order;\n                  retEvt = evt;\n                  clickSeg = level.items[level.items.length - 1];\n                } else {\n                  last.labels[0].value += evt.labels[0].value;\n                  last.sampleDur += evt.sampleDur + 1;\n                  level.items.splice(order, 1);\n                  retOrder = order;\n                  retEvt = evt;\n                  clickSeg = last;\n                }\n              }\n            }\n            last = evt;\n          });\n          if (clickSeg == null) {\n            clickSeg = level.items[0];\n          }\n        }\n      });\n      return {\n        order: retOrder,\n        event: retEvt,\n        clickSeg: clickSeg\n      };\n    };\n    /**\n\t\t *   restore a single boundary between items\n\t\t *   @param toDelete\n\t\t *   @param name\n\t\t *   @param levelType\n\t\t */\n    sServObj.deleteBoundaryInvers = function (name, id, isFirst, isLast, deletedSegment) {\n      angular.forEach(sServObj.data.levels, function (level) {\n        if (level.name === name) {\n          level.items.splice(deletedSegment.order, 0, deletedSegment.event);\n          var oldName = deletedSegment.event.labels[0].value;\n          if (!isFirst && !isLast) {\n            oldName = level.items[deletedSegment.order - 1].labels[0].value.slice(0, level.items[deletedSegment.order - 1].labels[0].value.length - deletedSegment.event.labels[0].value.length);\n            level.items[deletedSegment.order - 1].labels[0].value = oldName;\n            level.items[deletedSegment.order - 1].sampleDur -= deletedSegment.event.sampleDur + 1;\n          }\n        }\n      });\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.snapBoundary = function (toTop, levelName, segment, neighbor, type) {\n      var neighTd;\n      var neighTdIdx;\n      var absMinDist = Infinity;\n      var absDist;\n      var minDist = undefined;\n      var sample;\n      var sampleTarget;\n      if (type == 'SEGMENT') {\n        sample = segment.sampleStart;\n      } else if (type == 'EVENT') {\n        sample = segment.samplePoint;\n      }\n      angular.forEach(sServObj.data.levels, function (thisTd, tIdx) {\n        if (thisTd.name === levelName) {\n          if (toTop) {\n            if (tIdx >= 1) {\n              neighTd = sServObj.data.levels[tIdx - 1];\n            } else {\n              return false;\n            }\n          } else {\n            if (tIdx < sServObj.data.levels.length - 1) {\n              neighTd = sServObj.data.levels[tIdx + 1];\n            } else {\n              return false;\n            }\n          }\n          neighTd.items.forEach(function (itm, order) {\n            if (neighTd.type == 'SEGMENT') {\n              sampleTarget = itm.sampleStart;\n            } else if (neighTd.type == 'EVENT') {\n              sampleTarget = itm.samplePoint;\n            }\n            absDist = Math.abs(sample - sampleTarget);\n            if (absDist < absMinDist) {\n              absMinDist = absDist;\n              minDist = sampleTarget - sample;\n            }\n          });\n        }\n      });\n      if (minDist !== undefined) {\n        if (type == 'SEGMENT') {\n          this.moveBoundary(levelName, segment.id, minDist, 0);\n        } else if (type == 'EVENT') {\n          this.movePoint(levelName, segment.id, minDist);\n        }\n        return minDist;\n      } else {\n        return false;\n      }\n    };\n    /**\n\t\t *  moves a boundary of a given segment\n\t\t *\n\t\t *  @param {string} name The name of the level in which the segment lies.\n\t\t *  @param {number} id The id of the segment.\n\t\t *  @param {number} changeTime The time to add or substract.\n\t\t *  @param {isFirst} if item is first\n\t\t *  @param {isLast} if item is last\n\t\t *\n\t\t */\n    sServObj.moveBoundary = function (levelName, id, changeTime, isFirst, isLast) {\n      var orig = sServObj.getItemFromLevelById(levelName, id);\n      var attrDefName = viewState.getCurAttrDef(levelName);\n      var labelIdx = getLabelIdx(attrDefName, orig.labels);\n      var ln = sServObj.getItemNeighboursFromLevel(levelName, id, id);\n      if (isFirst) {\n        // before first item\n        var origRight = ln.right;\n        if (origRight !== undefined) {\n          if (orig.sampleStart + changeTime >= 0 && orig.sampleStart + changeTime < origRight.sampleStart) {\n            sServObj.updateSegItemInLevel(levelName, orig.id, undefined, labelIdx, orig.sampleStart + changeTime, orig.sampleDur - changeTime);\n          }\n        } else {\n          if (orig.sampleStart + changeTime >= 0 && orig.sampleDur - changeTime >= 0 && orig.sampleStart + orig.sampleDur + changeTime <= Soundhandlerservice.wavJSO.Data.length) {\n            sServObj.updateSegItemInLevel(levelName, orig.id, undefined, labelIdx, orig.sampleStart + changeTime, orig.sampleDur - changeTime);\n          }\n        }\n      } else if (isLast) {\n        // after last item\n        if (orig.sampleDur + changeTime >= 0 && orig.sampleDur + orig.sampleStart + changeTime <= Soundhandlerservice.wavJSO.Data.length) {\n          sServObj.updateSegItemInLevel(levelName, orig.id, undefined, labelIdx, orig.sampleStart, orig.sampleDur + changeTime);\n        }\n      } else {\n        if (ln.left === undefined) {\n          var origRight = ln.right;\n          if (origRight !== undefined) {\n            if (orig.sampleStart + changeTime >= 0 && orig.sampleStart + changeTime < origRight.sampleStart) {\n              sServObj.updateSegItemInLevel(levelName, orig.id, undefined, labelIdx, orig.sampleStart + changeTime, orig.sampleDur - changeTime);\n            }\n          } else {\n            if (orig.sampleStart + changeTime >= 0 && orig.sampleStart + orig.sampleDur + changeTime <= Soundhandlerservice.wavJSO.Data.length) {\n              sServObj.updateSegItemInLevel(levelName, orig.id, undefined, labelIdx, orig.sampleStart + changeTime, orig.sampleDur - changeTime);\n            }\n          }\n        } else {\n          var origLeft = ln.left;\n          if (origLeft.sampleDur + changeTime >= 0 && orig.sampleStart + changeTime >= 0 && orig.sampleDur - changeTime >= 0) {\n            sServObj.updateSegItemInLevel(levelName, ln.left.id, undefined, labelIdx, origLeft.sampleStart, origLeft.sampleDur + changeTime);\n            sServObj.updateSegItemInLevel(levelName, orig.id, undefined, labelIdx, orig.sampleStart + changeTime, orig.sampleDur - changeTime);\n          }\n        }\n      }\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.movePoint = function (name, id, changeTime) {\n      var orig = sServObj.getItemFromLevelById(name, id);\n      if (orig.samplePoint + changeTime > 0 && orig.samplePoint + changeTime <= Soundhandlerservice.wavJSO.Data.length) {\n        sServObj.setPointDetails(name, orig.id, orig.labels[0].value, orig.samplePoint + changeTime);\n      }\n      //resort Points after moving\n      angular.forEach(sServObj.data.levels, function (t) {\n        if (t.name === name) {\n          t.items.sort(sServObj.orderPoints);\n        }\n      });\n    };\n    /**\n\t\t * reorder points on Event level after moving them. This is needed when Points are moved before or after each other\n\t\t *\n\t\t */\n    sServObj.orderPoints = function (a, b) {\n      //Compare \"a\" and \"b\" in some fashion, and return -1, 0, or 1\n      if (a.samplePoint > b.samplePoint)\n        return 1;\n      if (a.samplePoint < b.samplePoint)\n        return -1;\n      return 0;\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.moveSegment = function (name, id, length, changeTime) {\n      var firstOrder = sServObj.getOrderById(name, id);\n      var firstSegment = sServObj.getItemDetails(name, firstOrder);\n      var lastSegment = sServObj.getItemDetails(name, firstOrder + length - 1);\n      var lastNeighbours = sServObj.getItemNeighboursFromLevel(name, firstSegment.id, lastSegment.id);\n      var attrDefName = viewState.getCurAttrDef(name);\n      var labelIdx = getLabelIdx(attrDefName, firstSegment.labels);\n      if (lastNeighbours.left === undefined && lastNeighbours.right !== undefined) {\n        var right = sServObj.getItemFromLevelById(name, lastNeighbours.right.id);\n        if (firstSegment.sampleStart + changeTime > 0 && lastNeighbours.right.sampleDur - changeTime >= 0) {\n          sServObj.updateSegItemInLevel(name, right.id, undefined, labelIdx, right.sampleStart + changeTime, right.sampleDur - changeTime);\n          for (var i = firstOrder; i < firstOrder + length; i++) {\n            var orig = sServObj.getItemDetails(name, i);\n            sServObj.updateSegItemInLevel(name, orig.id, undefined, labelIdx, orig.sampleStart + changeTime, orig.sampleDur);\n          }\n        }\n      } else if (lastNeighbours.right === undefined && lastNeighbours.left !== undefined) {\n        var left = sServObj.getItemFromLevelById(name, lastNeighbours.left.id);\n        if (lastNeighbours.left.sampleDur + changeTime >= 0) {\n          if (lastSegment.sampleStart + lastSegment.sampleDur + changeTime < Soundhandlerservice.wavJSO.Data.length) {\n            sServObj.updateSegItemInLevel(name, left.id, undefined, labelIdx, left.sampleStart, left.sampleDur + changeTime);\n            for (var i = firstOrder; i < firstOrder + length; i++) {\n              var orig = sServObj.getItemDetails(name, i);\n              sServObj.updateSegItemInLevel(name, orig.id, undefined, labelIdx, orig.sampleStart + changeTime, orig.sampleDur);\n            }\n          }\n        }\n      } else if (lastNeighbours.right !== undefined && lastNeighbours.left !== undefined) {\n        var origLeft = sServObj.getItemFromLevelById(name, lastNeighbours.left.id);\n        var origRight = sServObj.getItemFromLevelById(name, lastNeighbours.right.id);\n        if (origLeft.sampleDur + changeTime >= 0 && origRight.sampleDur - changeTime >= 0) {\n          sServObj.updateSegItemInLevel(name, origLeft.id, undefined, labelIdx, origLeft.sampleStart, origLeft.sampleDur + changeTime);\n          sServObj.updateSegItemInLevel(name, origRight.id, undefined, labelIdx, origRight.sampleStart + changeTime, origRight.sampleDur - changeTime);\n          for (var i = firstOrder; i < firstOrder + length; i++) {\n            var orig = sServObj.getItemDetails(name, i);\n            sServObj.updateSegItemInLevel(name, orig.id, undefined, labelIdx, orig.sampleStart + changeTime, orig.sampleDur);\n          }\n        }\n      } else if (lastNeighbours.right === undefined && lastNeighbours.left === undefined) {\n        var first = sServObj.getItemDetails(name, firstOrder);\n        var last = sServObj.getItemDetails(name, firstOrder + length - 1);\n        if (first.sampleStart + changeTime > 0 && last.sampleDur + last.sampleStart + changeTime < Soundhandlerservice.wavJSO.Data.length) {\n          for (var i = firstOrder; i < firstOrder + length; i++) {\n            var orig = sServObj.getItemDetails(name, i);\n            sServObj.updateSegItemInLevel(name, orig.id, undefined, labelIdx, orig.sampleStart + changeTime, orig.sampleDur);\n          }\n        }\n      }\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.expandSegment = function (rightSide, segments, name, changeTime) {\n      var startTime = 0;\n      var neighbours = sServObj.getItemNeighboursFromLevel(name, segments[0].id, segments[segments.length - 1].id);\n      var segTime = changeTime * segments.length;\n      var attrDefName = viewState.getCurAttrDef(name);\n      var labelIdx = getLabelIdx(attrDefName, segments[0].labels);\n      var tempItem;\n      var allow = true;\n      if (rightSide) {\n        // if expand or shrink on RIGHT side\n        if (neighbours.right === undefined) {\n          // last element\n          var lastLength = segments[segments.length - 1].sampleStart + segments[segments.length - 1].sampleDur + changeTime * segments.length;\n          if (lastLength <= Soundhandlerservice.wavJSO.Data.length) {\n            angular.forEach(segments, function (seg) {\n              tempItem = sServObj.getItemFromLevelById(name, seg.id);\n              sServObj.updateSegItemInLevel(name, tempItem.id, undefined, labelIdx, tempItem.sampleStart + startTime, tempItem.sampleDur + changeTime);\n              startTime += changeTime;\n            });\n          }\n        } else {\n          angular.forEach(segments, function (seg) {\n            if (seg.sampleDur + 1 + changeTime < 0) {\n              allow = false;\n            }\n          });\n          if (allow && neighbours.right.sampleDur - changeTime * segments.length > 0) {\n            angular.forEach(segments, function (seg) {\n              tempItem = sServObj.getItemFromLevelById(name, seg.id);\n              sServObj.updateSegItemInLevel(name, tempItem.id, undefined, labelIdx, tempItem.sampleStart + startTime, tempItem.sampleDur + changeTime);\n              startTime += changeTime;\n            });\n            sServObj.updateSegItemInLevel(name, neighbours.right.id, undefined, labelIdx, neighbours.right.sampleStart + startTime, neighbours.right.sampleDur - startTime);\n          }\n        }\n      } else {\n        // if expand or shrink on LEFT side\n        if (neighbours.left === undefined) {\n          // first element\n          var first = sServObj.getItemDetails(name, 0);\n          if (first.sampleStart + changeTime * (segments.length + 1) > 0) {\n            angular.forEach(segments, function (seg) {\n              tempItem = sServObj.getItemFromLevelById(name, seg.id);\n              sServObj.updateSegItemInLevel(name, tempItem.id, undefined, tempItem.sampleStart - changeTime, labelIdx, tempItem.sampleDur + changeTime);\n            });\n          }\n        } else {\n          angular.forEach(segments, function (seg) {\n            if (seg.sampleDur + 1 + changeTime < 0) {\n              allow = false;\n            }\n          });\n          if (allow && neighbours.left.sampleDur - changeTime * segments.length > 0) {\n            startTime = 0;\n            angular.forEach(segments, function (seg, i) {\n              tempItem = sServObj.getItemFromLevelById(name, seg.id);\n              startTime = -(segments.length - i) * changeTime;\n              sServObj.updateSegItemInLevel(name, tempItem.id, undefined, labelIdx, tempItem.sampleStart + startTime, tempItem.sampleDur + changeTime);\n            });\n            sServObj.updateSegItemInLevel(name, neighbours.left.id, undefined, labelIdx, neighbours.left.sampleStart, neighbours.left.sampleDur - segments.length * changeTime);\n          }\n        }\n      }\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.calcDistanceToNearestZeroCrossing = function (sample) {\n      // walk right\n      var distRight;\n      for (var i = sample; i < Soundhandlerservice.wavJSO.Data.length - 1; i++) {\n        if (Soundhandlerservice.wavJSO.Data[i] >= 0 && Soundhandlerservice.wavJSO.Data[i + 1] < 0 || Soundhandlerservice.wavJSO.Data[i] < 0 && Soundhandlerservice.wavJSO.Data[i + 1] >= 0) {\n          distRight = i - sample;\n          break;\n        }\n      }\n      // walk left\n      var distLeft;\n      for (var i = sample; i > 1; i--) {\n        if (Soundhandlerservice.wavJSO.Data[i] >= 0 && Soundhandlerservice.wavJSO.Data[i - 1] < 0 || Soundhandlerservice.wavJSO.Data[i] < 0 && Soundhandlerservice.wavJSO.Data[i - 1] >= 0) {\n          distLeft = i - sample;\n          break;\n        }\n      }\n      var res;\n      if (Math.abs(distLeft) < Math.abs(distRight)) {\n        res = distLeft;\n      } else {\n        res = distRight + 1;\n      }\n      return res;\n    };\n    /**\n\t\t * get all labels (curAttr def applies) of a level and\n\t\t * return them as a flat array\n\t\t * @param levelName\n\t\t * @return array containing all labels (form==['x','y','z'])\n\t\t */\n    sServObj.getAllLabelsOfLevel = function (levelDetails) {\n      var curAttrDef = viewState.getCurAttrDef(levelDetails.level.name);\n      var labels = [];\n      for (var i = 0; i < levelDetails.level.items.length; i++) {\n        for (var j = 0; j < levelDetails.level.items[i].labels.length; j++) {\n          if (levelDetails.level.items[i].labels[j].name === curAttrDef) {\n            labels.push(levelDetails.level.items[i].labels[j].value);\n          }\n        }\n      }\n      return labels;\n    };\n    /////////////////////// handle hierarchy links (probably better in other service)/////////////////////\n    /**\n\t\t * adds links to sServObj.data.links \n\t\t * by pairing all childIds with the parent \n\t\t * id (form=={'fromID':parentID, 'toID':childId})\n\t\t */\n    sServObj.addLinkToParent = function (parentId, childIds) {\n      angular.forEach(childIds, function (chId) {\n        sServObj.data.links.push({\n          'fromID': parentId,\n          'toID': chId\n        });\n      });\n    };\n    /**\n\t\t * removes links from sServObj.data.links \n\t\t * that match the form {'fromID':parentID, 'toID':childId}\n\t\t */\n    sServObj.inverseAddLinkToParent = function (parentId, childIds) {\n      angular.forEach(sServObj.data.links, function (link, linkIdx) {\n        if (link.fromID === parentId && childIds.indexOf(link.toID) !== -1) {\n          sServObj.data.links.splice(linkIdx);\n        }\n        ;\n      });\n    };\n    return sServObj;\n  }\n]);\n'use strict';\nangular.module('emuwebApp').service('Websockethandler', [\n  '$q',\n  '$rootScope',\n  '$location',\n  '$timeout',\n  'HistoryService',\n  'Ssffparserservice',\n  'ConfigProviderService',\n  'viewState',\n  'Wavparserservice',\n  'Soundhandlerservice',\n  'Espsparserservice',\n  'uuid',\n  'Binarydatamaniphelper',\n  'Ssffdataservice',\n  'dialogService',\n  function Websockethandler($q, $rootScope, $location, $timeout, HistoryService, Ssffparserservice, ConfigProviderService, viewState, Wavparserservice, Soundhandlerservice, Espsparserservice, uuid, Binarydatamaniphelper, Ssffdataservice, dialogService) {\n    // shared service object\n    var sServObj = {};\n    // Keep all pending requests here until they get responses\n    var callbacks = {};\n    // Create our websocket object with the address to the websocket\n    var ws = {};\n    // empty promise object to be resolved when connection is up\n    var conPromise = {};\n    var connected = false;\n    ////////////////////////////\n    // ws function\n    // broadcast on open\n    function wsonopen(message) {\n      connected = true;\n      $rootScope.$apply(conPromise.resolve(message));\n    }\n    function wsonmessage(message) {\n      listener(angular.fromJson(message.data));\n    }\n    function wsonerror(message) {\n      // console.log(message);\n      console.error('WEBSOCKET ERROR!!!!!');\n      $rootScope.$apply(conPromise.resolve(message));\n    }\n    function wsonclose(message) {\n      console.log(message);\n      if (!message.wasClean && connected) {\n        // show no clean disconnect error\n        dialogService.open('views/error.html', 'ModalCtrl', 'A non clean diconnect to the server occurred! This probably means that the server is down. Please check the server and reconnect!').then(function () {\n          $rootScope.$broadcast('connectionDisrupted');\n        });\n      }\n      connected = false;\n      console.log('WEBSOCKET closed!!!!!');\n    }\n    function sendRequest(request) {\n      var defer = $q.defer();\n      var callbackId = getCallbackId();\n      callbacks[callbackId] = {\n        time: new Date(),\n        cb: defer\n      };\n      request.callbackID = callbackId;\n      ws.send(angular.toJson(request));\n      // timeout request if not answered\n      $timeout(function () {\n        var tOutResp = {\n            'callbackID': callbackId,\n            'status': {\n              'type': 'ERROR:TIMEOUT',\n              'message': 'Sent request of type: ' + request.type + ' timed out after ' + ConfigProviderService.vals.main.serverTimeoutInterval + 'ms!  Please check the server...'\n            }\n          };\n        listener(tOutResp);\n      }, ConfigProviderService.vals.main.serverTimeoutInterval);\n      return defer.promise;\n    }\n    function listener(data) {\n      var messageObj = data;\n      // console.log(\"Received data from websocket: \", messageObj);\n      // If an object exists with callbackID in our callbacks object, resolve it\n      if (callbacks.hasOwnProperty(messageObj.callbackID)) {\n        // console.log(callbacks[messageObj.callbackID]);\n        // console.log('resolving callback: ' + messageObj.type + ' Nr.: ' + messageObj.callbackID);\n        switch (messageObj.type) {\n        case 'getESPSfile':\n          alert('espsfile');\n          //handleReceivedESPS(messageObj.fileName, messageObj.data);\n          break;\n        case 'getSSFFfile':\n          alert('ssfffile');\n          //handleReceivedSSFF(messageObj.fileName, messageObj.data);\n          break;\n        }\n        // resolve promise with data only\n        if (messageObj.status.type === 'SUCCESS') {\n          $rootScope.$apply(callbacks[messageObj.callbackID].cb.resolve(messageObj.data));\n        } else {\n          // show protocol error and disconnect from server\n          dialogService.open('views/error.html', 'ModalCtrl', 'Communication error with server! Error message is: ' + messageObj.status.message);\n        }\n        delete callbacks[messageObj.callbackID];\n      } else {\n        if (messageObj.status.type === 'ERROR:TIMEOUT') {\n        } else {\n          dialogService.open('views/error.html', 'ModalCtrl', 'What just happened? You should not be here...');\n        }\n      }\n    }\n    // This creates a new callback ID for a request\n    function getCallbackId() {\n      var newUUID = uuid.new();\n      return newUUID;\n    }\n    ///////////////////////////////////////////\n    // public api\n    sServObj.initConnect = function (url) {\n      var defer = $q.defer();\n      ws = new WebSocket(url);\n      ws.onopen = wsonopen;\n      ws.onmessage = wsonmessage;\n      ws.onerror = wsonerror;\n      ws.onclose = wsonclose;\n      conPromise = defer;\n      return defer.promise;\n    };\n    //\n    sServObj.isConnected = function () {\n      return connected;\n    };\n    // close connection with ws\n    sServObj.closeConnect = function () {\n      ws.onclose = function () {\n      };\n      ws.close();\n    };\n    ////////////////////////////\n    // EMU-webApp protocol begins here\n    //\n    // ws getProtocol\n    sServObj.getProtocol = function () {\n      var request = { type: 'GETPROTOCOL' };\n      // Storing in a variable for clarity on what sendRequest returns\n      var promise = sendRequest(request);\n      return promise;\n    };\n    // ws getProtocol\n    sServObj.getDoUserManagement = function () {\n      var request = { type: 'GETDOUSERMANAGEMENT' };\n      // Storing in a variable for clarity on what sendRequest returns\n      var promise = sendRequest(request);\n      return promise;\n    };\n    // ws logOnUser\n    sServObj.logOnUser = function (name, pwd) {\n      var request = {\n          type: 'LOGONUSER',\n          userName: name,\n          pwd: pwd\n        };\n      // Storing in a variable for clarity on what sendRequest returns\n      var promise = sendRequest(request);\n      return promise;\n    };\n    // ws getConfigFile\n    sServObj.getDBconfigFile = function () {\n      var request = { type: 'GETGLOBALDBCONFIG' };\n      // Storing in a variable for clarity on what sendRequest returns\n      var promise = sendRequest(request);\n      return promise;\n    };\n    // ws getBundleList\n    sServObj.getBundleList = function () {\n      var request = { type: 'GETBUNDLELIST' };\n      // Storing in a variable for clarity on what sendRequest returns\n      var promise = sendRequest(request);\n      return promise;\n    };\n    // ws  getBundle\n    sServObj.getBundle = function (name) {\n      var request = {\n          type: 'GETBUNDLE',\n          name: name\n        };\n      // Storing in a variable for clarity on what sendRequest returns\n      var promise = sendRequest(request);\n      return promise;\n    };\n    // ws  saveBundle\n    sServObj.saveBundle = function (bundleData) {\n      var request = {\n          type: 'SAVEBUNDLE',\n          data: bundleData\n        };\n      // Storing in a variable for clarity on what sendRequest returns\n      var promise = sendRequest(request);\n      return promise;\n    };\n    // ws  disconnecting\n    sServObj.disconnectWarning = function () {\n      var request = { type: 'DISCONNECTWARNING' };\n      // Storing in a variable for clarity on what sendRequest returns\n      var promise = sendRequest(request);\n      return promise;\n    };\n    //\n    // EMU-webApp protocol ends here\n    ////////////////////////////\n    return sServObj;\n  }\n]);\n'use strict';\nangular.module('emuwebApp').controller('WsconnectionCtrl', [\n  '$scope',\n  'ConfigProviderService',\n  'Iohandlerservice',\n  'viewState',\n  'dialogService',\n  function ($scope, ConfigProviderService, Iohandlerservice, viewState, dialogService) {\n    $scope.serverInfos = {};\n    $scope.serverInfos.Url = ConfigProviderService.vals.main.serverUrl;\n    $scope.connectionError = '';\n    viewState.focusInTextField = true;\n    $scope.tryConnection = function () {\n      dialogService.close($scope.serverInfos.Url);\n    };\n    $scope.cancel = function () {\n      dialogService.close(false);\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').service('Binarydatamaniphelper', function Binarydatamaniphelper() {\n  // shared service object\n  var sServObj = {};\n  /**\n\t\t *\n\t\t */\n  sServObj.base64ToArrayBuffer = function (stringBase64) {\n    var binaryString = window.atob(stringBase64);\n    var len = binaryString.length;\n    var bytes = new Uint8Array(len);\n    for (var i = 0; i < len; i++) {\n      var ascii = binaryString.charCodeAt(i);\n      bytes[i] = ascii;\n    }\n    return bytes.buffer;\n  };\n  /**\n\t\t *\n\t\t */\n  sServObj.arrayBufferToBase64 = function (buffer) {\n    var binary = '';\n    var bytes = new Uint8Array(buffer);\n    var len = bytes.byteLength;\n    for (var i = 0; i < len; i++) {\n      binary += String.fromCharCode(bytes[i]);\n    }\n    return window.btoa(binary);\n  };\n  /**\n\t\t *\n\t\tsServObj.stringToArrayBuffer = function (str) {\n\t\t\tvar ab = new ArrayBuffer(str.length);\n\t\t\tvar view = new Uint8Array(ab);\n\t\t\tfor (var i = 0; i < str.length; ++i) {\n\t\t\t\tview[i] = str.charCodeAt(i);\n\t\t\t}\n\t\t\treturn ab;\n\t\t};\n\t\t */\n  return sServObj;\n});\n'use strict';\nangular.module('emuwebApp').service('dialogService', [\n  '$modal',\n  'viewState',\n  function dialogService($modal, viewState) {\n    // shared service object\n    var sServObj = {};\n    var modalInstance = {};\n    /**\n\t\t *\n\t\t */\n    sServObj.open = function (templatefile, argCtrl, passedIn) {\n      viewState.setState('modalShowing');\n      modalInstance = $modal.open({\n        backdrop: 'static',\n        keyboard: false,\n        templateUrl: templatefile,\n        controller: argCtrl,\n        resolve: {\n          passedInTxt: function () {\n            return passedIn;\n          },\n          passedInOpts: function () {\n            return passedIn;\n          }\n        }\n      });\n      return modalInstance.result;\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.openExport = function (templatefile, argCtrl, data, txt) {\n      viewState.setState('modalShowing');\n      modalInstance = $modal.open({\n        backdrop: 'static',\n        keyboard: false,\n        templateUrl: templatefile,\n        controller: argCtrl,\n        resolve: {\n          exportData: function () {\n            return data;\n          },\n          exportName: function () {\n            return txt;\n          }\n        }\n      });\n      return modalInstance.result;\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.close = function (res) {\n      viewState.focusInTextField = false;\n      viewState.setState(viewState.prevState);\n      modalInstance.close(res);\n    };\n    return sServObj;\n  }\n]);\n'use strict';\nangular.module('emuwebApp').controller('WaitCtrl', [\n  '$scope',\n  'viewState',\n  function ($scope, viewState) {\n    $scope.vs = viewState;\n  }\n]);\n'use strict';\nangular.module('emuwebApp').service('Appcachehandler', [\n  '$http',\n  'dialogService',\n  function Appcachehandler($http, dialogService) {\n    // shared service object\n    var sServObj = {};\n    var appCache = window.applicationCache;\n    // var cacheProperties = {\n    // \tfilesDownloaded: 0,\n    // \ttotalFiles: 0\n    // };\n    // function getTotalFiles() {\n    // \t// First, reset the total file count and download count.\n    // \tcacheProperties.filesDownloaded = 0;\n    // \tcacheProperties.totalFiles = 0;\n    // \t$http.get('manifest.appcache').success(function (content) {\n    // \t\t// console.log(content);\n    // \t\tcontent = content.replace(\n    // \t\t\tnew RegExp(\n    // \t\t\t\t'(NETWORK|FALLBACK):' +\n    // \t\t\t\t'((?!(NETWORK|FALLBACK|CACHE):)[\\\\w\\\\W]*)',\n    // \t\t\t\t'gi'\n    // \t\t\t),\n    // \t\t\t''\n    // \t\t);\n    // \t\t// Strip out all comments.\n    // \t\tcontent = content.replace(\n    // \t\t\tnew RegExp('#[^\\\\r\\\\n]*(\\\\r\\\\n?|\\\\n)', 'g'),\n    // \t\t\t''\n    // \t\t);\n    // \t\t// Strip out the cache manifest header and\n    // \t\t// trailing slashes.\n    // \t\tcontent = content.replace(\n    // \t\t\tnew RegExp('CACHE MANIFEST\\\\s*|\\\\s*$', 'g'),\n    // \t\t\t''\n    // \t\t);\n    // \t\t// Strip out extra line breaks and replace with\n    // \t\t// a hash sign that we can break on.\n    // \t\tcontent = content.replace(\n    // \t\t\tnew RegExp('[\\\\r\\\\n]+', 'g'),\n    // \t\t\t'#'\n    // \t\t);\n    // \t\t// Get the total number of files.\n    // \t\tvar totalFiles = content.split('#').length;\n    // \t\t// Store the total number of files. Here, we are\n    // \t\t// adding one for *THIS* file, which is cached\n    // \t\t// implicitly as it points to the manifest.\n    // \t\tcacheProperties.totalFiles = (totalFiles + 1);\n    // \t\t// console.log('##########################');\n    // \t\t// alert('INFO: appcache update of: ' + cacheProperties.totalFiles + ' files');\n    // \t});\n    // }\n    // function handleCheckingEvent(e) {\n    // \tconsole.log('###### handleCheckingEvent ##########');\n    // \tconsole.log(e);\n    // }\n    // function handleNoupdateEvent(e) {\n    // \tconsole.log('###### handleNoupdateEvent ##########');\n    // \tconsole.log(e);\n    // }\n    // function handleDownloadingEvent(e) {\n    // \tconsole.log('######## handleDownloadingEvent ##########');\n    // \tconsole.log(e);\n    // \tgetTotalFiles();\n    // }\n    // function handleProgressEvent(e) {\n    // \tconsole.log('###### handleProgressEvent ##########');\n    // \tconsole.log(e);\n    // }\n    /**\n\t\t *\n\t\t */\n    // function handleCachedEvent(e) {\n    // \tconsole.log('###### handleCachedEvent ##########');\n    // \tconsole.log(e);\n    // }\n    /**\n\t\t *\n\t\t */\n    function handleUpdatereadyEvent(e) {\n      console.log('###### handleUpdatereadyEvent ##########');\n      dialogService.open('views/confirmModal.html', 'ConfirmmodalCtrl', 'A new version of the EMU-WebApp is available and has already been downloaded and cached in your browser. Would you like to use it? CAUTION: A reload will delete all current changes... TIP: the next time you use the EMU-webApp you will automatically use the updated version)').then(function (res) {\n        if (res) {\n          appCache.swapCache();\n          window.location.reload();\n        }\n      });\n    }\n    // function handleObsoleteEvent(e) {\n    // \tconsole.log('###### handleObsoleteEvent ##########');\n    // \tconsole.log(e);\n    // }\n    // function handleErrorEvent(e) {\n    // \tconsole.log('###### handleErrorEvent ##########');\n    // \tconsole.log(e);\n    // }\n    // // bind evts\n    // // appCache.addEventListener('progress', handleProgressEvent, false);\n    // appCache.addEventListener('checking', handleCheckingEvent, false);\n    // appCache.addEventListener('noupdate', handleNoupdateEvent, false);\n    // appCache.addEventListener('downloading', handleDownloadingEvent, false);\n    // appCache.addEventListener('progress', handleProgressEvent, false);\n    // appCache.addEventListener('cached', handleCachedEvent, false);\n    appCache.addEventListener('updateready', handleUpdatereadyEvent, false);\n    // appCache.addEventListener('obsolete', handleObsoleteEvent, false);\n    // appCache.addEventListener('error', handleErrorEvent, false);\n    // /////////////////////////////////////////////////\n    // // public api\n    sServObj.checkForNewVersion = function () {\n      // console.log('check for new version');\n      if (appCache.status !== 0 && appCache.status !== 3) {\n        // uncached == 0 & downloading == 3\n        console.log('INFO: appCache.status: ' + appCache.status);\n        appCache.update();\n      }\n    };\n    return sServObj;\n  }\n]);\n'use strict';\nangular.module('emuwebApp').controller('AboutCtrl', [\n  '$scope',\n  'ConfigProviderService',\n  'dialogService',\n  function ($scope, ConfigProviderService, dialogService) {\n    $scope.cps = ConfigProviderService;\n    $scope.getStrRep = function (code) {\n      var str;\n      switch (code) {\n      case 8:\n        str = 'BACKSPACE';\n        break;\n      case 9:\n        str = 'TAB';\n        break;\n      case 13:\n        str = 'ENTER';\n        break;\n      case 16:\n        str = 'SHIFT';\n        break;\n      case 18:\n        str = 'ALT';\n        break;\n      case 32:\n        str = 'SPACE';\n        break;\n      case 37:\n        str = '\\u2190';\n        break;\n      case 39:\n        str = '\\u2192';\n        break;\n      case 38:\n        str = '\\u2191';\n        break;\n      case 40:\n        str = '\\u2193';\n        break;\n      case 42:\n        str = '+';\n        break;\n      case 43:\n        str = '+';\n        break;\n      case 45:\n        str = '-';\n        break;\n      case 95:\n        str = '-';\n        break;\n      default:\n        str = String.fromCharCode(code);\n      }\n      return str;\n    };\n    $scope.cancel = function () {\n      dialogService.close();\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').controller('spectSettingsCtrl', [\n  '$scope',\n  'dialogService',\n  'viewState',\n  'LevelService',\n  function ($scope, dialogService, viewState, LevelService) {\n    $scope.vs = viewState;\n    $scope.options = Object.keys($scope.vs.getWindowFunctions());\n    $scope.selWindowInfo = {};\n    $scope.selWindowInfo.name = Object.keys($scope.vs.getWindowFunctions())[$scope.vs.spectroSettings.window - 1];\n    // console.log(Object.keys($scope.vs.getWindowFunctions())[$scope.vs.spectroSettings.window - 1]);\n    $scope.windowLengths = [\n      32,\n      64,\n      128,\n      256,\n      512,\n      1024,\n      2048\n    ];\n    $scope.modalVals = {\n      'rangeFrom': $scope.vs.spectroSettings.rangeFrom,\n      'rangeTo': $scope.vs.spectroSettings.rangeTo,\n      'dynamicRange': $scope.vs.spectroSettings.dynamicRange,\n      'windowLength': $scope.vs.spectroSettings.windowLength,\n      'window': $scope.vs.spectroSettings.window,\n      'drawHeatMapColors': $scope.vs.spectroSettings.drawHeatMapColors,\n      'preEmphasisFilterFactor': $scope.vs.spectroSettings.preEmphasisFilterFactor,\n      'heatMapColorAnchors': viewState.spectroSettings.heatMapColorAnchors\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.cursorInTextField = function () {\n      viewState.focusInTextField = true;\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.cursorOutOfTextField = function () {\n      viewState.focusInTextField = false;\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.getColorOfAnchor = function (anchorNr) {\n      var curStyle = {\n          'background-color': 'rgb(' + $scope.modalVals.heatMapColorAnchors[anchorNr][0] + ',' + $scope.modalVals.heatMapColorAnchors[anchorNr][1] + ',' + $scope.modalVals.heatMapColorAnchors[anchorNr][2] + ')',\n          'width': '10px',\n          'height': '10px'\n        };\n      return curStyle;\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.saveSpectroSettings = function () {\n      if ($scope.modalVals.dynamicRange % 1 === 0) {\n        if ($scope.modalVals.rangeFrom % 1 === 0) {\n          if ($scope.modalVals.rangeTo % 1 === 0) {\n            if ($scope.modalVals.rangeFrom >= 0) {\n              if ($scope.modalVals.rangeTo <= LevelService.data.sampleRate / 2) {\n                viewState.setspectroSettings($scope.modalVals.windowLength, $scope.modalVals.rangeFrom, $scope.modalVals.rangeTo, $scope.modalVals.dynamicRange, $scope.selWindowInfo.name, $scope.modalVals.drawHeatMapColors, $scope.modalVals.preEmphasisFilterFactor, $scope.modalVals.heatMapColorAnchors);\n                $scope.cancel();\n              } else {\n                $scope.error('View Range (Hz) upper boundary is a value bigger than ' + LevelService.data.sampleRate / 2);\n              }\n            } else {\n              $scope.error('View Range (Hz) lower boundary is a value below zero');\n            }\n          } else {\n            $scope.error('View Range (Hz) upper boundary has to be an Integer value.');\n          }\n        } else {\n          $scope.error('View Range (Hz) lower boundary has to be an Integer value.');\n        }\n      } else {\n        $scope.error('Dynamic Range has to be an Integer value.');\n      }\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.error = function (errorMsg) {\n      dialogService.close();\n      dialogService.open('views/error.html', 'ModalCtrl', 'Sorry: ' + errorMsg);\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.cancel = function () {\n      dialogService.close();\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').controller('ConfirmmodalCtrl', [\n  '$scope',\n  'dialogService',\n  'passedInTxt',\n  function ($scope, dialogService, passedInTxt) {\n    $scope.passedInTxt = passedInTxt;\n    $scope.confirm = function () {\n      dialogService.close(true);\n    };\n    $scope.cancel = function () {\n      dialogService.close(false);\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').controller('SelectThresholdModalCtrl', [\n  '$scope',\n  'dialogService',\n  'passedInOpts',\n  'ArrayHelperService',\n  function ($scope, dialogService, passedInOpts, ArrayHelperService) {\n    $scope.passedInOpts = passedInOpts;\n    $scope.myData = ArrayHelperService.convertArrayToXYjsoArray(passedInOpts.y);\n    $scope.select = function (idx) {\n      dialogService.close(idx);\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').controller('SelectLabelModalCtrl', [\n  '$scope',\n  'dialogService',\n  'passedInOpts',\n  'ArrayHelperService',\n  function ($scope, dialogService, passedInOpts, ArrayHelperService) {\n    $scope.passedInOpts = passedInOpts;\n    $scope.select = function (idx) {\n      dialogService.close(idx);\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').filter('regex', function () {\n  return function (input, regex) {\n    var patt = new RegExp(regex.toLowerCase());\n    var out = [];\n    for (var i = 0; i < input.length; i++) {\n      if (patt.test(input[i].name.toLowerCase())) {\n        out.push(input[i]);\n      }\n    }\n    return out;\n  };\n});\n'use strict';\nangular.module('emuwebApp').filter('levelsFilter', [\n  'ConfigProviderService',\n  'viewState',\n  function (ConfigProviderService, viewState) {\n    return function (input) {\n      if (input) {\n        var patt1 = new RegExp('SEGMENT');\n        var patt2 = new RegExp('EVENT');\n        var out = [];\n        var idx;\n        for (var i = 0; i < input.length; i++) {\n          if (patt1.test(input[i].type) || patt2.test(input[i].type)) {\n            if (ConfigProviderService.vals.perspectives[viewState.curPerspectiveIdx].levelCanvases !== undefined) {\n              idx = ConfigProviderService.vals.perspectives[viewState.curPerspectiveIdx].levelCanvases.order.indexOf(input[i].name);\n              if (idx !== -1) {\n                out[idx] = input[i];\n              }\n            }\n          }\n        }\n        // console.log(out)\n        return out;\n      }\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').controller('ModalCtrl', [\n  '$scope',\n  'dialogService',\n  'passedInTxt',\n  'viewState',\n  'LevelService',\n  'HistoryService',\n  function ($scope, dialogService, passedInTxt, viewState, LevelService, HistoryService) {\n    $scope.passedInTxt = passedInTxt;\n    $scope.passedOutTxt = { 'var': null };\n    $scope.cancel = function () {\n      dialogService.close();\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.cursorInTextField = function () {\n      viewState.focusInTextField = true;\n    };\n    /**\n\t\t *\n\t\t */\n    $scope.cursorOutOfTextField = function () {\n      viewState.focusInTextField = false;\n    };\n    /**\n\t\t *  Save changes made on SSFF\n\t\t */\n    $scope.saveChanges = function (name) {\n      dialogService.close('saveChanges');\n    };\n    /**\n\t\t *  Save changes made on SSFF\n\t\t */\n    $scope.discardChanges = function (name) {\n      dialogService.close('discardChanges');\n    };\n    /**\n\t\t *  Rename a level\n\t\t */\n    $scope.renameLevel = function () {\n      LevelService.renameLevel($scope.passedInTxt, $scope.passedOutTxt.var, viewState.curPerspectiveIdx);\n      HistoryService.addObjToUndoStack({\n        'type': 'ESPS',\n        'action': 'RENAMELEVEL',\n        'newname': $scope.passedOutTxt.var,\n        'name': $scope.passedInTxt,\n        'curPerspectiveIdx': viewState.curPerspectiveIdx\n      });\n      dialogService.close();\n    };\n    /**\n\t\t *  Delete a complete level from LevelService\n\t\t */\n    $scope.deleteLevel = function () {\n      var lvl = LevelService.getLevelDetails(viewState.getcurClickLevelName());\n      LevelService.deleteLevel(viewState.getcurClickLevelIndex(), viewState.curPerspectiveIdx);\n      HistoryService.addObjToUndoStack({\n        'type': 'ESPS',\n        'action': 'DELETELEVEL',\n        'level': lvl.level,\n        'id': viewState.getcurClickLevelIndex(),\n        'curPerspectiveIdx': viewState.curPerspectiveIdx\n      });\n      dialogService.close();\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').directive('showMenu', [\n  '$animate',\n  function ($animate) {\n    return {\n      restrict: 'A',\n      link: function postLink(scope, element, attrs) {\n        scope.$watch(attrs.showMenu, function (newVal) {\n          if (newVal) {\n            $animate.addClass(element, 'emuwebapp-expandWidthTo200px');\n          } else {\n            $animate.removeClass(element, 'emuwebapp-expandWidthTo200px');\n            $animate.addClass(element, 'emuwebapp-shrinkWidthTo0px');\n          }\n        });\n      }\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').directive('showTwod', [\n  '$animate',\n  function ($animate) {\n    return {\n      restrict: 'A',\n      link: function postLink(scope, element, attrs) {\n        scope.$watch(attrs.showTwod, function (newVal) {\n          if (newVal) {\n            $animate.addClass(element, '.slideIn2dCanvases');\n          } else {\n            $animate.removeClass(element, '.slideIn2dCanvases');\n          }\n        });\n      }\n    };\n  }\n]);\n// simple animation to add slideLeft class\nangular.module('emuwebApp').animation('.slideIn2dCanvases', function () {\n  return {\n    addClass: function (element, className) {\n      element.addClass('slide2dCanvases');\n    },\n    removeClass: function (element, className) {\n      element.removeClass('slide2dCanvases');\n    }\n  };\n});\nangular.module('emuwebApp').directive('bgSplitter', [\n  '$rootScope',\n  'viewState',\n  function ($rootScope, viewState) {\n    return {\n      restrict: 'E',\n      replace: true,\n      transclude: true,\n      scope: { showTwoDimCans: '@' },\n      template: '<div class=\"emuwebapp-split-panes vertical\" ng-transclude></div>',\n      controller: [\n        '$scope',\n        function ($scope) {\n          $scope.panes = [];\n          $scope.bottomRightResizePane;\n          this.addPane = function (pane) {\n            if ($scope.panes.length > 1)\n              throw 'splitters can only have two panes';\n            $scope.panes.push(pane);\n            return $scope.panes.length;\n          };\n          this.setBottomRightResizePane = function (pane) {\n            $scope.bottomRightResizePane = pane;\n          };\n        }\n      ],\n      link: function (scope, element, attrs) {\n        var dragBottomRightResizePaneTopResizer = false;\n        var dragBottomRightResizePaneLeftResizer = false;\n        var dragBottomRightResizePaneCornerResizer = false;\n        // create split pane view\n        var handler = angular.element('<div class=\"emuwebapp-split-handler\"><span></span></div>');\n        var pane1 = scope.panes[0];\n        var pane2 = scope.panes[1];\n        var pane3 = scope.bottomRightResizePane;\n        var bottomRightResizePaneTopResizer = angular.element('<div class=\"emuwebapp-bottomRightResizePaneTopResizer\"></div>');\n        var bottomRightResizePaneLeftResizer = angular.element('<div class=\"emuwebapp-bottomRightResizePaneLeftResizer\"></div>');\n        var bottomRightResizePaneCornerResizer = angular.element('<div class=\"emuwebapp-bottomRightResizePaneCornerResizer\"></div>');\n        pane3.elem.prepend(bottomRightResizePaneLeftResizer);\n        pane3.elem.prepend(bottomRightResizePaneTopResizer);\n        pane3.elem.prepend(bottomRightResizePaneCornerResizer);\n        var pane1Min = pane1.minSize || 0;\n        var pane2Min = pane2.minSize || 0;\n        var dragSplitPaneResizer = false;\n        var drag = false;\n        pane1.elem.after(handler);\n        attrs.$observe('showTwoDimCans', function (val) {\n          if (val === 'false') {\n            scope.bottomRightResizePane.elem.hide();\n          } else {\n            scope.bottomRightResizePane.elem.show();\n          }\n        });\n        ////////////////////\n        // bindings\n        element.bind('mousemove', function (ev) {\n          if (!drag)\n            return;\n          var bounds = element[0].getBoundingClientRect();\n          var pos = 0;\n          if (dragSplitPaneResizer) {\n            var height = bounds.bottom - bounds.top;\n            pos = ev.clientY - bounds.top;\n            // perc = pos/height * 100;\n            // console.log(perc);\n            if (pos < pane1Min)\n              return;\n            if (height - pos < pane2Min)\n              return;\n            handler.css('top', pos + 'px');\n            pane1.elem.css('height', pos + 'px');\n            pane2.elem.css('top', pos + 'px');\n            viewState.setdragBarHeight(pos);\n          }\n          if (dragBottomRightResizePaneTopResizer) {\n            var height = bounds.bottom - bounds.top;\n            pos = ev.clientY - bounds.top;\n            if (pos <= 10 || height - pos <= 10) {\n              return;\n            }\n            pane3.elem.css('top', pos + 'px');\n            var tmp = height - pos;\n            pane3.elem.css('height', tmp + 'px');\n          }\n          if (dragBottomRightResizePaneLeftResizer) {\n            var width = bounds.right - bounds.left;\n            pos = ev.clientX - bounds.left;\n            if (pos <= 10 || width - pos <= 10) {\n              return;\n            }\n            pane3.elem.css('left', pos + 'px');\n            var tmp = width - pos;\n            pane3.elem.css('width', tmp + 'px');\n          }\n          if (dragBottomRightResizePaneCornerResizer) {\n            // do height and top\n            var height = bounds.bottom - bounds.top;\n            pos = ev.clientY - bounds.top;\n            if (pos <= 10 || height - pos <= 10) {\n              return;\n            }\n            pane3.elem.css('top', pos + 'px');\n            var tmp = height - pos;\n            pane3.elem.css('height', tmp + 'px');\n            // do width and left\n            var width = bounds.right - bounds.left;\n            pos = ev.clientX - bounds.left;\n            if (pos <= 10 || width - pos <= 10) {\n              return;\n            }\n            pane3.elem.css('left', pos + 'px');\n            var tmp = width - pos;\n            pane3.elem.css('width', tmp + 'px');\n          }\n        });\n        handler.bind('mousedown', function (ev) {\n          ev.preventDefault();\n          drag = true;\n          dragSplitPaneResizer = true;\n          viewState.setdragBarActive(true);\n          $rootScope.$digest();\n        });\n        bottomRightResizePaneTopResizer.bind('mousedown', function (ev) {\n          ev.preventDefault();\n          drag = true;\n          dragBottomRightResizePaneTopResizer = true;\n          viewState.setdragBarActive(true);\n          $rootScope.$digest();\n        });\n        bottomRightResizePaneLeftResizer.bind('mousedown', function (ev) {\n          ev.preventDefault();\n          drag = true;\n          dragBottomRightResizePaneLeftResizer = true;\n          viewState.setdragBarActive(true);\n          $rootScope.$digest();\n        });\n        bottomRightResizePaneCornerResizer.bind('mousedown', function (ev) {\n          ev.preventDefault();\n          drag = true;\n          dragBottomRightResizePaneCornerResizer = true;\n          viewState.setdragBarActive(true);\n          $rootScope.$digest();\n        });\n        angular.element(document).bind('mouseup', function (ev) {\n          drag = false;\n          dragSplitPaneResizer = false;\n          dragBottomRightResizePaneTopResizer = false;\n          dragBottomRightResizePaneLeftResizer = false;\n          dragBottomRightResizePaneCornerResizer = false;\n          viewState.setdragBarActive(false);\n          $rootScope.$digest();\n        });\n      }\n    };\n  }\n]).directive('bgPane', function () {\n  return {\n    restrict: 'E',\n    require: '^bgSplitter',\n    replace: true,\n    transclude: true,\n    scope: {\n      minSize: '=',\n      type: '@',\n      showTwoDimCans: '@'\n    },\n    template: '<div class=\"{{typeclass}}\" ng-transclude></div>',\n    link: function (scope, element, attrs, bgSplitterCtrl) {\n      var newElement;\n      if (scope.type !== 'emuwebapp-bottomRightResizePane') {\n        scope.elem = element;\n        scope.index = bgSplitterCtrl.addPane(scope);\n        scope.typeclass = 'split-pane' + scope.index;\n      } else {\n        // element.toggleClass('alert-box alert')\n        // var twoDimCans = angular.element('<div class=\"bottomRightResizePane\"></div>');\n        // var bottomRightResizePaneTopResizer = angular.element('<div class=\"bottomRightResizePaneTopResizer\"></div>');\n        // var bottomRightResizePaneLeftResizer = angular.element('<div class=\"bottomRightResizePaneLeftResizer\"></div>');\n        // var bottomRightResizePaneCornerResizer = angular.element('<div class=\"bottomRightResizePaneCornerResizer\"></div>');\n        // element.prepend(bottomRightResizePaneLeftResizer);\n        // element.prepend(bottomRightResizePaneTopResizer);\n        // element.prepend(bottomRightResizePaneCornerResizer);\n        // element.append(twoDimCans);\n        scope.elem = element;\n        scope.index = 3;\n        scope.typeclass = 'emuwebapp-bottomRightResizePane';\n        bgSplitterCtrl.setBottomRightResizePane(scope);\n      }\n    }\n  };\n});\n'use strict';\nangular.module('emuwebApp').directive('ssffTrack', [\n  '$timeout',\n  'viewState',\n  'ConfigProviderService',\n  function ($timeout, viewState, ConfigProviderService) {\n    return {\n      templateUrl: 'views/ssffTrack.html',\n      restrict: 'E',\n      link: function postLink(scope, element, attrs) {\n        // select the needed DOM elements from the template\n        var canvasLength = element.find('canvas').length;\n        var ssffCanvas = element.find('canvas')[1];\n        var markupCanvas = element.find('canvas')[canvasLength - 1];\n        // var context = canvas0.getContext('2d');\n        var markupCtx = markupCanvas.getContext('2d');\n        var trackName;\n        attrs.$observe('trackName', function (val) {\n          if (val) {\n            trackName = val;\n          }\n        });\n        scope.order = attrs.order;\n        /////////////////////\n        // watches\n        // on broadcast msg from main ctrl openSubmenu refresh timeline\n        scope.$on('refreshTimeline', function () {\n          if (!$.isEmptyObject(scope.shs)) {\n            if (!$.isEmptyObject(scope.shs.wavJSO)) {\n              drawSsffTrackMarkup();\n            }\n          }\n        });\n        //\n        scope.$watch('vs.timelineSize', function () {\n          $timeout(scope.redraw, 10);\n        });\n        scope.$watch('vs.curViewPort', function () {\n          if (!$.isEmptyObject(scope.shs)) {\n            if (!$.isEmptyObject(scope.shs.wavJSO)) {\n              drawSsffTrackMarkup();\n            }\n          }\n        }, true);\n        scope.$watch('ssffds.data.length', function () {\n          if (!$.isEmptyObject(scope.shs)) {\n            if (!$.isEmptyObject(scope.shs.wavJSO)) {\n              drawSsffTrackMarkup();\n            }\n          }\n        }, true);\n        scope.$watch('vs.movingBoundary', function () {\n          if (!$.isEmptyObject(scope.shs)) {\n            if (!$.isEmptyObject(scope.shs.wavJSO)) {\n              drawSsffTrackMarkup();\n            }\n          }\n        }, true);\n        scope.$watch('vs.movingBoundarySample', function () {\n          if (!$.isEmptyObject(scope.shs)) {\n            if (!$.isEmptyObject(scope.shs.wavJSO)) {\n              drawSsffTrackMarkup();\n            }\n          }\n        }, true);\n        //\n        /////////////////////\n        scope.redraw = function () {\n          drawSsffTrackMarkup();\n        };\n        /**\n         *\n         */\n        function drawSsffTrackMarkup() {\n          if (!$.isEmptyObject(scope.ssffds.data)) {\n            if (scope.ssffds.data.length !== 0) {\n              markupCtx.clearRect(0, 0, markupCtx.canvas.width, markupCtx.canvas.height);\n              // draw moving boundary line if moving\n              scope.dhs.drawMovingBoundaryLine(markupCtx);\n              // draw current viewport selected\n              scope.dhs.drawCurViewPortSelected(markupCtx, false);\n              // draw min max an name of track\n              var tr = scope.cps.getSsffTrackConfig(trackName);\n              var col = scope.ssffds.getColumnOfTrack(tr.name, tr.columnName);\n              scope.dhs.drawMinMaxAndName(markupCtx, trackName, col._minVal, col._maxVal, 2);\n            }\n          }\n        }\n      }\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').directive('progressThing', [\n  '$animate',\n  function ($animate) {\n    return {\n      template: '<div class=\"emuwebapp-progressThing\">{{vs.somethingInProgressTxt}}</div>',\n      restrict: 'E',\n      replace: true,\n      link: function postLink(scope, element, attrs) {\n        // element.text('this is the progressThing directive');\n        attrs.$observe('showThing', function (newVal) {\n          if (newVal === 'true') {\n            // $animate.removeClass(element, 'hideProgressThing');\n            $animate.removeClass(element, 'emuwebapp-shrinkHeightTo0px');\n            $animate.addClass(element, 'emuwebapp-expandHeightTo20px');\n          } else {\n            // $animate.addClass(element, 'hideProgressThing');\n            $animate.removeClass(element, 'emuwebapp-expandHeightTo20px');\n            $animate.addClass(element, 'emuwebapp-shrinkHeightTo0px');\n          }\n        });\n      }\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').directive('epg', [\n  'viewState',\n  function (viewState) {\n    return {\n      template: '<div class=\"emuwebapp-twoDimCanvasContainer\"><canvas width=\"512\" height=\"512\"></canvas></div>',\n      restrict: 'E',\n      replace: true,\n      link: function postLink(scope, element, attrs) {\n        // element.text('this is the epg directive');\n        var canvas = element.find('canvas')[0];\n        var tr, col, sRaSt;\n        ////////////////////\n        // watches\n        scope.$watch('vs.curViewPort', function (newValue, oldValue) {\n          if (!$.isEmptyObject(scope.cps.vals)) {\n            if (!$.isEmptyObject(scope.ssffds.data)) {\n              if (scope.ssffds.data.length !== 0) {\n                if (oldValue.sS !== newValue.sS || oldValue.eS !== newValue.eS) {\n                  drawEpgGrid(scope);\n                }\n              }\n            }\n          }\n        }, true);\n        scope.$watch('vs.curMousePosSample', function (newValue, oldValue) {\n          if (!$.isEmptyObject(scope.cps.vals)) {\n            if (!$.isEmptyObject(scope.ssffds.data)) {\n              if (scope.ssffds.data.length !== 0) {\n                drawEpgGrid(scope);\n              }\n            }\n          }\n        }, true);\n        //\n        ////////////////////\n        /**\n\t\t\t\t * drawing method to drawEpgGrid\n\t\t\t\t */\n        function drawEpgGrid(scope) {\n          tr = scope.cps.getSsffTrackConfig('EPG');\n          // SIC SIC SIC hardcoded for now although it might stay that way because it only is allowed to draw epg data anyway\n          col = scope.ssffds.getColumnOfTrack(tr.name, tr.columnName);\n          sRaSt = scope.ssffds.getSampleRateAndStartTimeOfTrack(tr.name);\n          var ctx = canvas.getContext('2d');\n          ctx.clearRect(0, 0, canvas.width, canvas.height);\n          ctx.fillStyle = 'green';\n          ctx.strokeStyle = scope.cps.vals.colors.osciColor;\n          ctx.font = scope.cps.vals.font.fontPxSize + 'px' + ' ' + scope.cps.vals.font.fontType;\n          var gridWidth = canvas.width / 8;\n          var gridHeight = canvas.height / 8;\n          var sInterv = 1 / sRaSt.sampleRate - sRaSt.startTime;\n          var curFrame = Math.round(scope.vs.curMousePosSample / scope.shs.wavJSO.SampleRate / sInterv);\n          var binValStrArr;\n          angular.forEach(col.values[curFrame], function (el, elIdx) {\n            binValStrArr = el.toString(2).split('').reverse();\n            while (binValStrArr.length < 8) {\n              binValStrArr.push('0');\n            }\n            binValStrArr.forEach(function (binStr, binStrIdx) {\n              if (binStr === '1') {\n                ctx.fillStyle = 'grey';\n                ctx.fillRect(binStrIdx * gridWidth + 5, gridHeight * elIdx + 5, gridWidth - 10, gridHeight - 10);\n              } else {\n                ctx.fillStyle = 'white';\n                ctx.fillRect(binStrIdx * gridWidth + 5, gridHeight * elIdx + 5, gridWidth - 10, gridHeight - 10);\n              }\n            });\n          });\n          // draw labels\n          var horizontalText = scope.fontImage.getTextImageTwoLines(ctx, 'EPG', 'Frame:' + curFrame, scope.cps.vals.font.fontPxSize, scope.cps.vals.font.fontType, scope.cps.vals.colors.labelColor, true);\n          ctx.drawImage(horizontalText, 0, 0, horizontalText.width, horizontalText.height, 5, 0, horizontalText.width, horizontalText.height);\n        }\n      }\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').directive('dots', [\n  'viewState',\n  function (viewState) {\n    return {\n      template: '<div class=\"emuwebapp-twoDimCanvasContainer\"><canvas width=\"512\" height=\"512\"></canvas></div>',\n      restrict: 'E',\n      replace: true,\n      link: function postLink(scope, element, attrs) {\n        var canvas = element.find('canvas')[0];\n        var globalMinX = Infinity;\n        var globalMaxX = -Infinity;\n        var globalMinY = Infinity;\n        var globalMaxY = -Infinity;\n        var tr, col, sRaSt;\n        ////////////////////\n        // watches\n        //\n        scope.$watch('ssffds.data.length', function () {\n          if (!$.isEmptyObject(scope.cps.vals)) {\n            if (!$.isEmptyObject(scope.ssffds.data)) {\n              if (scope.ssffds.data.length !== 0) {\n                drawDots(scope);\n              }\n            }\n          }\n        }, true);\n        //\n        scope.$watch('vs.curViewPort', function (newValue, oldValue) {\n          if (!$.isEmptyObject(scope.cps.vals)) {\n            if (!$.isEmptyObject(scope.ssffds.data)) {\n              if (scope.ssffds.data.length !== 0) {\n                if (oldValue.sS !== newValue.sS || oldValue.eS !== newValue.eS) {\n                  drawDots(scope);\n                }\n              }\n            }\n          }\n        }, true);\n        //\n        scope.$watch('vs.curMousePosSample', function () {\n          if (!$.isEmptyObject(scope.cps.vals)) {\n            if (!$.isEmptyObject(scope.ssffds.data)) {\n              if (scope.ssffds.data.length !== 0) {\n                drawDots(scope);\n              }\n            }\n          }\n        }, true);\n        //\n        scope.$watch('vs.curPerspectiveIdx', function () {\n          globalMinX = Infinity;\n          globalMaxX = -Infinity;\n          globalMinY = Infinity;\n          globalMaxY = -Infinity;\n        }, true);\n        //\n        //////////////////\n        function setGlobalMinMaxVals() {\n          // body...\n          var dD = scope.cps.vals.perspectives[scope.vs.curPerspectiveIdx].twoDimCanvases.twoDimDrawingDefinitions[0];\n          // SIC SIC SIC hardcoded\n          for (var i = 0; i < dD.dots.length; i++) {\n            // get xCol\n            var trConf = scope.cps.getSsffTrackConfig(dD.dots[i].xSsffTrack);\n            var xCol = scope.ssffds.getColumnOfTrack(trConf.name, trConf.columnName);\n            if (xCol._minVal < globalMinX) {\n              globalMinX = xCol._minVal;\n            }\n            if (xCol._maxVal > globalMaxX) {\n              globalMaxX = xCol._maxVal;\n            }\n            // get yCol\n            trConf = scope.cps.getSsffTrackConfig(dD.dots[i].ySsffTrack);\n            var yCol = scope.ssffds.getColumnOfTrack(trConf.name, trConf.columnName);\n            if (yCol._minVal < globalMinY) {\n              globalMinY = yCol._minVal;\n            }\n            if (yCol._maxVal > globalMaxY) {\n              globalMaxY = yCol._maxVal;\n            }\n          }\n        }\n        function getScale(ctx, str, scale) {\n          return ctx.measureText(str).width * scale;\n        }\n        function getScaleWidth(ctx, str1, str2, scaleX) {\n          if (str1.toString().length > str2.toString().length) {\n            return getScale(ctx, str1, scaleX);\n          } else {\n            return getScale(ctx, str2, scaleX);\n          }\n        }\n        /**\n\t\t\t\t * drawing method to drawDots\n\t\t\t\t */\n        function drawDots() {\n          if (globalMinX === Infinity) {\n            setGlobalMinMaxVals();\n          }\n          var ctx = canvas.getContext('2d');\n          ctx.clearRect(0, 0, canvas.width, canvas.height);\n          //////////////////////////////\n          // markup to improve visualization \n          var scaleX = ctx.canvas.width / ctx.canvas.offsetWidth;\n          var scaleY = ctx.canvas.height / ctx.canvas.offsetHeight;\n          // draw corner pointers\n          ctx.beginPath();\n          ctx.moveTo(0, 0);\n          ctx.lineTo(5, 5);\n          ctx.moveTo(0, canvas.height);\n          ctx.lineTo(5, canvas.height - 5);\n          ctx.moveTo(canvas.width, canvas.height);\n          ctx.lineTo(canvas.width - 5, canvas.height - 5);\n          ctx.stroke();\n          ctx.closePath();\n          var smallFontSize = scope.cps.vals.font.fontPxSize * 3 / 4;\n          // ymax\n          var labelTxtImg = scope.fontImage.getTextImage(ctx, 'yMax: ' + scope.vs.round(globalMaxY, 2), smallFontSize, scope.cps.vals.font.fontType, scope.cps.vals.colors.endBoundaryColor);\n          ctx.drawImage(labelTxtImg, 5, 5, labelTxtImg.width, labelTxtImg.height);\n          // xmin + y min\n          labelTxtImg = scope.fontImage.getTextImageTwoLines(ctx, 'yMin: ' + scope.vs.round(globalMinY, 2), 'xMin: ' + scope.vs.round(globalMinX, 2), smallFontSize, scope.cps.vals.font.fontType, scope.cps.vals.colors.endBoundaryColor, true);\n          ctx.drawImage(labelTxtImg, 5, canvas.height - smallFontSize * scaleY * 2 - 5, labelTxtImg.width, labelTxtImg.height);\n          // xmax\n          var tw = ctx.measureText('xMax: ' + scope.vs.round(globalMaxX, 5)).width * scaleX;\n          // SIC why 5???\n          labelTxtImg = scope.fontImage.getTextImage(ctx, 'xMax: ' + scope.vs.round(globalMaxX, 2), smallFontSize, scope.cps.vals.font.fontType, scope.cps.vals.colors.endBoundaryColor);\n          ctx.drawImage(labelTxtImg, canvas.width - tw - 5, canvas.height - smallFontSize * scaleY - 5, labelTxtImg.width, labelTxtImg.height);\n          var dD = scope.cps.vals.perspectives[scope.vs.curPerspectiveIdx].twoDimCanvases.twoDimDrawingDefinitions[0];\n          // SIC SIC SIC hardcoded\n          // frame nr\n          var xsRaSt = scope.ssffds.getSampleRateAndStartTimeOfTrack(dD.dots[0].xSsffTrack);\n          // use first track for sample numbers\n          var ysRaSt = scope.ssffds.getSampleRateAndStartTimeOfTrack(dD.dots[0].ySsffTrack);\n          var sInterv = 1 / xsRaSt.sampleRate;\n          var curMousePosTime = scope.vs.curMousePosSample / scope.shs.wavJSO.SampleRate;\n          var curFrame;\n          if (xsRaSt.startTime === 1 / xsRaSt.sampleRate / 2) {\n            curFrame = Math.round(curMousePosTime * xsRaSt.sampleRate);\n          } else {\n            curFrame = Math.round(curMousePosTime * xsRaSt.sampleRate + (xsRaSt.startTime - 1 / xsRaSt.sampleRate / 2) * xsRaSt.sampleRate);\n          }\n          // check if due to math.round curFrame > col.length\n          var trConf = scope.cps.getSsffTrackConfig(dD.dots[0].xSsffTrack);\n          var xCol = scope.ssffds.getColumnOfTrack(trConf.name, trConf.columnName);\n          if (curFrame > xCol.values.length - 1) {\n            curFrame = xCol.values.length - 1;\n          }\n          tw = ctx.measureText('frame: ' + curFrame).width * scaleX;\n          labelTxtImg = scope.fontImage.getTextImage(ctx, 'frame: ' + curFrame, scope.cps.vals.font.fontPxSize - 4, scope.cps.vals.font.fontType, scope.cps.vals.colors.endBoundaryColor);\n          var degrees = 90;\n          ctx.save();\n          ctx.rotate(degrees * Math.PI / 180);\n          ctx.drawImage(labelTxtImg, canvas.width / 2 - tw / 2, -canvas.height);\n          ctx.restore();\n          //////////////////////////////\n          // draw dots\n          var allDots = [];\n          for (var i = 0; i < dD.dots.length; i++) {\n            // get xCol\n            var trConf = scope.cps.getSsffTrackConfig(dD.dots[i].xSsffTrack);\n            var xCol = scope.ssffds.getColumnOfTrack(trConf.name, trConf.columnName);\n            // get yCol\n            trConf = scope.cps.getSsffTrackConfig(dD.dots[i].ySsffTrack);\n            var yCol = scope.ssffds.getColumnOfTrack(trConf.name, trConf.columnName);\n            // check if x and why have the same amount of cols\n            if (xCol.values.length !== yCol.values.length) {\n              alert('columns do not have same length or length of one not 1');\n              return;\n            }\n            var xsRaSt = scope.ssffds.getSampleRateAndStartTimeOfTrack(dD.dots[i].xSsffTrack);\n            var ysRaSt = scope.ssffds.getSampleRateAndStartTimeOfTrack(dD.dots[i].ySsffTrack);\n            // check if sampleRate and startTime is the same\n            if (xsRaSt.sampleRate !== ysRaSt.sampleRate || xsRaSt.startSample !== ysRaSt.startSample) {\n              alert('xsRaSt.sampleRate !== ysRaSt.sampleRate || xsRaSt.startSample !== ysRaSt.startSample');\n              return;\n            }\n            var x = (xCol.values[curFrame][dD.dots[i].xContourNr] - globalMinX) / (globalMaxX - globalMinX) * canvas.width;\n            var y = canvas.height - (yCol.values[curFrame][dD.dots[i].yContourNr] - globalMinY) / (globalMaxY - globalMinY) * canvas.height;\n            var startPoint = Math.PI / 180 * 0;\n            var endPoint = Math.PI / 180 * 360;\n            ctx.strokeStyle = dD.dots[i].color;\n            ctx.beginPath();\n            ctx.arc(x, y, 20, startPoint, endPoint, true);\n            ctx.stroke();\n            ctx.closePath();\n            ctx.beginPath();\n            ctx.arc(x, y, 2, startPoint, endPoint, true);\n            ctx.fill();\n            ctx.closePath();\n            // draw labels\n            var labelTxtImg = scope.fontImage.getTextImage(ctx, dD.dots[i].name, scope.cps.vals.font.fontPxSize - 4, scope.cps.vals.font.fontType, scope.cps.vals.colors.labelColor);\n            ctx.drawImage(labelTxtImg, x, y - 5, labelTxtImg.width, labelTxtImg.height);\n            // append to all dots\n            allDots.push({\n              'name': dD.dots[i].name,\n              'x': x,\n              'y': y\n            });\n          }\n          var f, t;\n          dD.connectLines.forEach(function (c) {\n            allDots.forEach(function (d) {\n              if (d.name === c.fromDot) {\n                f = d;\n              }\n              if (d.name === c.toDot) {\n                t = d;\n              }\n            });\n            // draw line\n            ctx.strokeStyle = c.color;\n            ctx.beginPath();\n            ctx.moveTo(f.x, f.y);\n            ctx.lineTo(t.x, t.y);\n            ctx.stroke();\n            ctx.closePath();\n          });\n        }\n      }\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').directive('myDropZone', [\n  '$animate',\n  function ($animate) {\n    return {\n      templateUrl: 'views/myDropZone.html',\n      restrict: 'E',\n      link: function postLink(scope, element, attr) {\n        scope.dropDefault = 'Drop your files here or click here to open a file';\n        scope.dropErrorFileType = 'Error: Could not parse file. The following file types are supported: .WAV .TEXTGRID';\n        scope.dropErrorAPI = 'Sorry ! The File APIs are not fully supported in your browser.';\n        scope.dropNotAllowed = 'File is not allowed';\n        scope.dropAllowed = 'Drop files to start loading';\n        scope.dropParsingStarted = 'Parsing started';\n        scope.dropText = scope.dropDefault;\n        scope.dropClass = '';\n        function dragEnterLeave(evt) {\n          evt.preventDefault();\n          scope.$apply(function () {\n            scope.dropText = scope.dropDefault;\n            scope.dropClass = '';\n          });\n        }\n        function handleDragOver(evt) {\n          evt.preventDefault();\n          scope.$apply(function () {\n            scope.dropText = scope.dropAllowed;\n            scope.dropClass = 'over';\n          });\n        }\n        function dropFiles(evt) {\n          evt.stopPropagation();\n          evt.preventDefault();\n          scope.$apply(function () {\n            scope.dropText = scope.dropParsingStarted;\n            scope.dropClass = '';\n            if (window.File && window.FileReader && window.FileList && window.Blob) {\n              scope.dropText = scope.dropParsingStarted;\n              scope.dropClass = 'over';\n              if (evt.originalEvent !== undefined) {\n                if (scope.firefox) {\n                  var dt = evt.originalEvent.dataTransfer;\n                  var files = dt.files;\n                  var count = files.length;\n                  for (var i = 0; i < files.length; i++) {\n                    scope.traverseFileTreeFirefox(files[i]);\n                  }\n                } else {\n                  var items = evt.originalEvent.dataTransfer.items;\n                  for (var i = 0; i < items.length; i++) {\n                    var item = items[i].webkitGetAsEntry();\n                    if (item) {\n                      scope.traverseFileTreeChrome(item);\n                    }\n                  }\n                }\n              } else {\n                scope.dropText = scope.dropErrorFileType;\n                scope.dropClass = '';\n              }\n            } else {\n              scope.$parent.dials.open('views/error.html', 'ModalCtrl', scope.dropErrorAPI);\n              scope.dropText = $scope.dropDefault;\n            }\n          });\n        }\n        element.bind('drop', function (event) {\n          dropFiles(event);\n        });\n        element.bind('dragover', function (event) {\n          handleDragOver(event);\n        });\n        element.bind('dragenter', function (event) {\n          dragEnterLeave(event);\n        });\n        element.bind('dragleave', function (event) {\n          dragEnterLeave(event);\n        });\n        element.bind('click', function (event) {\n          element.context.children[0].children[1].click();\n        });\n      }\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').directive('myDropZoneInput', [\n  '$animate',\n  function ($animate) {\n    return {\n      templateUrl: 'views/myDropZoneInput.html',\n      restrict: 'E',\n      link: function postLink(scope, element, attr) {\n        scope.handler = false;\n        function handleFilesonChange() {\n          scope.handler = true;\n          var loadedFiles = element.context.children.fileDialog;\n          if (scope.firefox) {\n            for (var i = 0; i < loadedFiles.files.length; i++) {\n              var file = loadedFiles.files[i];\n              var extension = file.name.substr(file.name.lastIndexOf('.') + 1).toUpperCase();\n              if (extension === 'WAV' && file.type.match('audio/x-wav')) {\n                scope.wav = file;\n                scope.handleLocalFiles();\n              } else if (extension === 'TEXTGRID') {\n                scope.grid = file;\n              } else {\n                scope.other = file;\n              }\n            }\n          } else {\n            for (var i = 0; i < loadedFiles.files.length; i++) {\n              var file = loadedFiles.files[i];\n              var extension = file.name.substr(file.name.lastIndexOf('.') + 1).toUpperCase();\n              if (extension === 'WAV' && file.type.match('audio/wav')) {\n                scope.wav = file;\n                scope.handleLocalFiles();\n              } else if (extension === 'TEXTGRID') {\n                scope.grid = file;\n              } else {\n                scope.other = file;\n              }\n            }\n          }\n        }\n        element.bind('change', function (event) {\n          handleFilesonChange(event);\n        });\n        element.bind('click', function (event) {\n          var elem = angular.element('input');\n          if (elem[1] !== undefined) {\n            elem[1].click();\n          }\n        });\n      }\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').directive('emuwebapp', [\n  'viewState',\n  'Iohandlerservice',\n  'ConfigProviderService',\n  function (viewState, Iohandlerservice, ConfigProviderService) {\n    return {\n      templateUrl: 'views/emuwebapp.html',\n      restrict: 'E',\n      scope: {\n        audioGetUrl: '@',\n        labelGetUrl: '@',\n        labelType: '@'\n      },\n      link: function postLink(scope, element, attrs) {\n        ////////////////////////\n        // Bindings\n        element.bind('mouseenter', function (event) {\n          viewState.mouseInEmuWebApp = true;\n        });\n        element.bind('mouseleave', function (event) {\n          viewState.mouseInEmuWebApp = false;\n        });\n        ///////////////////////\n        // observe attrs\n        attrs.$observe('audioGetUrl', function (val) {\n          if (val !== undefined && val !== '') {\n            ConfigProviderService.embeddedVals.audioGetUrl = val;\n          }\n        });\n        attrs.$observe('labelGetUrl', function (val) {\n          if (val !== undefined && val !== '') {\n            ConfigProviderService.embeddedVals.labelGetUrl = val;\n          }\n        });\n        attrs.$observe('labelType', function (val) {\n          if (val !== undefined && val !== '') {\n            ConfigProviderService.embeddedVals.labelType = val;\n          }\n        });\n      }\n    };\n  }\n]);\n'use strict';\nangular.module('emuwebApp').service('Validationservice', [\n  '$http',\n  '$q',\n  function Validationservice($http, $q) {\n    //shared service object to be returned\n    var sServObj = {};\n    var schemasJsos = [];\n    var names = [\n        'annotationFileSchema',\n        'emuwebappConfigSchema',\n        'DBconfigFileSchema',\n        'bundleListSchema'\n      ];\n    /**\n\t\t *\n\t\t */\n    sServObj.loadSchemas = function () {\n      var proms = [];\n      angular.forEach(names, function (n) {\n        proms.push($http.get('schemaFiles/' + n + '.json'));\n      });\n      return $q.all(proms);\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.setSchemas = function (schemaArr) {\n      angular.forEach(schemaArr, function (s) {\n        schemasJsos.push({\n          name: s.config.url,\n          data: s.data\n        });\n      });\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.validateJSO = function (schemaName, jso) {\n      var schema;\n      angular.forEach(schemasJsos, function (s) {\n        if (s.name === 'schemaFiles/' + schemaName + '.json') {\n          schema = s;\n        }\n      });\n      if (schema !== undefined && tv4.validate(jso, schema.data)) {\n        return true;\n      } else {\n        if (schema === undefined) {\n          return 'Schema: ' + schemaName + ' is currently undefined! This is probably due to a misnamed schema file on the server...';\n        } else {\n          return tv4.error;\n        }\n      }\n    };\n    return sServObj;\n  }\n]);\n'use strict';\nangular.module('emuwebApp').service('ArrayHelperService', [\n  '$q',\n  'dialogService',\n  function ArrayHelperService($q, dialogService) {\n    // shared service object\n    var sServObj = {};\n    var defer;\n    // defer promise obj\n    /**\n\t\t * convert values of array to max values\n\t\t *\n\t\t * @param arr array to convert\n\t\t * @returns array containing Math.abs() values\n\t\t */\n    sServObj.convertToAbsValues = function (arr) {\n      for (var i = 0; i < arr.length; i++) {\n        arr[i] = Math.abs(arr[i]);\n      }\n      return arr;\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.multiplyEachElement = function (arr, val) {\n      for (var i = 0; i < arr.length; i++) {\n        arr[i] = arr[i] * val;\n      }\n      return arr;\n    };\n    /**\n\t\t * find value between two points\n\t\t * by linearly interpolating them\n\t\t */\n    sServObj.interp2points = function (x0, y0, x1, y1, x) {\n      return y0 + (y1 - y0) * ((x - x0) / (x1 - x0));\n    };\n    /**\n\t\t * find min or maximum value in array\n\t\t *\n\t\t * @param arr array to search in\n\t\t * @param minOrMax string value either 'min' or 'max'\n\t\t * @returns object with attributes val and idx\n\t\t */\n    sServObj.findMinMax = function (arr, minOrMax) {\n      var val, idx;\n      if (minOrMax === 'min') {\n        val = Infinity;\n        for (var i = 0; i < arr.length; i++) {\n          if (arr[i] < val) {\n            val = arr[i];\n            idx = i;\n          }\n        }\n      } else if (minOrMax === 'max') {\n        val = -Infinity;\n        for (var i = 0; i < arr.length; i++) {\n          if (arr[i] > val) {\n            val = arr[i];\n            idx = i;\n          }\n        }\n      }\n      return {\n        'val': val,\n        'idx': idx\n      };\n    };\n    /**\n\t\t *\n\t\t */\n    sServObj.flattenArrayOfArray = function (arrOfArrs) {\n      var merged = [];\n      merged = merged.concat.apply(merged, arrOfArrs);\n      return merged;\n    };\n    /**\n\t\t * convert array to an array that contains\n\t\t * objects of the form {x: i, y:y[i]}\n\t\t */\n    sServObj.convertArrayToXYjsoArray = function (y) {\n      var xyArray = [];\n      for (var i = 0; i < y.length; i++) {\n        xyArray.push({\n          x: i,\n          y: y[i]\n        });\n      }\n      return xyArray;\n    };\n    return sServObj;\n  }\n]);\n'use strict';\nangular.module('emuwebApp').service('AnagestService', [\n  '$q',\n  '$log',\n  'viewState',\n  'LevelService',\n  'ConfigProviderService',\n  'Ssffdataservice',\n  'ArrayHelperService',\n  'dialogService',\n  'HistoryService',\n  function AnagestService($q, $log, viewState, LevelService, ConfigProviderService, Ssffdataservice, ArrayHelperService, dialogService, HistoryService) {\n    // shared service object\n    var sServObj = {};\n    // defer object \n    var defer;\n    /**\n\t\t *\n\t\t */\n    sServObj.insertAnagestEvents = function () {\n      var defer = $q.defer();\n      // precheck if there are items in selection\n      var itemInSel = viewState.getItemsInSelection(LevelService.data.levels);\n      if (itemInSel.length !== 0) {\n        dialogService.open('views/error.html', 'ModalCtrl', 'There are already events in the selected area! This is not permitted...').then(function () {\n          defer.reject();\n        });\n        return defer;\n      }\n      // vertical position signal\n      var trackName = ConfigProviderService.getLevelDefinition(viewState.getcurClickLevelName()).anagestConfig.verticalPosSsffTrackName;\n      var tr = ConfigProviderService.getSsffTrackConfig(trackName);\n      var col = Ssffdataservice.getColumnOfTrack(tr.name, tr.columnName);\n      var sRaSt = Ssffdataservice.getSampleRateAndStartTimeOfTrack(tr.name);\n      // velocity signal\n      var vTrackName = ConfigProviderService.getLevelDefinition(viewState.getcurClickLevelName()).anagestConfig.velocitySsffTrackName;\n      var vTr = ConfigProviderService.getSsffTrackConfig(vTrackName);\n      var vCol = Ssffdataservice.getColumnOfTrack(vTr.name, vTr.columnName);\n      var vSRaSt = Ssffdataservice.getSampleRateAndStartTimeOfTrack(vTr.name);\n      if (col.length !== 1 || vCol.length !== 1) {\n        dialogService.open('views/error.html', 'ModalCtrl', 'UPS... the column length of of one of the tracks is != 1 this means something is badly configured in the DB!!!').then(function () {\n          defer.reject();\n        });\n        return defer;\n      }\n      // flatten columns\n      var flatColVals = ArrayHelperService.flattenArrayOfArray(col.values);\n      var flatVcolVals = ArrayHelperService.flattenArrayOfArray(vCol.values);\n      /////////////////////////////////////////\n      var gdat = [\n          NaN,\n          NaN\n        ];\n      var vdat = [\n          NaN,\n          NaN\n        ];\n      var ndat = [\n          NaN,\n          NaN\n        ];\n      var cdat = [\n          NaN,\n          NaN\n        ];\n      // easiest way to handle non-tangential signals (and has no effect on tangential signals)\n      flatVcolVals = ArrayHelperService.convertToAbsValues(flatVcolVals);\n      // selected column samples\n      var startTimeSel = viewState.getSelectedStartTime();\n      var endTimeSel = viewState.getSelectedEndTime();\n      var colStartSampleNr = Math.round(startTimeSel * sRaSt.sampleRate + sRaSt.startTime);\n      var colEndSampleNr = Math.round(endTimeSel * sRaSt.sampleRate + sRaSt.startTime);\n      var nrOfSamples = colEndSampleNr - colStartSampleNr;\n      var selCol = flatColVals.slice(colStartSampleNr, colStartSampleNr + nrOfSamples);\n      var selVCol = flatVcolVals.slice(colStartSampleNr, colStartSampleNr + nrOfSamples);\n      ;\n      // maxConstr\n      var maxVerticalPos = ArrayHelperService.findMinMax(selCol, 'max');\n      cdat[0] = maxVerticalPos.idx;\n      // max vel before max constriction\n      var maxVelBeforeMaxConstr = ArrayHelperService.findMinMax(selVCol.slice(0, cdat[0] + 1), 'max');\n      vdat[0] = maxVelBeforeMaxConstr.idx;\n      // min vel before max vel\n      var minVelBeforeMaxVel = ArrayHelperService.findMinMax(selVCol.slice(0, vdat[0] + 1), 'min');\n      // gesture onset\n      $log.info('Looking for gesture onset');\n      sServObj.interactiveFindThresholds(selVCol.slice(0, vdat[0] + 1), minVelBeforeMaxVel.val, maxVelBeforeMaxConstr.val, ConfigProviderService.getLevelDefinition(viewState.getcurClickLevelName()).anagestConfig.threshold, 1, 'Looking for gesture onset').then(function (resp) {\n        // keyboard;\n        var on20 = resp;\n        gdat[0] = on20;\n        // min vel between max vel 1 and max constriction\n        var minVelBetwMaxVel1maxConstr = ArrayHelperService.findMinMax(selVCol.slice(vdat[0], cdat[0] + 1), 'min');\n        var minp = minVelBetwMaxVel1maxConstr.idx + vdat[0];\n        // nucleus onset\n        $log.info('Looking for nucleus onset');\n        sServObj.interactiveFindThresholds(selVCol.slice(vdat[0], minp + 1), minVelBetwMaxVel1maxConstr.val, maxVelBeforeMaxConstr.val, ConfigProviderService.getLevelDefinition(viewState.getcurClickLevelName()).anagestConfig.threshold, -1, 'Looking for nucleus onset').then(function (resp) {\n          var off20 = resp;\n          ndat[0] = off20 + vdat[0];\n          // max vel after max constriction\n          var maxVelAfterMaxConstr = ArrayHelperService.findMinMax(selVCol.slice(cdat[0]), 'max');\n          // max vel before max constriction\n          vdat[1] = maxVelAfterMaxConstr.idx + cdat[0];\n          // minimum between max constriction and max vel after constriction\n          var minBetwMaxConstrMaxVelConstr = ArrayHelperService.findMinMax(selVCol.slice(cdat[0], vdat[1] + 1), 'min');\n          minp = minBetwMaxConstrMaxVelConstr.idx + cdat[0];\n          // nucleus offset\n          $log.info('Looking for nucleus offset');\n          sServObj.interactiveFindThresholds(selVCol.slice(minp, vdat[1] + 1), minBetwMaxConstrMaxVelConstr.val, maxVelAfterMaxConstr.val, ConfigProviderService.getLevelDefinition(viewState.getcurClickLevelName()).anagestConfig.threshold, 1, 'Looking for nucleus offset').then(function (resp) {\n            var on20 = resp;\n            ndat[1] = on20 + minp;\n            // minimum velocity after max vel after constriction\n            var minVelAfterMaxVelAfterConstr = ArrayHelperService.findMinMax(selVCol.slice(vdat[1]), 'min');\n            minp = minVelAfterMaxVelAfterConstr.idx + vdat[1];\n            // gesture offset\n            $log.info('Looking for gesture offset');\n            sServObj.interactiveFindThresholds(selVCol.slice(vdat[1], minp + 1), minVelAfterMaxVelAfterConstr.val, maxVelAfterMaxConstr.val, ConfigProviderService.getLevelDefinition(viewState.getcurClickLevelName()).anagestConfig.threshold, -1, 'Looking for gesture offset').then(function (resp) {\n              var off20 = resp;\n              gdat[1] = off20 + vdat[1];\n              // insert points\n              // var insPoint;\n              var curLabel;\n              // console.log(gdat)\n              gdat[0] = Ssffdataservice.calculateSamplePosInVP(colStartSampleNr + gdat[0], sRaSt.sampleRate, sRaSt.startTime);\n              gdat[1] = Ssffdataservice.calculateSamplePosInVP(colStartSampleNr + gdat[1], sRaSt.sampleRate, sRaSt.startTime);\n              curLabel = ConfigProviderService.getLevelDefinition(viewState.getcurClickLevelName()).anagestConfig.gestureOnOffsetLabels[0];\n              var gdat0insPoint = LevelService.insertPoint(viewState.getcurClickLevelName(), gdat[0], curLabel);\n              HistoryService.updateCurChangeObj({\n                'type': 'ESPS',\n                'action': 'INSERTPOINT',\n                'name': viewState.getcurClickLevelName(),\n                'start': gdat[0],\n                'id': gdat0insPoint.id,\n                'pointName': curLabel\n              });\n              curLabel = ConfigProviderService.getLevelDefinition(viewState.getcurClickLevelName()).anagestConfig.gestureOnOffsetLabels[1];\n              var gdat1insPoint = LevelService.insertPoint(viewState.getcurClickLevelName(), gdat[1], curLabel);\n              HistoryService.updateCurChangeObj({\n                'type': 'ESPS',\n                'action': 'INSERTPOINT',\n                'name': viewState.getcurClickLevelName(),\n                'start': gdat[1],\n                'id': gdat1insPoint.id,\n                'pointName': curLabel\n              });\n              // console.log(vdat);\n              vdat[0] = Ssffdataservice.calculateSamplePosInVP(colStartSampleNr + vdat[0], sRaSt.sampleRate, sRaSt.startTime);\n              vdat[1] = Ssffdataservice.calculateSamplePosInVP(colStartSampleNr + vdat[1], sRaSt.sampleRate, sRaSt.startTime);\n              curLabel = ConfigProviderService.getLevelDefinition(viewState.getcurClickLevelName()).anagestConfig.maxVelocityOnOffsetLabels[0];\n              var vdat0insPoint = LevelService.insertPoint(viewState.getcurClickLevelName(), vdat[0], curLabel);\n              HistoryService.updateCurChangeObj({\n                'type': 'ESPS',\n                'action': 'INSERTPOINT',\n                'name': viewState.getcurClickLevelName(),\n                'start': vdat[0],\n                'id': vdat0insPoint.id,\n                'pointName': curLabel\n              });\n              curLabel = ConfigProviderService.getLevelDefinition(viewState.getcurClickLevelName()).anagestConfig.maxVelocityOnOffsetLabels[1];\n              var vdat1insPoint = LevelService.insertPoint(viewState.getcurClickLevelName(), vdat[1], curLabel);\n              HistoryService.updateCurChangeObj({\n                'type': 'ESPS',\n                'action': 'INSERTPOINT',\n                'name': viewState.getcurClickLevelName(),\n                'start': vdat[1],\n                'id': vdat1insPoint.id,\n                'pointName': curLabel\n              });\n              // console.log(ndat);\n              ndat[0] = Ssffdataservice.calculateSamplePosInVP(colStartSampleNr + ndat[0], sRaSt.sampleRate, sRaSt.startTime);\n              ndat[1] = Ssffdataservice.calculateSamplePosInVP(colStartSampleNr + ndat[1], sRaSt.sampleRate, sRaSt.startTime);\n              curLabel = ConfigProviderService.getLevelDefinition(viewState.getcurClickLevelName()).anagestConfig.constrictionPlateauBeginEndLabels[0];\n              var ndat0insPoint = LevelService.insertPoint(viewState.getcurClickLevelName(), ndat[0], curLabel);\n              HistoryService.updateCurChangeObj({\n                'type': 'ESPS',\n                'action': 'INSERTPOINT',\n                'name': viewState.getcurClickLevelName(),\n                'start': ndat[0],\n                'id': ndat0insPoint.id,\n                'pointName': curLabel\n              });\n              curLabel = ConfigProviderService.getLevelDefinition(viewState.getcurClickLevelName()).anagestConfig.constrictionPlateauBeginEndLabels[1];\n              var ndat1insPoint = LevelService.insertPoint(viewState.getcurClickLevelName(), ndat[1], curLabel);\n              HistoryService.updateCurChangeObj({\n                'type': 'ESPS',\n                'action': 'INSERTPOINT',\n                'name': viewState.getcurClickLevelName(),\n                'start': ndat[1],\n                'id': ndat1insPoint.id,\n                'pointName': curLabel\n              });\n              // console.log(cdat);\n              cdat[0] = Ssffdataservice.calculateSamplePosInVP(colStartSampleNr + cdat[0], sRaSt.sampleRate, sRaSt.startTime);\n              curLabel = ConfigProviderService.getLevelDefinition(viewState.getcurClickLevelName()).anagestConfig.maxConstrictionLabel;\n              var cdat0insPoint = LevelService.insertPoint(viewState.getcurClickLevelName(), cdat[0], curLabel);\n              HistoryService.updateCurChangeObj({\n                'type': 'ESPS',\n                'action': 'INSERTPOINT',\n                'name': viewState.getcurClickLevelName(),\n                'start': cdat[0],\n                'id': cdat0insPoint.id,\n                'pointName': curLabel\n              });\n              var linkLevelName = ConfigProviderService.getLevelDefinition(viewState.getcurClickLevelName()).anagestConfig.autoLinkLevelName;\n              var linkLevelDetails = LevelService.getLevelDetails(linkLevelName);\n              var linkLevelLabels = LevelService.getAllLabelsOfLevel(linkLevelDetails);\n              console.log(linkLevelLabels);\n              dialogService.open('views/SelectLabelModal.html', 'SelectLabelModalCtrl', linkLevelLabels).then(function (itemIdx) {\n                var childIDs = [\n                    gdat0insPoint.id,\n                    gdat1insPoint.id,\n                    vdat0insPoint.id,\n                    vdat1insPoint.id,\n                    ndat0insPoint.id,\n                    ndat1insPoint.id,\n                    cdat0insPoint.id\n                  ];\n                LevelService.addLinkToParent(linkLevelDetails.level.items[itemIdx].id, childIDs);\n                HistoryService.updateCurChangeObj({\n                  'type': 'ESPS',\n                  'action': 'LINKTOPARENT',\n                  'parentID': linkLevelDetails.level.items[itemIdx].id,\n                  'childIDs': childIDs\n                });\n                HistoryService.addCurChangeObjToUndoStack();\n              });\n              defer.resolve();\n            });\n          });\n        });\n      }, function () {\n        console.error('rejected duuuude!!!!');\n      });\n      return defer.promise;\n    };\n    /**\n\t\t * find threshold in array (an adapted reimplementation of findth.m by\n\t\t * Phil Hoole Version 17.6.2006)\n\t\t *\n\t\t * @param x\n\t\t * @param minVal\n\t\t * @param maxVal\n\t\t * @param threshold\n\t\t * @param direction\n\t\t * @param descriptions describes the task\n\t\t * @returns promise that resolves to threshold value\n\t\t */\n    sServObj.interactiveFindThresholds = function (x, minVal, maxVal, threshold, direction, description) {\n      // console.log('interactiveFindThresholds');\n      var thdat = minVal + (maxVal - minVal) * threshold;\n      var thdir = direction;\n      thdat = thdat * thdir;\n      var xx = ArrayHelperService.multiplyEachElement(x, thdir);\n      // handle positive/neg.\n      var lx = xx.length;\n      var xsh = xx.slice(1, lx);\n      var loguk = 0;\n      var higuk = lx - 1;\n      // console.log(lx);\n      // console.log(xx);\n      // console.log(xsh);\n      // console.log(loguk);\n      // console.log(higuk);\n      // vz=find((xsh>=thdat)&(xx(1:(lx-1))<thdat));\n      var vz = [];\n      for (var i = 0; i < xx.length; i++) {\n        if (xsh[i] >= thdat && xx[i] < thdat) {\n          vz.push(i);\n        }\n      }\n      // anavv=find(vz>=loguk & vz<=higuk);\n      var anavv = [];\n      for (var i = 0; i < vz.length; i++) {\n        if (vz[i] >= loguk && vz[i] <= higuk) {\n          anavv.push(i);\n        }\n      }\n      if (anavv.length > 1) {\n        defer = $q.defer();\n        var infos = {};\n        infos.description = description;\n        infos.options = [];\n        infos.y = xx;\n        infos.minVal = minVal;\n        infos.maxVal = maxVal;\n        infos.threshold = threshold;\n        for (var i = 0; i < vz.length; i++) {\n          infos.options.push({\n            'thresholdIdx': vz[i],\n            'thresholdValue': xx[i]\n          });\n        }\n        dialogService.open('views/SelectThresholdModal.html', 'SelectThresholdModalCtrl', infos).then(function (resp) {\n          var ap = vz[anavv[resp]];\n          // console.log('-----')\n          // console.log(xx[ap])\n          // console.log(xx[ap + 1])\n          // console.log(ap);\n          // console.log(ap + 1);\n          ap = ArrayHelperService.interp2points(xx[ap], ap, xx[ap + 1], ap + 1, thdat);\n          defer.resolve(ap);\n        });\n        return defer.promise;\n      } else if (anavv.length === 0) {\n        defer = $q.defer();\n        dialogService.open('views/error.html', 'ModalCtrl', 'Could not find any values that step over the threshold!!').then(function () {\n          defer.reject('Could not find any values that step over the threshold!!');\n        });\n        return defer.promise;\n      } else {\n        defer = $q.defer();\n        var ap = vz[anavv[0]];\n        ap = ArrayHelperService.interp2points(xx[ap], ap, xx[ap + 1], ap + 1, thdat);\n        defer.resolve(ap);\n        return defer.promise;\n      }\n    };\n    return sServObj;\n  }\n]);\n'use strict';\n/**\n * @ngdoc directive\n * @name emuWebAppApp.directive:lineChart\n * @description\n * # lineChart\n */\nangular.module('emuwebApp').directive('lineChart', function () {\n  return {\n    restrict: 'E',\n    scope: {\n      data: '=',\n      threshold: '='\n    },\n    link: function postLink(scope, element, attrs) {\n      //////////////////////\n      // watches \n      scope.$watch('data', function () {\n        scope.render(scope.data);\n      }, true);\n      //////////////////////\n      //Set margins, width, and height\n      var margin = {\n          top: 20,\n          right: 20,\n          bottom: 20,\n          left: 40\n        }, width = 400 - margin.left - margin.right, height = 200 - margin.top - margin.bottom;\n      //Create the d3 element and position it based on margins\n      var svg = d3.select(element[0]).append('svg').attr('width', width + margin.left + margin.right).attr('height', height + margin.top + margin.bottom).append('g').attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n      //Create the scales we need for the graph\n      var x = d3.scale.linear().range([\n          0,\n          width\n        ]);\n      var y = d3.scale.linear().range([\n          height,\n          0\n        ]);\n      //Create the axes we need for the graph\n      var xAxis = d3.svg.axis().scale(x).tickSize(5).tickSubdivide(true);\n      var yAxis = d3.svg.axis().scale(y).orient('left');\n      // line drawing function\n      var lineFunc = d3.svg.line().x(function (d) {\n          return x(d.x);\n        }).y(function (d) {\n          return y(d.y);\n        }).interpolate('linear');\n      /**\n\t\t\t\t *\n\t\t\t\t */\n      scope.render = function (data) {\n        //Set our scale's domains\n        // x.domain(data.map(function (d) {\n        // \treturn d.name;\n        // }));\n        // y.domain([0, d3.max(data, function (d) {\n        // \treturn d.count;\n        // })]);\n        x.domain([\n          d3.min(data, function (d) {\n            return d.x;\n          }),\n          d3.max(data, function (d) {\n            return d.x;\n          })\n        ]);\n        y.domain([\n          d3.min(data, function (d) {\n            return d.y;\n          }),\n          d3.max(data, function (d) {\n            return d.y;\n          })\n        ]);\n        //Remove the axes so we can draw updated ones\n        svg.selectAll('g.axis').remove();\n        //Render X axis\n        svg.append('g').attr('class', 'x axis').attr('transform', 'translate(0,' + height + ')').call(xAxis);\n        //Render Y axis\n        svg.append('g').attr('class', 'y axis').call(yAxis);\n        // Render path\n        var lines = svg.append('svg:path').attr('d', lineFunc(data)).attr('stroke', 'red').attr('stroke-width', 1).attr('fill', 'none');\n        // draw threshold SIC SIC SIC... not working yet!\n        svg.append('svg:line').attr('x1', 5).attr('y1', 5).attr('x2', 200).attr('y2', 200).attr('class', 'label-line');\n        var verticalLine = svg.append('line').attr({\n            'x1': x(scope.threshold),\n            'y1': 0,\n            'x2': x(scope.threshold),\n            'y2': height\n          }).attr('stroke', 'steelblue').attr('class', 'verticalLine');  //Create or update the bar data\n                                                                         // var bars = svg.selectAll('.bar').data(data);\n                                                                         // bars.enter()\n                                                                         // \t.append('rect')\n                                                                         // \t.attr('class', 'bar')\n                                                                         // \t.attr('x', function (d) {\n                                                                         // \t\treturn x(d.name);\n                                                                         // \t})\n                                                                         // \t.attr('width', x.rangeBand());\n                                                                         //Animate bars\n                                                                         // bars\n                                                                         // \t.transition()\n                                                                         // \t.duration(1000)\n                                                                         // \t.attr('height', function (d) {\n                                                                         // \t\treturn height - y(d.count);\n                                                                         // \t})\n                                                                         // \t.attr('y', function (d) {\n                                                                         // \t\treturn y(d.count);\n                                                                         // \t})\n      };\n    }\n  };\n});"]}